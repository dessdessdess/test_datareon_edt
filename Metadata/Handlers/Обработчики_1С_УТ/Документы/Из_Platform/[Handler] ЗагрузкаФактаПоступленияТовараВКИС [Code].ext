
//Определение переменных
ПустойИдентификатор = "00000000-0000-0000-0000-000000000000";

ВидыДокументов = Новый Массив;
ВидыДокументов.Добавить("ВозвратТоваровПоставщику");
ВидыДокументов.Добавить("КорректировкаРеализации");
ВидыДокументов.Добавить("ПеремещениеТоваров");
ВидыДокументов.Добавить("ПоступлениеТоваровУслуг");   

ВидыПартий = Новый Массив;
ВидыПартий.Добавить("СерииНоменклатуры");
ВидыПартий.Добавить("ХарактеристикиНоменклатуры");

//ЧтениеJSON = Новый ЧтениеJSON;
//ЧтениеJSON.УстановитьСтроку(ТелоСообщения());
//СтруктураЗапроса = ПрочитатьJSON(ЧтениеJSON, Ложь); 

//Получение тела сообщения
xdtoОбъект = сшпОбщегоНазначения.ПолучитьОбъектXDTO(Перечисления.сшпФорматыСообщений.JSON, ТелоСообщения());

ДокументОснованиеXDTO = Неопределено; 
ТаблицТоваровXDTO = Неопределено;

Свойства = xdtoОбъект.Свойства();
Если Свойства.Получить("Данные") <> Неопределено Тогда
    ДанныеXDTO = xdtoОбъект.Получить("Данные");
    Если ДанныеXDTO <> Неопределено Тогда
        ДокументОснованиеXDTO = ДанныеXDTO.Получить("Ссылка");
		ТаблицаТоваровXDTO = ДанныеXDTO.Получить("Товары");
    КонецЕсли;
КонецЕсли;

Если ДокументОснованиеXDTO <> Неопределено Тогда
	Для Каждого ВидДокумента Из ВидыДокументов Цикл
		ДокументОснование = Документы[ВидДокумента].ПолучитьСсылку(Новый УникальныйИдентификатор(ДокументОснованиеXDTO));   
		Если ОбщегоНазначения.СсылкаСуществует(ДокументОснование) Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
Иначе
	СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
	ТекстОшибки = "В пакете отсутствует ссылка на документ-основание!";
    ВызватьИсключение ТекстОшибки;
КонецЕсли;

///////////////////////// Определим склад /////////////////////////////////////////////
Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
	Склад = ДокументОснование.СкладПолучатель;
ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
	Склад = ДокументОснование.кдСкладПолучатель;
ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
	Склад = ДокументОснование.Сделка.Основание.Склад;
Иначе
	Если ТипЗнч(ДокументОснование.СкладОрдер) = Тип("СправочникСсылка.Склады") Тогда
		Склад = ДокументОснование.СкладОрдер;
	Иначе
		Склад = ДокументОснование.Товары[0].Склад;
	КонецЕсли;
КонецЕсли;

СкладБрака = Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("2c196593-460e-11e7-80c1-000af75854f0")); //Москва РЦ "Брак"
//////////////////////////////////////////////////////////////////////////////////////

///////////////////////// Запись логирования //////////////////
ПараметрыЗаписи = ЛогированиеРаботыAPI.ПараметрыЗаписи();
ПараметрыЗаписи.ОбъектДанных = ДокументОснование;
ПараметрыЗаписи.ТипСобытия = Перечисления.ТипыСобытийЛогаРаботыAPI.ЗаписьРезультатаОбработкиДокументов;
ПараметрыЗаписи.Длительность = 0;
ПараметрыЗаписи.Операция = Перечисления.СкладскиеОперации.Приемка;
ПараметрыЗаписи.Склад = Склад;
ПараметрыЗаписи.Запрос = Строка(ТелоСообщения());
ПараметрыЗаписи.Ответ = "";
ЛогированиеРаботыAPI.Записать(ПараметрыЗаписи);
/////////////////////////////////////////////////////////////////

ТЗ_ТоварыФакт = ДокументОснование.Товары.ВыгрузитьКолонки();
Если ТЗ_ТоварыФакт.Колонки.Найти("Качество") = Неопределено Тогда
	ТЗ_ТоварыФакт.Колонки.Добавить("Качество");
КонецЕсли;	
Если ТЗ_ТоварыФакт.Колонки.Найти("Цена") = Неопределено Тогда
	ТЗ_ТоварыФакт.Колонки.Добавить("Цена");
КонецЕсли;	
Если ТЗ_ТоварыФакт.Колонки.Найти("ДокументРезерва") = Неопределено Тогда
	ТЗ_ТоварыФакт.Колонки.Добавить("ДокументРезерва");
КонецЕсли;	

ТЗ_ТоварыФакт.Колонки.Добавить("Состояние");
ТЗ_ТоварыФакт.Колонки.Добавить("КоличествоОснования");       
ТЗ_ТоварыФакт.Колонки.Добавить("ПоОснованию");       
ТЗ_ТоварыФакт.Колонки.Добавить("ЭтоМотошина");
ТЗ_ТоварыФакт.Колонки.Добавить("ХарактеристикаПоОснованию");
ТЗ_ТоварыФакт.Колонки.Добавить("ДобавлятьВОрдер");       
ТЗ_ТоварыФакт.Колонки.Добавить("Брак", ОбщегоНазначения.ОписаниеТипаИзСтроки("Булево")); 
//Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
ТЗ_ТоварыФакт.Колонки.Добавить("КоличествоПринято");
ТЗ_ТоварыФакт.Колонки.Добавить("КоличествоБрак");
ТЗ_ТоварыФакт.Колонки.Добавить("ТоварСБраком");
//КонецЕсли;

ТЗ_Расхождения = ТЗ_ТоварыФакт.СкопироватьКолонки();

ТЗ_ЗагруженныеКМ_Из_WMS = Новый ТаблицаЗначений;
ТЗ_ЗагруженныеКМ_Из_WMS.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
ТЗ_ЗагруженныеКМ_Из_WMS.Колонки.Добавить("ХарактеристикаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
ТЗ_ЗагруженныеКМ_Из_WMS.Колонки.Добавить("ДатаПроизводства");
ТЗ_ЗагруженныеКМ_Из_WMS.Колонки.Добавить("ШтрихкодУпаковки");
ТЗ_ЗагруженныеКМ_Из_WMS.Колонки.Добавить("МаркаСуществует");

ТоварыОснования = ДокументОснование.Товары.Выгрузить();
ТоварыОснования.Колонки.Добавить("Обработано");
ТоварыОснования.ЗаполнитьЗначения(Ложь, "Обработано");  

Если ТаблицаТоваровXDTO <> Неопределено Тогда
	текТаблица = ТаблицаТоваровXDTO.Последовательность();
	Для Инд = 0 По текТаблица.Количество()-1 Цикл
		НоменклатураXDTO = Неопределено;
        ХарактеристикаXDTO = Неопределено;
		УпаковкаXDTO = Неопределено;
        ПартияXDTO = Неопределено;
        ДатаПроизводстваXDTO = "";
        КоличествоXDTO = 0;
        КодСтрокиXDTO = "";
        ТаблицаКМ_XDTO = Неопределено;

		xdtoСтрока = текТаблица.ПолучитьЗначение(Инд); 
		
		Свойства = xdtoСтрока.Свойства();
		
        Если Свойства.Получить("Номенклатура") <> Неопределено Тогда
            ДанныеНоменклатурыXDTO = xdtoСтрока.Получить("Номенклатура");
            Если ДанныеНоменклатурыXDTO <> Неопределено Тогда
                НоменклатураXDTO = ДанныеНоменклатурыXDTO.Получить("Ссылка"); 
            КонецЕсли;
        КонецЕсли;
        Если Свойства.Получить("Характеристика") <> Неопределено Тогда
            ДанныеХарактеристикиXDTO = xdtoСтрока.Получить("Характеристика");
            Если ДанныеХарактеристикиXDTO <> Неопределено Тогда
                ХарактеристикаXDTO = ДанныеХарактеристикиXDTO.Получить("Ссылка"); 
            КонецЕсли;
        КонецЕсли;
        Если Свойства.Получить("Упаковка") <> Неопределено Тогда
            ДанныеУпаковкиXDTO = xdtoСтрока.Получить("Упаковка");
            Если ДанныеУпаковкиXDTO <> Неопределено Тогда
                УпаковкаXDTO = ДанныеУпаковкиXDTO.Получить("Ссылка"); 
            КонецЕсли;
        КонецЕсли;
        Если Свойства.Получить("Партия") <> Неопределено Тогда
            ДанныеПартииXDTO = xdtoСтрока.Получить("Партия");
            Если ДанныеПартииXDTO <> Неопределено Тогда
                ПартияXDTO = ДанныеПартииXDTO.Получить("Ссылка"); 
                ДатаПроизводстваXDTO = ДанныеПартииXDTO.Получить("ДатаПроизводства");
            КонецЕсли;
        КонецЕсли;
        Если Свойства.Получить("Состояние") <> Неопределено Тогда
			ДанныеСостояниеТовараXDTO = xdtoСтрока.Получить("Состояние");
			Если ДанныеСостояниеТовараXDTO <> Неопределено Тогда
				СостояниеТовараXDTO = ДанныеСостояниеТовараXDTO.Получить("Ссылка");
			КонецЕсли;
		КонецЕсли;
        Если Свойства.Получить("Количество") <> Неопределено Тогда
            КоличествоXDTO = xdtoСтрока.Получить("Количество");
        КонецЕсли;
        Если Свойства.Получить("КодСтроки") <> Неопределено Тогда
            КодСтрокиXDTO = xdtoСтрока.Получить("КодСтроки"); 
		Иначе
			КодСтрокиXDTO = "";
        КонецЕсли;
        Если Свойства.Получить("ДанныеСерийногоУчета") <> Неопределено Тогда
            ТаблицаСерийныхНомеровXDTO = xdtoСтрока.Получить("ДанныеСерийногоУчета");
        КонецЕсли;
		
		//Номенклатура
		Если НоменклатураXDTO <> ПустойИдентификатор И ЗначениеЗаполнено(НоменклатураXDTO) Тогда
			Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(НоменклатураXDTO));
			Если Номенклатура.ПолучитьОбъект() = Неопределено Тогда
				СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
				ТекстОшибки = "В КИС отсутствует номенклатура с УИД: "+НоменклатураXDTO;
			    ВызватьИсключение ТекстОшибки;
			КонецЕсли;
		КонецЕсли;
		
		//Характеристика	
		Если ХарактеристикаXDTO <> ПустойИдентификатор И ЗначениеЗаполнено(ХарактеристикаXDTO) Тогда
			Характеристика = Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ХарактеристикаXDTO));
			Если Характеристика.ПолучитьОбъект() = Неопределено Тогда
				Характеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
			КонецЕсли;
		Иначе                                                                          
			Характеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		КонецЕсли;	
		//Партия
		Если ПартияXDTO <> ПустойИдентификатор И ЗначениеЗаполнено(ПартияXDTO) Тогда
			Для Каждого ВидПартии Из ВидыПартий Цикл
				текСсылка = Справочники[ВидПартии].ПолучитьСсылку(Новый УникальныйИдентификатор(ПартияXDTO));   
				Если текСсылка.ПолучитьОбъект() <> Неопределено Тогда
					Партия = текСсылка;
					Прервать; 
				Иначе
					Партия = Неопределено;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	

        //Состояние	
		Если СостояниеТовараXDTO <> ПустойИдентификатор И ЗначениеЗаполнено(СостояниеТовараXDTO) Тогда
			СостояниеТовара = Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор(СостояниеТовараXDTO));
		    Если СостояниеТовара.ПолучитьОбъект() = Неопределено Тогда
				СостояниеТовара = Справочники.Склады.ПустаяСсылка();
			КонецЕсли;
		Иначе                                                                          
			СостояниеТовара = Справочники.Склады.ПустаяСсылка();
		КонецЕсли;	
		
		НоменклатураПоОснованию = Ложь;
		СтрокаТЧОснования = Неопределено;

		Если КодСтрокиXDTO <> ПустойИдентификатор И ЗначениеЗаполнено(КодСтрокиXDTO) Тогда 
			СтрокаТЧОснования = ТоварыОснования.Найти(СокрЛП(КодСтрокиXDTO), "УникальныйКодСтроки");
			Если СтрокаТЧОснования <> Неопределено Тогда
				НоменклатураПоОснованию = Истина;	
			КонецЕсли;
		КонецЕсли;
		
		Если НоменклатураПоОснованию Тогда
            //++REQ1C-5441 21.04.2025 
            Если Номенклатура.НоменклатурнаяГруппа.КонвертацияОбъектовВВМС = Перечисления.ВариантыКонвертацииТоваровВWMS.НоменклатураХарактеристикапартия Тогда				
				Если Партия <> Неопределено Тогда
					ХарактеристикаНоменклатуры = Партия;
				Иначе
                    Если ЗначениеЗаполнено(ДатаПроизводстваXDTO) Тогда
                        ДатаПартии = ПрочитатьДатуJSON(ДатаПроизводстваXDTO, ФорматДатыJSON.ISO);
                        ГодПартии = Формат(Год(ДатаПартии), "ЧГ=");
                        НаименованиеПратии = Справочники.ХарактеристикиНоменклатуры.НайтиПоНаименованию(ГодПартии, Истина,,Номенклатура);
                        Если ЗначениеЗаполнено(НаименованиеПратии) Тогда
                            ХарактеристикаНоменклатуры = НаименованиеПратии.Ссылка;
                        КонецЕсли;
                    Иначе
                        ХарактеристикаНоменклатуры = СтрокаТЧОснования.ХарактеристикаНоменклатуры;
                    КонецЕсли;
				КонецЕсли;
            КонецЕсли;
            //--REQ1C-5441 21.04.2025
            
            //++REQ1C-5441 21.04.2025 Если строка по уникольному коду есть в основании, но она разделена на несколько строк
            СтрокаТЧФакт = ТЗ_ТоварыФакт.Найти(СокрЛП(КодСтрокиXDTO), "УникальныйКодСтроки");
			Если СтрокаТЧФакт <> Неопределено И НЕ Номенклатура.НоменклатурнаяГруппа.КонвертацияОбъектовВВМС = Перечисления.ВариантыКонвертацииТоваровВWMS.НоменклатураХарактеристикапартия Тогда
				НоваяСтрока = СтрокаТЧФакт;
				НоваяСтрока.Количество = НоваяСтрока.Количество+КоличествоXDTO; 
			ИначеЕсли СтрокаТЧФакт <> Неопределено И Номенклатура.НоменклатурнаяГруппа.КонвертацияОбъектовВВМС = Перечисления.ВариантыКонвертацииТоваровВWMS.НоменклатураХарактеристикапартия И СтрокаТЧФакт.ХарактеристикаНоменклатуры = ХарактеристикаНоменклатуры Тогда
				НоваяСтрока = СтрокаТЧФакт;
				НоваяСтрока.Количество = НоваяСтрока.Количество+КоличествоXDTO;		
			Иначе
            	НоваяСтрока = ТЗ_ТоварыФакт.Добавить();
				НоваяСтрока.Количество = КоличествоXDTO;
			КонецЕсли;
			//НоваяСтрока = ТЗ_ТоварыФакт.Добавить();
            //--REQ1C-5441 21.04.2025

            ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧОснования,,"Количество");         //++REQ1C-5441 21.04.2025 Количество заполнять не нужно
			НоваяСтрока.ДобавлятьВОрдер = Истина;

			//НоваяСтрока.Брак = Ложь;
			НоваяСтрока.ЭтоМотошина = Номенклатура.НоменклатурнаяГруппа.КонвертацияОбъектовВВМС = Перечисления.ВариантыКонвертацииТоваровВWMS.НоменклатураХарактеристикапартия;

			Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
				НоваяСтрока.КоличествоПринято = КоличествоXDTO;
				Если НоваяСтрока.Брак Тогда
					НоваяСтрока.КоличествоБрак = КоличествоXDTO;
					НоваяСтрока.Брак = Ложь;
				КонецЕсли;
			КонецЕсли;

            //++ Начало: Руслан Абзанов, КД, REQ1C-5458, 21.05.2025
			Если СостояниеТовара = СкладБрака 
                И (ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров")
                    ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации")
                    ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")) Тогда					
					    НоваяСтрока.Брак = Истина;
					    НоваяСтрока.КоличествоБрак = КоличествоXDTO;
			КонецЕсли;
			//-- Конец:  Руслан Абзанов, КД, REQ1C-5458, 21.05.2025
			
			Если Номенклатура.НоменклатурнаяГруппа.КонвертацияОбъектовВВМС = Перечисления.ВариантыКонвертацииТоваровВWMS.НоменклатураХарактеристикапартия Тогда
				//++REQ1C-5441 21.04.2025 Закомментировал
				//Если Партия <> Неопределено Тогда
				//	ХарактеристикаНоменклатуры = Партия;
				//Иначе
                //    Если ЗначениеЗаполнено(ДатаПроизводстваXDTO) Тогда
                //        ДатаПартии = ПрочитатьДатуJSON(ДатаПроизводстваXDTO, ФорматДатыJSON.ISO);
                //        ГодПартии = Формат(Год(ДатаПартии), "ЧГ=");
                //        НаименованиеПратии = Справочники.ХарактеристикиНоменклатуры.НайтиПоНаименованию(ГодПартии, Истина,,Номенклатура);
                //        Если ЗначениеЗаполнено(НаименованиеПратии) Тогда
                //            ХарактеристикаНоменклатуры = НаименованиеПратии.Ссылка;
                //        КонецЕсли;
                //    Иначе
                //        ХарактеристикаНоменклатуры = СтрокаТЧОснования.ХарактеристикаНоменклатуры;
                //    КонецЕсли;
				//КонецЕсли;
				//--REQ1C-5441 21.04.2025 Закомментировал
				НоваяСтрока.Номенклатура = Номенклатура;
				НоваяСтрока.ХарактеристикаНоменклатуры = ХарактеристикаНоменклатуры; 
				НоваяСтрока.ХарактеристикаПоОснованию = СтрокаТЧОснования.ХарактеристикаНоменклатуры;
				
				Если ХарактеристикаНоменклатуры <> СтрокаТЧОснования.ХарактеристикаНоменклатуры Тогда
					Если ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
						НоваяСтрока.ДобавлятьВОрдер = Ложь;
						НоваяСтрока.ПоОснованию = Ложь;
					КонецЕсли;
					Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
						НоваяСтрока.КоличествоПринято = 0;
						НоваяСтрока.КоличествоБрак = 0;
						НоваяСтрока.Брак = Ложь;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
				Количество = СтрокаТЧОснования.КоличествоДоИзменения - СтрокаТЧОснования.Количество;
			Иначе
				Количество = СтрокаТЧОснования.Количество;
			КонецЕсли;

			//НоваяСтрока.Количество = КоличествоXDTO;      //++REQ1C-5441 21.04.2025 Закомментировал
			НоваяСтрока.КоличествоОснования = Количество;
			НоваяСтрока.Качество = Справочники.Качество.Новый;
			НоваяСтрока.ПоОснованию = Истина;
			НоваяСтрока.Состояние = Истина;
			
			Если ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
				НоваяСтрока.ДокументРезерва = СтрокаТЧОснования.ЗаказПокупателя;
			КонецЕсли;
			СтрокаТЧОснования.Обработано = Истина;
		Иначе /// Если номенклатуры нет в основании
			НоваяСтрокаРасхождение = ТЗ_Расхождения.Добавить();
			НоваяСтрокаРасхождение.Номенклатура = Номенклатура;
			НоваяСтрокаРасхождение.ХарактеристикаНоменклатуры = Характеристика;
			Если ЗначениеЗаполнено(УпаковкаXDTO) Тогда
				ЕИ = Справочники.ЕдиницыИзмерения.ПолучитьСсылку(Новый УникальныйИдентификатор(УпаковкаXDTO));
				Если ЕИ.ПолучитьОбъект() <> Неопределено Тогда
					НоваяСтрокаРасхождение.ЕдиницаИзмерения = ЕИ;
					НоваяСтрокаРасхождение.Коэффициент = ЕИ.Коэффициент;
					НоваяСтрокаРасхождение.КоличествоМест = ЕИ.КоличествоМест;
				Иначе
					НоваяСтрокаРасхождение.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
				КонецЕсли;
			КонецЕсли;
			
			НоваяСтрокаРасхождение.Количество = КоличествоXDTO;
			НоваяСтрокаРасхождение.КоличествоОснования = 0;
			НоваяСтрокаРасхождение.Качество = Справочники.Качество.Новый;
			НоваяСтрокаРасхождение.ПоОснованию = Ложь;
			НоваяСтрокаРасхождение.ДобавлятьВОрдер = Ложь;
			НоваяСтрокаРасхождение.ХарактеристикаПоОснованию = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
           	НоваяСтрокаРасхождение.УникальныйКодСтроки = СокрЛП(КодСтрокиXDTO);
			НоваяСтрокаРасхождение.ЭтоМотошина = Номенклатура.НоменклатурнаяГруппа.КонвертацияОбъектовВВМС = Перечисления.ВариантыКонвертацииТоваровВWMS.НоменклатураХарактеристикапартия;
		КонецЕсли;
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") 
            ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
	        Если ТаблицаСерийныхНомеровXDTO <> Неопределено Тогда
	            текТаблицаКМ = ТаблицаСерийныхНомеровXDTO.Последовательность();
				Для ИндКМ = 0 По текТаблицаКМ.Количество()-1 Цикл
					КодМаркировкиXDTO = Неопределено; 
					
					СтрокаТаблицыКМ = текТаблицаКМ.ПолучитьЗначение(ИндКМ); 
					СвойстваТаблицыКМ = СтрокаТаблицыКМ.Свойства();
			        Если СвойстваТаблицыКМ.Получить("СН") <> Неопределено Тогда
			            КодМаркировкиXDTO = СтрокаТаблицыКМ.Получить("СН");
			        КонецЕсли;
					
					GTIN = СокрЛП(Сред(КодМаркировкиXDTO, 1, 14));
					SN = СокрЛП(Сред(КодМаркировкиXDTO, 15));
						
					КодМаркировки = "(01)"+GTIN+"(21)"+SN;

					ШК = Справочники.ШтрихкодыУпаковокТоваров.ПолучитьПоЗначениюШтрихкода(КодМаркировки);

					СтрокаКМ = ТЗ_ЗагруженныеКМ_Из_WMS.Добавить();
					СтрокаКМ.Номенклатура = Номенклатура;
					Если ЗначениеЗаполнено(Партия) И ТипЗнч(Партия) = Тип("СправочникСсылка.ХарактеристикиНоменклатуры") Тогда
						СтрокаКМ.ХарактеристикаНоменклатуры = Партия;
					Иначе
						СтрокаКМ.ХарактеристикаНоменклатуры = Характеристика;
					КонецЕсли;
					СтрокаКМ.ДатаПроизводства = ПрочитатьДатуJSON(ДатаПроизводстваXDTO, ФорматДатыJSON.ISO);; 
					Если ШК = Неопределено Тогда
						СтрокаКМ.ШтрихкодУпаковки = КодМаркировки;     
						СтрокаКМ.МаркаСуществует = Ложь;     
					Иначе
						СтрокаКМ.ШтрихкодУпаковки = ШК;     
						СтрокаКМ.МаркаСуществует = Истина;
					КонецЕсли;  
				КонецЦикла;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
	///////Начало: Обработка не пришедших товаров //////////////

    /////// Доработки по расхождению 24.03.25
	//ТЗ_Расхождения.Колонки.Добавить("ПолностьюНеПринят");
	//Если ТЗ_Расхождения.Количество() > 0 Тогда
	//	ТЗ_Расхождения.ЗаполнитьЗначения(Ложь, "ПолностьюНеПринят");
	//КонецЕсли;
    
	МассивСтрок = ТоварыОснования.НайтиСтроки(Новый Структура("Обработано", Ложь));
	Для Каждого Стр Из МассивСтрок Цикл
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
			Если Стр.ОтражатьТоварныйУчет Тогда
				КоличествоОснования = Стр.КоличествоДоИзменения - Стр.Количество;
			Иначе
				Продолжить;
			КонецЕсли;
		Иначе
			КоличествоОснования = Стр.Количество;
		КонецЕсли;   
		
		НСтр = ТЗ_Расхождения.Добавить();
		ЗаполнитьЗначенияСвойств(НСтр, Стр);
		НСтр.КоличествоОснования = КоличествоОснования;
		Нстр.Количество = 0;
		Нстр.ПоОснованию = Истина;
		Нстр.ДобавлятьВОрдер = Ложь;
		Нстр.ЭтоМотошина = Стр.Номенклатура.НоменклатурнаяГруппа.КонвертацияОбъектовВВМС = Перечисления.ВариантыКонвертацииТоваровВWMS.НоменклатураХарактеристикапартия;
	КонецЦикла;
	///////Конец: Обработка не пришедших товаров //////////////
	
    
	СтруктураТаблицыДляДокументов = ВыполнитьФункцию("ПодготовитьТаблицыДляЗагрузкиВДокументы",ДокументОснование, ТЗ_ТоварыФакт, ТЗ_Расхождения, ТЗ_ЗагруженныеКМ_Из_WMS);
    
    СтатусДокумента = "";
	///////////////// Формирование приходных ордеров ////////////////////////////////////////// 
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ДокПриходныйОрдер = ВыполнитьФункцию("СформироватьДокументыПоВозвратамОтФРТТ", ДокументОснование, Склад, СтруктураТаблицыДляДокументов);	
	Иначе
		РезультатФормированияПО = ВыполнитьФункцию("СформироватьПриходныйОрдерПоТоварам", ДокументОснование, Склад, СтруктураТаблицыДляДокументов);
        ДокПриходныйОрдер = РезультатФормированияПО.ПОСсылка;
        СтатусДокумента = РезультатФормированияПО.СтатусДокумента;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////////
    
	///////////////// Формирование брака ////////////////////////////////////////// 
	Если ЗначениеЗаполнено(ДокПриходныйОрдер) Тогда
		ЕстьБрак = ВыполнитьФункцию("СформироватьДокументыБрака", ДокПриходныйОрдер, СтруктураТаблицыДляДокументов.ТЗБрак, ДокументОснование, Склад);
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////////
    
	/////////////// Формирование расхождений ////////////////////////////////////////
	Если ЗначениеЗаполнено(ДокПриходныйОрдер) Тогда
		ЕстьРасхождения = ВыполнитьФункцию("СформироватьДокументыРасхождения", ДокПриходныйОрдер, ДокументОснование, СтруктураТаблицыДляДокументов);
	КонецЕсли;
	////////////////////////////////////////////////////////////////////////////////
    
    /////////////// Формирование документа заморозки ///////////////////////////////
	Если ЗначениеЗаполнено(ДокПриходныйОрдер) Тогда
		Заморозка = ВыполнитьФункцию("ПроизвестиЗаморозку", ДокПриходныйОрдер);
	КонецЕсли;
	////////////////////////////////////////////////////////////////////////////////

    //REQ1C-5189		
	Если СтатусДокумента = "Размещен" Тогда
		Запись = РегистрыСведений.СтатусВыгруженногоДокументаВWMS.СоздатьМенеджерЗаписи();
		Запись.Период = ТекущаяДата();
		Запись.Документ = ДокументОснование;
		Запись.СтатусWMS = Справочники.СтатусыДокументовWMS.НайтиПоКоду("224");			
		Запись.Записать();
	КонецЕсли;
    //REQ1C-5189
    
КонецЕсли;
