//Определение переменных
ПустойИдентификатор = "00000000-0000-0000-0000-000000000000";

//Получение тела сообщения
xdtoОбъект = сшпОбщегоНазначения.ПолучитьОбъектXDTO(Перечисления.сшпФорматыСообщений.JSON, ТелоСообщения());

ВидыДокументов = Новый Массив;
ВидыДокументов.Добавить("ВозвратТоваровПоставщику");
ВидыДокументов.Добавить("РеализацияТоваровУслуг");
ВидыДокументов.Добавить("ПеремещениеТоваров");

Свойства = xdtoОбъект.Свойства(); 
ТаблицаСтатусовXDTO = xdtoОбъект.Получить("СтатусОтгрузки");
текТаблица = ТаблицаСтатусовXDTO.Последовательность();
Для Инд = 0 По текТаблица.Количество()-1 Цикл
	xdtoСтрока = текТаблица.ПолучитьЗначение(Инд); 
	ПланОтгрузкиXDTO = xdtoСтрока.Получить("ПланОтгрузки");
	
	Если ПланОтгрузкиXDTO <> Неопределено Тогда
		
		ДокументОснованиеXDTO = ПланОтгрузкиXDTO.Получить("Ссылка");
		
		Если ДокументОснованиеXDTO <> Неопределено Тогда
			Для Каждого ВидДокумента Из ВидыДокументов Цикл
				ДокументОснование = Документы[ВидДокумента].ПолучитьСсылку(Новый УникальныйИдентификатор(ДокументОснованиеXDTO));   
				Если ОбщегоНазначения.СсылкаСуществует(ДокументОснование) Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
		Иначе
			СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
			ТекстОшибки = "В пакете отсутствует ссылка на документ-основание!";
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
	Иначе
		
		СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
		ТекстОшибки = "Отсутствует информация по отгрузкам";
		ВызватьИсключение ТекстОшибки; 
		
	КонецЕсли; 
	
	Если xdtoСтрока.Получить("СтатусДокумента") <> Неопределено Тогда
		
		ДанныеСтатусаXDTO = xdtoСтрока.Получить("СтатусДокумента");
		Если ДанныеСтатусаXDTO <> Неопределено Тогда
			КодСтатусаXDTO = ДанныеСтатусаXDTO.Получить("Код"); 
			ДатаИзмененияСтатусаДокументаXDTO = ДанныеСтатусаXDTO.Получить("ДатаИзмененияСтатусаДокумента");
		КонецЕсли;
		
	КонецЕсли;
	
	Статус = Справочники.СтатусыДокументовWMS.НайтиПоРеквизиту("КодWMS", Число(КодСтатусаXDTO));
	ДатаИзмененияСтатусаДокумента = ПрочитатьДатуJSON(ДатаИзмененияСтатусаДокументаXDTO, ФорматДатыJSON.ISO);
	
	Если Не Статус.Пустая() Тогда    
		
		Запись = РегистрыСведений.СтатусВыгруженногоДокументаВWMS.СоздатьМенеджерЗаписи();
		Запись.Период = ДатаИзмененияСтатусаДокумента;
		Запись.Документ = ДокументОснование;
		Запись.СтатусWMS = Статус;		
		Запись.Записать();
		
		//++ Начало: Руслан Абзанов, КД, REQ1C-5690, 10.06.2025
		Если Статус.Наименование = "Документ отменен в WMS" И ЗначениеЗаполнено(ДокументОснование) Тогда
			
			ДокументОснованиеОбъект = ДокументОснование.ПолучитьОбъект();
			ДокументОснованиеОбъект.УстановитьПометкуУдаления(Истина);
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПеремещениеТоваровТовары.ДокументРезерва
			|ИЗ
			|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
			|ГДЕ
			|	ПеремещениеТоваровТовары.Ссылка = &ДокументОснование
			|
			|СГРУППИРОВАТЬ ПО
			|	ПеремещениеТоваровТовары.ДокументРезерва
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	РеализацияТоваровУслугТовары.ЗаказПокупателя
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
			|ГДЕ
			|	РеализацияТоваровУслугТовары.Ссылка = &ДокументОснование";
			
			Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Выборка = РезультатЗапроса.Выбрать(); 
			
			РодительскиеДокументы = ДополнительныеФункции.ПолучитьРодительскиеДокументы(ДокументОснование);
			
			Для каждого Стр Из РодительскиеДокументы Цикл
				
				Если ТипЗнч(Стр.Значение) = Тип("ДокументСсылка.КонсолидированныйЗаказ") Тогда
					
					КонсолидированныйЗаказОбъект = Стр.Значение.ПолучитьОбъект();
					
					Пока Выборка.Следующий() Цикл
						
						НайденнаяСтрока = КонсолидированныйЗаказОбъект.Заказы.Найти(Выборка.ДокументРезерва); 
						Если НайденнаяСтрока <> Неопределено Тогда
							
							КонсолидированныйЗаказОбъект.Заказы.Удалить(НайденнаяСтрока);
							
							ОтборПоиска = Новый Структура;
							ОтборПоиска.Вставить("ДокументРезерва", Выборка.ДокументРезерва);
							ОтобранныеСтроки = КонсолидированныйЗаказОбъект.Товары.НайтиСтроки(ОтборПоиска);
							Для Каждого ЭлементМассива из ОтобранныеСтроки Цикл
								КонсолидированныйЗаказОбъект.Товары.Удалить(ЭлементМассива);
							КонецЦикла;
							
						КонецЕсли;
						
					КонецЦикла;
					
					Выборка.Сбросить();
					
					КонсолидированныйЗаказОбъект.Записать();
					
					Если КонсолидированныйЗаказОбъект.Заказы.Количество() = 0 И Не КонсолидированныйЗаказОбъект.ПометкаУдаления Тогда
						КонсолидированныйЗаказОбъект.УстановитьПометкуУдаления(Истина);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	МаршрутныйЛистМаршрут.Ссылка
			|ИЗ
			|	Документ.МаршрутныйЛист.Маршрут КАК МаршрутныйЛистМаршрут
			|ГДЕ
			|	МаршрутныйЛистМаршрут.Документ = &ДокументОснование
			|	И МаршрутныйЛистМаршрут.Ссылка.Проведен
			|
			|СГРУППИРОВАТЬ ПО
			|	МаршрутныйЛистМаршрут.Ссылка";
			
			Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Выборка = РезультатЗапроса.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				МЛОбъект = Выборка.Ссылка.ПолучитьОбъект();
				
				ОтборПоиска = Новый Структура;
				ОтборПоиска.Вставить("Документ", ДокументОснование);
				ОтобранныеСтроки = МЛОбъект.Маршрут.НайтиСтроки(ОтборПоиска);
				Для Каждого ЭлементМассива из ОтобранныеСтроки Цикл
					МЛОбъект.Маршрут.Удалить(ЭлементМассива);
				КонецЦикла;
				
				МЛОбъект.Записать();
				
			КонецЦикла;
			
		КонецЕсли;
		//-- Конец:  Руслан Абзанов, КД, REQ1C-5690, 10.06.2025
		
	Иначе
		СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
		ТекстОшибки = "Статус по коду "+Число(КодСтатусаXDTO)+" не найден!";
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
КонецЦикла;