//Виды справочников
СоответсвиеКлассов = Новый Соответствие;

СоответсвиеКлассов.Вставить(3, "Номенклатура");
СоответсвиеКлассов.Вставить(4, "КлассификаторЕдиницИзмерения");

МассивКлассов = Новый Массив;
МассивКлассов.Добавить("Контрагенты");
МассивКлассов.Добавить("Склады");

СоответсвиеКлассов.Вставить(5, МассивКлассов);

МассивКлассов = Новый Массив;
МассивКлассов.Добавить("Док_ПоступлениеТоваровУслуг");
МассивКлассов.Добавить("Док_ПеремещениеТоваров");
МассивКлассов.Добавить("Док_КорректировкаРеализации");
МассивКлассов.Добавить("Док_ВозвратТоваровПоставщику");

СоответсвиеКлассов.Вставить(61, МассивКлассов);

МассивКлассов = Новый Массив;
МассивКлассов.Добавить("Док_ПеремещениеТоваров");
МассивКлассов.Добавить("Док_ВозвратТоваровПоставщику");
МассивКлассов.Добавить("Док_РеализацияТоваровУслуг");

СоответсвиеКлассов.Вставить(63, МассивКлассов);

//СоответсвиеКлассов.Вставить(6, "СерииНоменклатуры");

СоответсвиеКлассов.Вставить(7, "НоменклатурныеГруппы");

СоответсвиеКлассов.Вставить(8, "Водители");
СоответсвиеКлассов.Вставить(19, "Транспорт");
СоответсвиеКлассов.Вставить(10, "ЕдиницыИзмерения");
СоответсвиеКлассов.Вставить(17, "АдресаДоставки");

МассивКлассов = Новый Массив;
МассивКлассов.Добавить("СерииНоменклатуры");
МассивКлассов.Добавить("ХарактеристикиНоменклатуры");

СоответсвиеКлассов.Вставить(11, МассивКлассов);

СоответсвиеКлассов.Вставить(12, "СостоянияОбъектовХранения");
СоответсвиеКлассов.Вставить(13, "ХарактеристикиНоменклатуры");
СоответсвиеКлассов.Вставить(21, "ФизическиеЛица");

СоответсвиеКлассов.Вставить(25, "Склады");

//Виды документов
СоответсвиеКлассов.Вставить(30, "Док_ПоступлениеТоваровУслуг");
СоответсвиеКлассов.Вставить(31, "Док_РеализацияТоваровУслуг");
СоответсвиеКлассов.Вставить(32, "Док_ПеремещениеТоваров");
СоответсвиеКлассов.Вставить(33, "Док_ВозвратТоваровПоставщику");
СоответсвиеКлассов.Вставить(34, "Док_КорректировкаРеализации");
СоответсвиеКлассов.Вставить(35, "Док_МаршрутныйЛист");

//Регистры
СоответсвиеКлассов.Вставить(444, "РС_Штрихкоды");

//Получение тела сообщения
xdtoОбъект = сшпОбщегоНазначения.ПолучитьОбъектXDTO(Перечисления.сшпФорматыСообщений.JSON, ТелоСообщения());

//Табличная часть Данные
текТаблица = xdtoОбъект["Данные"].Последовательность();
Для Инд = 0 По текТаблица.Количество() - 1 Цикл
	xdtoСтрока = текТаблица.ПолучитьЗначение(Инд);
	КлассСтрокаXDTO = xdtoСтрока.Получить("Класс");
	ИдентификаторСтрокаXDTO = "00000000-0000-0000-0000-000000000000";
	Если xdtoСтрока.Свойства().Получить("Идентификатор") <> Неопределено Тогда
		ИдентификаторСтрокаXDTO = xdtoСтрока.Получить("Идентификатор"); 
	КонецЕсли;
	
	Класс = Число(КлассСтрокаXDTO);
	ВидыСправочника = СоответсвиеКлассов[Класс];
	Если ВидыСправочника <> Неопределено Тогда
		Если ТипЗнч(ВидыСправочника) <> Тип("Массив") Тогда
			ВидыСправочника = Новый Массив;
			ВидыСправочника.Добавить(СоответсвиеКлассов[Класс]);
		КонецЕсли;
		Успешно = Ложь;
		Для Каждого ВидСправочника Из ВидыСправочника Цикл
			
			Если Лев(ВидСправочника, 4) = "Док_" Тогда
				
				ВидДокумента = Сред(ВидСправочника, 5);
				текСсылка = Документы[ВидДокумента].ПолучитьСсылку(Новый УникальныйИдентификатор(ИдентификаторСтрокаXDTO));
            
            ИначеЕсли Лев(ВидСправочника, 3) = "РС_" Тогда
                
                ВидРегистраСведений = Сред(ВидСправочника, 4);

                НаборЗаписей = РегистрыСведений[ВидРегистраСведений].СоздатьНаборЗаписей();
                
				Если ВидРегистраСведений = "Штрихкоды" Тогда
					
					Номенклатура = Справочники.Номенклатура.ПустаяСсылка();   
                    ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
                    СерияНоменклатуры = Справочники.СерииНоменклатуры.ПустаяСсылка();
										
                    НоменклатураGUID = xdtoСтрока.Получить("Номенклатура"); 
					Если ЗначениеЗаполнено(НоменклатураGUID) Тогда
						Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(НоменклатураGUID));
					КонецЕсли;
					
                    ХарактеристикаНоменклатурыGUID = xdtoСтрока.Получить("ХарактеристикаНоменклатуры");
					Если ЗначениеЗаполнено(ХарактеристикаНоменклатурыGUID) Тогда
						ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ХарактеристикаНоменклатурыGUID)); 
					КонецЕсли;
					
                    СерияНоменклатурыGUID = xdtoСтрока.Получить("Партия");
					Если ЗначениеЗаполнено(СерияНоменклатурыGUID) Тогда
						СерияНоменклатуры = Справочники.СерииНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(СерияНоменклатурыGUID));
					КонецЕсли;
					                    
                    Если ЗначениеЗаполнено(Номенклатура) Тогда
                        НаборЗаписей.Отбор.Владелец.Установить(Номенклатура);
                    КонецЕсли;
                    Если ЗначениеЗаполнено(ХарактеристикаНоменклатуры) Тогда
                        НаборЗаписей.Отбор.ХарактеристикаНоменклатуры.Установить(ХарактеристикаНоменклатуры);
                    КонецЕсли;
                    Если ЗначениеЗаполнено(СерияНоменклатуры) Тогда
                        НаборЗаписей.Отбор.СерияНоменклатуры.Установить(СерияНоменклатуры);
                    КонецЕсли;

                КонецЕсли;

                НаборЗаписей.Прочитать();
				
                Если НаборЗаписей.Количество() > 0 Тогда
                    
                    ТипОбъекта = НаборЗаписей.Метаданные().ПолноеИмя();
                    
                    сшпПользовательскиеМетоды.ПоместитьВОчередьИсходящих(ТипОбъекта, НаборЗаписей.Отбор);
				    Успешно = Истина;
			    	Прервать;

                КонецЕсли;
			Иначе
				текСсылка = Справочники[ВидСправочника].ПолучитьСсылку(Новый УникальныйИдентификатор(ИдентификаторСтрокаXDTO));
			КонецЕсли;	
			Если ОбщегоНазначения.СсылкаСуществует(текСсылка)  Тогда
                Если Класс = 11 Тогда
                    ТипОбъекта = "Справочник.СерииНоменклатуры";
                ИначеЕсли ТипЗнч(текСсылка) = Тип("СправочникСсылка.Контрагенты") Тогда
                    ТипОбъекта ="КонтрагентыВМС";
                ИначеЕсли ТипЗнч(текСсылка) = Тип("СправочникСсылка.Номенклатура") Тогда
                    ТипОбъекта ="НоменклатураВМС";
                ИначеЕсли ТипЗнч(текСсылка) = Тип("СправочникСсылка.Склады") Тогда
                    ТипОбъекта ="СкладыВМС";
                Иначе
                    ТипОбъекта = текСсылка.Метаданные().ПолноеИмя();
                КонецЕсли;
                сшпПользовательскиеМетоды.ПоместитьВОчередьИсходящих(ТипОбъекта, текСсылка);

				Успешно = Истина;
				Прервать;

			КонецЕсли;
		КонецЦикла;
		Если Не Успешно Тогда
			ВызватьИсключение СтрШаблон(НСтр("ru = 'Запрашиваемый объект (%1 %2) не обнаружен в базе'"), ВидыСправочника[0], ИдентификаторСтрокаXDTO);
		КонецЕсли;
	Иначе
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Недопустимый класс объекта %1'"), Класс);
	КонецЕсли;
КонецЦикла;
