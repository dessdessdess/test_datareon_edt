//Получение тела сообщения
xdtoОбъект = сшпОбщегоНазначения.ПолучитьОбъектXDTO(Перечисления.сшпФорматыСообщений.JSON, ТелоСообщения());

////////////////////////////////////////////////////////////////////////////////
//Реквизиты шапки

//ИдентификаторЗапроса
ИдентификаторЗапроса = xdtoОбъект.Получить("ИдентификаторЗапроса");

//ДатаОстатков
ДатаОстатковXDTO = xdtoОбъект.Получить("ДатаЗапроса");
ДатаОстатков = ПрочитатьДатуJSON(ДатаОстатковXDTO, ФорматДатыJSON.ISO);


ТаблицаОстатков = Новый ТаблицаЗначений;
ТаблицаОстатков.Колонки.Добавить("ИдентификаторЗапроса"			, Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(36)));
ТаблицаОстатков.Колонки.Добавить("ДатаЗапроса"					, Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
ТаблицаОстатков.Колонки.Добавить("Склад"						, Новый ОписаниеТипов("СправочникСсылка.Склады"));
ТаблицаОстатков.Колонки.Добавить("Номенклатура"					, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
ТаблицаОстатков.Колонки.Добавить("ХарактеристикаНоменклатуры"	, Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
ТаблицаОстатков.Колонки.Добавить("СерияНоменклатуры"			, Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
ТаблицаОстатков.Колонки.Добавить("Количество"					, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 3)));
ТаблицаОстатков.Колонки.Добавить("МестоХраненияУровень1"        , Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
ТаблицаОстатков.Колонки.Добавить("МестоХраненияУровень2"		, Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));

ОСХ = Справочники.Номенклатура.НайтиПоКоду("ЦО08688");

//Табличная часть Результат
текТаблица = xdtoОбъект.Товары.Последовательность();
Для Инд = 0 По текТаблица.Количество()-1 Цикл   
    
    НоменклатураXDTO = Неопределено;		
    ХарактеристикаXDTO = Неопределено;		
    СкладXDTO = Неопределено;		
    ПартияXDTO = Неопределено;		
    ДатаПартииXDTO = Неопределено;		
    МестоХраненияУровень1XDTO = Неопределено;
    МестоХраненияУровень2XDTO = Неопределено;

    xdtoСтрока= текТаблица.ПолучитьЗначение(Инд);

    Свойства = xdtoСтрока.Свойства();
    Если Свойства.Получить("Номенклатура") <> Неопределено Тогда
        НоменклатураXDTO = xdtoСтрока.Получить("Номенклатура");
    КонецЕсли;
    Если Свойства.Получить("Характеристика") <> Неопределено Тогда
        ХарактеристикаXDTO = xdtoСтрока.Получить("Характеристика");
    КонецЕсли;
    Если Свойства.Получить("Склад") <> Неопределено Тогда
        СкладXDTO = xdtoСтрока.Получить("Склад");
    КонецЕсли;
    Если Свойства.Получить("ПартияНоменклатуры") <> Неопределено Тогда
        ПартияXDTO = xdtoСтрока.Получить("ПартияНоменклатуры");
    КонецЕсли;
    Если Свойства.Получить("НоменклатурнаяГруппа") <> Неопределено Тогда
        НоменклатурнаяГруппаXDTO = xdtoСтрока.Получить("НоменклатурнаяГруппа");
    КонецЕсли;
    Если Свойства.Получить("ДатаПроизводстваПартии") <> Неопределено Тогда
        ДатаПартииXDTO = xdtoСтрока.Получить("ДатаПроизводстваПартии");
    КонецЕсли;
    Если Свойства.Получить("МестоХраненияУровень1") <> Неопределено Тогда
        МестоХраненияУровень1XDTO = xdtoСтрока.Получить("МестоХраненияУровень1");
    КонецЕсли;
    Если Свойства.Получить("МестоХраненияУровень2") <> Неопределено Тогда
        МестоХраненияУровень2XDTO = xdtoСтрока.Получить("МестоХраненияУровень2");
    КонецЕсли;
    
    текСтрока = ТаблицаОстатков.Добавить();

    //Номенклатура
    текСтрока.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(НоменклатураXDTO));

    //Характеристика                                                                                
    Если ЗначениеЗаполнено(ХарактеристикаXDTO) Тогда 
        текСтрока.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ХарактеристикаXDTO));
    Иначе
        текСтрока.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
    КонецЕсли; 
    
    //НоменклатурнаяГруппа                                                                                
    Если ЗначениеЗаполнено(НоменклатурнаяГруппаXDTO) Тогда 
        текНоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор(НоменклатурнаяГруппаXDTO));
    Иначе
        текНоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
    КонецЕсли; 

    Если ЗначениеЗаполнено(ПартияXDTO) Тогда 
        Если текНоменклатурнаяГруппа.КонвертацияОбъектовВВМС=Перечисления.ВариантыКонвертацииТоваровВWMS.НоменклатураХарактеристикапартия ИЛИ текСтрока.Номенклатура=ОСХ Тогда
            текСтрока.СерияНоменклатуры = Справочники.СерииНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ПартияXDTO));
        Иначе
            ХарактеристикаНом = Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ПартияXDTO));
			Если ОбщегоНазначения.СсылкаСуществует(ХарактеристикаНом) Тогда 
				текСтрока.ХарактеристикаНоменклатуры = ХарактеристикаНом;
			Иначе
				Если Не ЗначениеЗаполнено(текСтрока.ХарактеристикаНоменклатуры) Тогда
					текСтрока.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(); 
				КонецЕсли;
			КонецЕсли;
        КонецЕсли;
        //Если ЗначениеЗаполнено(ДатаПартииXDTO) Тогда
        //    текСтрока.Характеристика = Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ПартияXDTO));
        //Иначе
        //    текСтрока.СерияНоменклатуры = Справочники.СерииНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ПартияXDTO));
        //    //текСтрока.СерияНоменклатуры = Справочники.СерииНоменклатуры.ПустаяСсылка();
        //КонецЕсли; 
    Иначе
        текСтрока.СерияНоменклатуры = Справочники.СерииНоменклатуры.ПустаяСсылка();
    КонецЕсли; 
    
    //Склад
    текСтрока.Склад = Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор(СкладXDTO));
    //текСтрока.Склад = Справочники.Склады.ПустаяСсылка();

    Если ЗначениеЗаполнено(МестоХраненияУровень1XDTO) Тогда 
        текСтрока.МестоХраненияУровень1 = МестоХраненияУровень1XDTO;
    КонецЕсли;
    
    Если ЗначениеЗаполнено(МестоХраненияУровень2XDTO) Тогда 
        текСтрока.МестоХраненияУровень2 = МестоХраненияУровень2XDTO;
    КонецЕсли;
    
    //Количество
    Если Свойства.Получить("Количество") <> Неопределено Тогда
        текСтрока.Количество = xdtoСтрока.Получить("Количество");
    Иначе
        текСтрока.Количество = 0;
    КонецЕсли
КонецЦикла;

Если текТаблица.Количество()=0 Тогда
	текСтрока = ТаблицаОстатков.Добавить();	
КонецЕсли;

ТаблицаОстатков.ЗаполнитьЗначения(ИдентификаторЗапроса, "ИдентификаторЗапроса");
ТаблицаОстатков.ЗаполнитьЗначения(ДатаОстатков, "ДатаЗапроса");

ТаблицаОстатков.Свернуть("ИдентификаторЗапроса, ДатаЗапроса, Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, Склад, МестоХраненияУровень1, МестоХраненияУровень2", "Количество");

НаборЗаписей = РегистрыСведений.ЗапрошенныеОстаткиИзWMS_Axelot.СоздатьНаборЗаписей();
НаборЗаписей.Отбор.ИдентификаторЗапроса.Установить(ИдентификаторЗапроса);
НаборЗаписей.Прочитать();

НаборЗаписей.Загрузить(ТаблицаОстатков);
НаборЗаписей.Записать();
