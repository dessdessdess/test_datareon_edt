//Определение переменных
ПустойИдентификатор = "00000000-0000-0000-0000-000000000000";

//Получение тела сообщения
xdtoОбъект = сшпОбщегоНазначения.ПолучитьОбъектXDTO(Перечисления.сшпФорматыСообщений.JSON, ТелоСообщения());

ДокументОснованиеXDTO 		= Неопределено; 
КодСтатусаXDTO				= Неопределено; 
ДатаНачалаПогрузкиXDTO 		= Неопределено; 
ДатаОкончанияПогрузкиXDTO 	= Неопределено; 
ПломбаXDTO 					= Неопределено; 
ДатаИзмененияXDTO 			= Неопределено;

//++ REQ1C-5135
ТипРейса 					= Неопределено; 
ТекущаяОперация 			= Неопределено;
//-- REQ1C-5135

ЗафиксированоИзменениеДанных  = Ложь;

Свойства = xdtoОбъект.Свойства();
Если Свойства.Получить("Ссылка") <> Неопределено Тогда
    ДокументОснованиеXDTO = xdtoОбъект.Получить("Ссылка");
КонецЕсли;

Если ДокументОснованиеXDTO <> Неопределено Тогда
	ДокументОснование = Документы.МаршрутныйЛист.ПолучитьСсылку(Новый УникальныйИдентификатор(ДокументОснованиеXDTO));   
	Если Не ОбщегоНазначения.СсылкаСуществует(ДокументОснование) Тогда
		СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
		ТекстОшибки = "В системе УТ не найден документ ""Маршрутный лист""";
	    ВызватьИсключение ТекстОшибки;  
	Иначе
		Если Свойства.Получить("Статус") <> Неопределено Тогда
		    ДанныеСтатусаXDTO = xdtoОбъект.Получить("Статус");
		    Если ДанныеСтатусаXDTO <> Неопределено Тогда
		        КодСтатусаXDTO = ДанныеСтатусаXDTO.Получить("Код"); 
                ДатаИзмененияСтатусаДокументаXDTO = ДанныеСтатусаXDTO.Получить("ДатаИзмененияСтатусаДокумента"); 
		    КонецЕсли;
		КонецЕсли;
		Если Свойства.Получить("ДатаНачалаПогрузки") <> Неопределено Тогда
		    ДатаНачалаПогрузкиXDTO = xdtoОбъект.Получить("ДатаНачалаПогрузки");
		КонецЕсли;
		Если Свойства.Получить("ДатаОкончанияПогрузки") <> Неопределено Тогда
		    ДатаОкончанияПогрузкиXDTO = xdtoОбъект.Получить("ДатаОкончанияПогрузки");
		КонецЕсли;
		Если Свойства.Получить("Пломба") <> Неопределено Тогда
		    ПломбаXDTO = xdtoОбъект.Получить("Пломба");
		КонецЕсли; 
		Если Свойства.Получить("ДатаИзменения") <> Неопределено Тогда
		    ДатаИзмененияXDTO = xdtoОбъект.Получить("ДатаИзменения");
		КонецЕсли; 
		
        //++ REQ1C-5135
		Если Свойства.Получить("ТипРейса") <> Неопределено Тогда
			ТипРейса = xdtoОбъект.Получить("ТипРейса");
		КонецЕсли; 
		Если Свойства.Получить("ТекущаяОперация") <> Неопределено Тогда
			ТекущаяОперация = xdtoОбъект.Получить("ТекущаяОперация");
		КонецЕсли;
		
		КруговойРейсТоплог = Ложь;
        Операция = Неопределено;
		
		Если ТипРейса = "Погрузка / разгрузка" Тогда  //круговой рейс					
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫРАЗИТЬ(КД_СоответствияЗначений.Значение1 КАК Справочник.Склады).Адрес КАК АдресСклада
			|ПОМЕСТИТЬ ВТ_СкладыВМС_Топлог
			|ИЗ
			|	РегистрСведений.КД_СоответствияЗначений КАК КД_СоответствияЗначений
			|ГДЕ
			|	КД_СоответствияЗначений.Наименование = ""СкладыДляWMS""
			|
			|СГРУППИРОВАТЬ ПО
			|	ВЫРАЗИТЬ(КД_СоответствияЗначений.Значение1 КАК Справочник.Склады).Адрес
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МаршрутныйЛистМаршрут.АдресГрузополучателя
			|ПОМЕСТИТЬ ВТ_АдресВ_МЛ
			|ИЗ
			|	Документ.МаршрутныйЛист.Маршрут КАК МаршрутныйЛистМаршрут
			|ГДЕ
			|	МаршрутныйЛистМаршрут.ПунктНомер = 1
			|	И МаршрутныйЛистМаршрут.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_АдресВ_МЛ.АдресГрузополучателя
			|ИЗ
			|	ВТ_АдресВ_МЛ КАК ВТ_АдресВ_МЛ
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СкладыВМС_Топлог КАК ВТ_СкладыВМС_Топлог
			|		ПО ВТ_АдресВ_МЛ.АдресГрузополучателя = ВТ_СкладыВМС_Топлог.АдресСклада";
			
			Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
			
			КруговойРейсТоплог = Не Запрос.Выполнить().Пустой(); 
			
		КонецЕсли;
			
		ДокОбъект = ДокументОснование.ПолучитьОбъект();
		
		Если ДатаНачалаПогрузкиXDTO <> Неопределено Тогда
			ДатаНачалаПогрузки = ПрочитатьДатуJSON(ДатаНачалаПогрузкиXDTO, ФорматДатыJSON.ISO);
			Если ЗначениеЗаполнено(ДатаНачалаПогрузки) Тогда				
				
				Если КруговойРейсТоплог Тогда //ЦС-РЦ-ЦС
					
					Если ТекущаяОперация = "Погрузка" Тогда  //отгрузка	
                    					
						Если НЕ ДокОбъект.ВремяНачалаОтгрузкиДляОбратногоРейса = ДатаНачалаПогрузки Тогда
							ДокОбъект.ВремяНачалаОтгрузкиДляОбратногоРейса = ДатаНачалаПогрузки;                            
							ЗафиксированоИзменениеДанных = Истина;
						КонецЕсли;

					Иначе	//приемка

						Если НЕ ДокОбъект.ВремяНачалаРазгрузки = ДатаНачалаПогрузки Тогда
							ДокОбъект.ВремяНачалаРазгрузки = ДатаНачалаПогрузки;                            
							ЗафиксированоИзменениеДанных = Истина;
						КонецЕсли;

					КонецЕсли;

                ИначеЕсли ТипРейса = "Погрузка / разгрузка" Тогда //РЦ-РТТ-РЦ

                    Если ТекущаяОперация = "Погрузка" Тогда  //отгрузка	

						Если НЕ ДокОбъект.ВремяНачалаПогрузки = ДатаНачалаПогрузки Тогда
							ДокОбъект.ВремяНачалаПогрузки = ДатаНачалаПогрузки;                            
							ЗафиксированоИзменениеДанных = Истина;
						КонецЕсли;

					Иначе	//приемка

						Если НЕ ДокОбъект.ВремяНачалаПогрузкиДляОбратногоРейса = ДатаНачалаПогрузки Тогда
							ДокОбъект.ВремяНачалаПогрузкиДляОбратногоРейса = ДатаНачалаПогрузки;                            
							ЗафиксированоИзменениеДанных = Истина;
						КонецЕсли;

					КонецЕсли;
					
				Иначе //прямой рейс
					
					Если ТекущаяОперация = "Погрузка" Тогда  //отгрузка	

						Если НЕ ДокОбъект.ВремяНачалаПогрузки = ДатаНачалаПогрузки Тогда
							ДокОбъект.ВремяНачалаПогрузки = ДатаНачалаПогрузки;                            
							ЗафиксированоИзменениеДанных = Истина;
						КонецЕсли;	

					Иначе	//приемка

                        Если НЕ ДокОбъект.ВремяНачалаРазгрузки = ДатаНачалаПогрузки Тогда
							ДокОбъект.ВремяНачалаРазгрузки = ДатаНачалаПогрузки;   
							ЗафиксированоИзменениеДанных = Истина;
						КонецЕсли;	

					КонецЕсли;	
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		
		Если ДатаОкончанияПогрузкиXDTO <> Неопределено Тогда
			ДатаОкончанияПогрузки = ПрочитатьДатуJSON(ДатаОкончанияПогрузкиXDTO, ФорматДатыJSON.ISO);
			Если ЗначениеЗаполнено(ДатаОкончанияПогрузки) Тогда				
				
				Если КруговойРейсТоплог Тогда //ЦС-РЦ-ЦС
					
					Если ТекущаяОперация = "Погрузка" Тогда  //отгрузка	

						Если НЕ ДокОбъект.ВремяОкончанияОтгрузкиДляОбратногоРейса = ДатаОкончанияПогрузки Тогда
							ДокОбъект.ВремяОкончанияОтгрузкиДляОбратногоРейса = ДатаОкончанияПогрузки;                            
							ЗафиксированоИзменениеДанных = Истина;
						КонецЕсли;

					Иначе	//приемка

						Если НЕ ДокОбъект.ВремяОкончанияРазгрузки = ДатаОкончанияПогрузки Тогда
							ДокОбъект.ВремяОкончанияРазгрузки = ДатаОкончанияПогрузки;                            
							ЗафиксированоИзменениеДанных = Истина;
						КонецЕсли;	

					КонецЕсли;

                ИначеЕсли ТипРейса = "Погрузка / разгрузка" Тогда //РЦ-РТТ-РЦ

                    Если ТекущаяОперация = "Погрузка" Тогда  //отгрузка

						Если НЕ ДокОбъект.ВремяОкончаниеПогрузки = ДатаОкончанияПогрузки Тогда
							ДокОбъект.ВремяОкончаниеПогрузки = ДатаОкончанияПогрузки;                            
							ЗафиксированоИзменениеДанных = Истина;
						КонецЕсли;

					Иначе	//приемка

						Если НЕ ДокОбъект.ВремяОкончаниеПогрузкиДляОбратногоРейса = ДатаОкончанияПогрузки Тогда
							ДокОбъект.ВремяОкончаниеПогрузкиДляОбратногоРейса = ДатаОкончанияПогрузки;                            
							ЗафиксированоИзменениеДанных = Истина;
						КонецЕсли;

					КонецЕсли;
					
				Иначе //прямой рейс
					
					Если ТекущаяОперация = "Погрузка" Тогда  //отгрузка						
						
                        Если НЕ ДокОбъект.ВремяОкончаниеПогрузки = ДатаОкончанияПогрузки Тогда
							ДокОбъект.ВремяОкончаниеПогрузки = ДатаОкончанияПогрузки;                            
							ЗафиксированоИзменениеДанных = Истина;
						КонецЕсли;						
					
                    Иначе //приемка

                        Если НЕ ДокОбъект.ВремяОкончанияРазгрузки = ДатаОкончанияПогрузки Тогда
							ДокОбъект.ВремяОкончанияРазгрузки = ДатаОкончанияПогрузки;    
							ЗафиксированоИзменениеДанных = Истина;
						КонецЕсли;

					КонецЕсли;	
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
        //-- REQ1C-5135

		//REQ1C-5189
        Если КруговойРейсТоплог Тогда //ЦС-РЦ-ЦС
            Если ТекущаяОперация = "Погрузка" Тогда
                Операция = Перечисления.СкладскиеОперации.ОтгрузкаОбратки;
            Иначе
                Операция = Перечисления.СкладскиеОперации.Приемка;
            КонецЕсли;
        ИначеЕсли ТипРейса = "Погрузка / разгрузка" Тогда //РЦ-РТТ-РЦ
            Если ТекущаяОперация = "Погрузка" Тогда
                Операция = Перечисления.СкладскиеОперации.Отгрузка;
            Иначе
                Операция = Перечисления.СкладскиеОперации.ПриемкаОбратки;
            КонецЕсли;
        Иначе //прямой рейс
            Если ТекущаяОперация = "Погрузка" Тогда
                Операция = Перечисления.СкладскиеОперации.Отгрузка;
            Иначе
                Операция = Перечисления.СкладскиеОперации.Приемка;
            КонецЕсли;
        КонецЕсли;
        //REQ1C-5189
		
		Если ПломбаXDTO <> Неопределено Тогда
			Если ЗначениеЗаполнено(ПломбаXDTO) И НЕ ДокОбъект.Пломба = ПломбаXDTO Тогда
				ДокОбъект.Пломба = ПломбаXDTO;
				ЗафиксированоИзменениеДанных = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗафиксированоИзменениеДанных Тогда
			ДокОбъект.ОбменДанными.Загрузка = Истина;
			ДокОбъект.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина);
			ДокОбъект.Записать();
		КонецЕсли;
		
		Статус = Справочники.СтатусыДокументовWMS.НайтиПоРеквизиту("КодWMS", Число(КодСтатусаXDTO));
		ДатаИзмененияСтатусаДокумента = ПрочитатьДатуJSON(ДатаИзмененияСтатусаДокументаXDTO, ФорматДатыJSON.ISO);
		
		Запись = РегистрыСведений.СтатусВыгруженногоДокументаВWMS.СоздатьМенеджерЗаписи(); 
		Запись.Период = ДатаИзмененияСтатусаДокумента; 
		Запись.Документ = ДокументОснование;
		Запись.СтатусWMS = Статус;
        //REQ1C-5189
		Запись.Операция = Операция;
        //REQ1C-5189
		Запись.Записать();
		
	КонецЕсли;
Иначе
	СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
	ТекстОшибки = "В пакете отсутствует ссылка на документ-основание!";
    ВызватьИсключение ТекстОшибки;
КонецЕсли;
