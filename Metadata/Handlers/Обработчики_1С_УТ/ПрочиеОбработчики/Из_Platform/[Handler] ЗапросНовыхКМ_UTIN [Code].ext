        УстановитьПривилегированныйРежим(Истина);
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ТелоСообщения());
		СтруктураЗапроса = ПрочитатьJSON(ЧтениеJSON, Ложь); 
		
		ТаблицаДляПеремаркировки = Новый ТаблицаЗначений();
		ТаблицаДляПеремаркировки.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
        ТаблицаДляПеремаркировки.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТаблицаДляПеремаркировки.Колонки.Добавить("Количество",  Новый ОписаниеТипов("Число"));
		
		НоваяСтрокаДляПеремаркировки = ТаблицаДляПеремаркировки.Добавить();
		НоваяСтрокаДляПеремаркировки.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(СтруктураЗапроса.Номенклатура));
		Если СтруктураЗапроса.Свойство("Характеристика") И ЗначениеЗаполнено(СтруктураЗапроса.Характеристика) Тогда
            НоваяСтрокаДляПеремаркировки.Характеристика = Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(СтруктураЗапроса.Характеристика));
        Иначе
            НоваяСтрокаДляПеремаркировки.Характеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
        КонецЕсли; 
        НоваяСтрокаДляПеремаркировки.Количество = Число(СтруктураЗапроса.Количество); 
		
		ДокументПеремаркировка = Документы.ПеремаркировкаТоваровИСМП.СоздатьДокумент();
		ДокументПеремаркировка.IDДокументаWMS = "WMS Axelot";
        ДокументПеремаркировка.Склад = ?(СтруктураЗапроса.ИдентификаторПлощадки = "РЦ Москва",Справочники.Склады.НайтиПоКоду("О0198"),Справочники.Склады.ПустаяСсылка);
		ДокументПеремаркировка.МестоХранения = СтруктураЗапроса.МХ;
		ДокументПеремаркировка.кдПричинаПеремаркировки = Перечисления.кдПричиныПеремаркировки.ОтсутствуетКМ;
		ДокументПеремаркировка.Организация 	 = Справочники.Организации.ПолучитьОрганизациюГруппаБринэкс();
		ДокументПеремаркировка.Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
		ДокументПеремаркировка.Дата			 = ТекущаяДатаСеанса(); 
		ДокументПеремаркировка.ВидПродукции  = Перечисления.ВидыПродукцииИС.Шины;
		ДокументПеремаркировка.ОбменДанными.Загрузка = Истина;
		ДокументПеремаркировка.УстановитьНовыйНомер();
		ДокументПеремаркировка.Записать(); 
				
		ДокументЗаказНаЭмиссию = Документы.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.СоздатьДокумент();
		ДокументЗаказНаЭмиссию.Организация 	 	  = Справочники.Организации.ПолучитьОрганизациюГруппаБринэкс();

		ПроизводственныйОбъект = Документы.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.ПолучитьПроизводственныйОбъект(ДокументЗаказНаЭмиссию.Организация); 
		Если ПроизводственныйОбъект <> Неопределено Тогда
			ДокументЗаказНаЭмиссию.ПроизводственныйОбъект = ПроизводственныйОбъект;
			ЗаполнитьЗначенияСвойств(ДокументЗаказНаЭмиссию,  Документы.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.ПолучитьАдресПроизводственногоОбъекта(ДокументЗаказНаЭмиссию.Организация, ПроизводственныйОбъект));
		КонецЕсли;

		ДокументЗаказНаЭмиссию.Ответственный 	  = ПользователиКлиентСервер.ТекущийПользователь();
		ДокументЗаказНаЭмиссию.Дата			 	  = ТекущаяДатаСеанса();
		ДокументЗаказНаЭмиссию.ДокументОснование  = ДокументПеремаркировка.Ссылка;
		ДокументЗаказНаЭмиссию.ВидПродукции		  = Перечисления.ВидыПродукцииИС.Шины;
		ДокументЗаказНаЭмиссию.СпособВводаВОборот = Перечисления.СпособыВводаВОборотСУЗ.Перемаркировка;
        ДокументЗаказНаЭмиссию.кдСклад            = ?(СтруктураЗапроса.ИдентификаторПлощадки = "РЦ Москва",Справочники.Склады.НайтиПоКоду("О0198"),Справочники.Склады.ПустаяСсылка);
		Для каждого СтрокаТЗ Из ТаблицаДляПеремаркировки Цикл 				
			НоваяСтрока = ДокументЗаказНаЭмиссию.Товары.Добавить();
			НоваяСтрока.Номенклатура 			= СтрокаТЗ.Номенклатура;
            НоваяСтрока.Характеристика 			= СтрокаТЗ.Характеристика;
			НоваяСтрока.Количество				= СтрокаТЗ.Количество;				
			НоваяСтрока.КоличествоУпаковок 		= СтрокаТЗ.Количество;
			НоваяСтрока.СпособФормированияСерийногоНомера = Перечисления.СпособыФормированияСерийногоНомераСУЗ.Автоматически;
			МассивGTIN = ИнтеграцияИСМП.МассивЗначенийGTINДляВыбора(НоваяСтрока, ДокументЗаказНаЭмиссию);
			Если МассивGTIN.Количество() > 0 Тогда
				НужныйПорядокGTIN = Документы.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.ВЫБРАТЬGTIN(МассивGTIN);
				Если НужныйПорядокGTIN.Количество() > 0 Тогда
					НоваяСтрока.GTIN = НужныйПорядокGTIN[0];
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ДокументЗаказНаЭмиссию.УстановитьНовыйНомер();
		
		ДокументЗаказНаЭмиссию.Записать();
		 		
		ПараметрыПроцедуры = Новый Структура("ДокументСсылка, ОсновнойДокументЭмиссия", ДокументЗаказНаЭмиссию.Ссылка, Истина);
		ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне("");
			
		ДлительныеОперации.ВыполнитьВФоне("Документы.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.ПолучитьМаркиИзРезерваНаСервереМенеджер", ПараметрыПроцедуры, ПараметрыВыполнения);