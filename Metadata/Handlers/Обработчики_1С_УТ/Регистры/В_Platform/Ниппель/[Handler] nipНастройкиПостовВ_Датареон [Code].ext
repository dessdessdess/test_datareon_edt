МассивРазрешенныхТипов = РегистрацияИзмененийБД.РазрешенныеТипыКВыгрузкеВДатареон_Nipple();

Если МассивРазрешенныхТипов.Найти(ТипЗнч(ОбъектОбработки)) = Неопределено Тогда
	
	СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
	ТекстОшибки = "Не разрешено выгружать в Ниппель по новой схеме!";
	
Иначе

Данные = Новый Структура;

updated = Формат(ДатаРегистрации, "ДФ=ddMMyyyyHHmmss");

мсвИтемс = Новый Массив;
мсвДелетед = Новый Массив;

ДанныеПоПостам = ОбменДаннымиFranchise.ПолучитьДанныеВСтруктуре(ОбъектОбработки);

Если ОбъектОбработки.Количество() = 0 Тогда
    
    сткОбъект = Новый Структура();
    сткОбъект.Вставить("link", ДанныеПоПостам.IDПоста);
	сткИтем = Новый Структура();
	сткИтем.Вставить("object", сткОбъект);
	сткИтем.Вставить("updated", updated);
		
	мсвДелетед.Добавить(сткИтем);

Иначе

    Для Каждого Запись Из ДанныеПоПостам Цикл

	    сткОбъект = Новый Структура();
	    сткОбъект.Вставить("link", 				        Запись.IDПоста);
	    сткОбъект.Вставить("service_center_id",         Запись.СервисныйЦентр);
	    сткОбъект.Вставить("name", 			            Запись.Наименование);
	    сткОбъект.Вставить("recording_interval",        Запись.ИнтервалДляЗаписи);
	    сткОбъект.Вставить("is_active", 		        Запись.Активный);
	    сткОбъект.Вставить("reallocation_applications", Запись.Удален);
		
	    сткИтем = Новый Структура();
	    сткИтем.Вставить("object", сткОбъект);
	    сткИтем.Вставить("updated", updated);

	    мсвИтемс.Добавить(сткИтем);

    КонецЦикла;

КонецЕсли;

Если мсвИтемс.Количество() > 0 Тогда
    Данные.Вставить("items", мсвИтемс);
КонецЕсли;

Если мсвДелетед.Количество() > 0 Тогда
    Данные.Вставить("deleted", мсвДелетед);
КонецЕсли;

Данные.Вставить("items", мсвИтемс);
	
РезультатОбработки.Body = сшпОбщегоНазначения.ПреобразоватьСтруктуруПоФормату(ФорматСообщения, Данные);

КонецЕсли;