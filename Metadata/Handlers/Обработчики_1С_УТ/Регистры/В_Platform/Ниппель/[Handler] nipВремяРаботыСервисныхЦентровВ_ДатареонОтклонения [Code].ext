МассивРазрешенныхТипов = РегистрацияИзмененийБД.РазрешенныеТипыКВыгрузкеВДатареон_Nipple();

Если МассивРазрешенныхТипов.Найти(ТипЗнч(ОбъектОбработки)) = Неопределено Тогда
	
	СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
	ТекстОшибки = "Не разрешено выгружать в Ниппель по новой схеме!";
	
Иначе

Данные = Новый Структура;

updated = Формат(ДатаРегистрации, "ДФ=ddMMyyyyHHmmss");

мсвИтемс = Новый Массив;
мсвДелетед = Новый Массив;

ДанныеПоВремениРаботыСЦОтклонения = ОбменДаннымиFranchise.ПолучитьДанныеВСтруктуре(ОбъектОбработки);

Если ОбъектОбработки.Количество() = 0 Тогда
    
    сткОбъект = Новый Структура();
    сткОбъект.Вставить("link", ДанныеПоВремениРаботыСЦОтклонения.IDПоста);
	сткИтем = Новый Структура();
	сткИтем.Вставить("object", сткОбъект);
	сткИтем.Вставить("updated", updated);
		
	мсвДелетед.Добавить(сткИтем);

Иначе

    Если ТипЗнч(ДанныеПоВремениРаботыСЦОтклонения) = Тип("Массив") Тогда

        Для Каждого Запись Из ДанныеПоВремениРаботыСЦОтклонения Цикл

            сткОбъект = Новый Структура();
 	        сткОбъект.Вставить("service_center_link", 	Запись.СервисныйЦентр);
	        сткОбъект.Вставить("terminal_link",         Запись.IDПоста);            
            сткОбъект.Вставить("date", 			        "");
            сткОбъект.Вставить("type_day", 		        СокрЛП(Запись.ВидДня));            
	        сткОбъект.Вставить("time_start",            Формат(Запись.ДатаНачалаОтклонения, "ДФ=HH:mm:ss"));
	        сткОбъект.Вставить("time_end", 		        Формат(Запись.ДатаОкончанияОтклонения, "ДФ=HH:mm:ss"));
			
	        сткИтем = Новый Структура();
	        сткИтем.Вставить("object", сткОбъект);
	        сткИтем.Вставить("updated", updated);

	        мсвИтемс.Добавить(сткИтем);

        КонецЦикла;

    Иначе

        сткОбъект = Новый Структура();
 	    сткОбъект.Вставить("service_center_link", 	ДанныеПоВремениРаботыСЦОтклонения.СервисныйЦентр);
	    сткОбъект.Вставить("terminal_link",         ДанныеПоВремениРаботыСЦОтклонения.IDПоста);
        Если ЗначениеЗаполнено(ДанныеПоВремениРаботыСЦОтклонения.Дата) Тогда
            сткОбъект.Вставить("date", 			Формат(ДанныеПоВремениРаботыСЦОтклонения.Дата, "ДФ=yyyy-MM-dd"));
	        сткОбъект.Вставить("type_day", 		"");
        Иначе
            сткОбъект.Вставить("date", 			"");
            сткОбъект.Вставить("type_day", 		СокрЛП(ДанныеПоВремениРаботыСЦОтклонения.ВидДня));
        КонецЕсли;
	    сткОбъект.Вставить("time_start",        Формат(ДанныеПоВремениРаботыСЦОтклонения.ДатаНачалаОтклонения, "ДФ=HH:mm:ss"));
	    сткОбъект.Вставить("time_end", 		    Формат(ДанныеПоВремениРаботыСЦОтклонения.ДатаОкончанияОтклонения, "ДФ=HH:mm:ss"));
			
	    сткИтем = Новый Структура();
	    сткИтем.Вставить("object", сткОбъект);
	    сткИтем.Вставить("updated", updated);

	    мсвИтемс.Добавить(сткИтем);

    КонецЕсли;
    
КонецЕсли;

Если мсвИтемс.Количество() > 0 Тогда
    Данные.Вставить("items", мсвИтемс);
КонецЕсли;

Если мсвДелетед.Количество() > 0 Тогда
    Данные.Вставить("deleted", мсвДелетед);
КонецЕсли;
	
РезультатОбработки.Body = сшпОбщегоНазначения.ПреобразоватьСтруктуруПоФормату(ФорматСообщения, Данные);

КонецЕсли;
