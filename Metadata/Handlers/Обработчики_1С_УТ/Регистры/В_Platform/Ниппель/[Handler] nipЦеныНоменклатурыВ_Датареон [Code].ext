МассивРазрешенныхТипов = РегистрацияИзмененийБД.РазрешенныеТипыКВыгрузкеВДатареон_Nipple();

Если МассивРазрешенныхТипов.Найти(ТипЗнч(ОбъектОбработки)) = Неопределено Тогда
	
	СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
	ТекстОшибки = "Не разрешено выгружать в Ниппель по новой схеме!";
	
Иначе
	
	Если ОбъектОбработки.Количество() > 0 Тогда
		
		ДокУстановкаЦен = ОбъектОбработки[0].Регистратор;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	УстановкаЦенНоменклатурыТовары.Ссылка
		|ИЗ
		|	Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
		|ГДЕ
		|	УстановкаЦенНоменклатурыТовары.Ссылка = &Ссылка
		|	И УстановкаЦенНоменклатурыТовары.Номенклатура.Родитель В (&Родители)";
		
		ПапкиРодители = Новый Массив;
		ПапкиРодители.Добавить(Справочники.Номенклатура.НайтиПоКоду("1718649")); // номенклатура ШМ
		ПапкиРодители.Добавить(Справочники.Номенклатура.НайтиПоКоду("1713625")); // номенклатура СХ
		ПапкиРодители.Добавить(Справочники.Номенклатура.НайтиПоКоду("1184957")); // Материалы
		Запрос.УстановитьПараметр("Родители", ПапкиРодители);
		Запрос.УстановитьПараметр("Ссылка", ДокУстановкаЦен);
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			
			ДанныеПоЦенамНоменклатуры = ОбменДаннымиFranchise.ПолучитьДанныеВСтруктуре(ОбъектОбработки);
			
			Если ДанныеПоЦенамНоменклатуры.Количество() > 0 Тогда
				
				ДанныеЦеныУслуг = Новый Структура;
				мсвИтемсЦеныУслуг = Новый Массив;
				
				ДанныеЦеныМатериалов = Новый Структура;
				мсвИтемсЦеныМатериалов = Новый Массив;
				
				updated = Формат(ДатаРегистрации, "ДФ=ddMMyyyyHHmmss");
				
				МассивУслуг = Новый Массив;
				МассивМатериалов = Новый Массив;
				
				Для каждого СтрокаЦен Из ДанныеПоЦенамНоменклатуры Цикл
					
					Если СтрокаЦен.AdditionalInfo = "ЦеныУслугСервисногоЦентра" Тогда 
						
						Если МассивУслуг.Найти(СтрокаЦен.СервисныйЦентр+СтрокаЦен.Услуга) <> Неопределено Тогда
							Продолжить;
						КонецЕсли;
						
						сткОбъект = Новый Структура();
						сткОбъект.Вставить("service_center_link", 	СтрокаЦен.СервисныйЦентр);
						сткОбъект.Вставить("operation_link",        СтрокаЦен.Услуга);
						сткОбъект.Вставить("period",                Формат(СтрокаЦен.Период, "ДФ=yyyy-MM-dd"));
						сткОбъект.Вставить("value", 		        СтрокаЦен.Стоимость);
						
						сткИтем = Новый Структура();
						сткИтем.Вставить("object", сткОбъект);
						сткИтем.Вставить("updated", updated);
						
						мсвИтемсЦеныУслуг.Добавить(сткИтем);
						МассивУслуг.Добавить(СтрокаЦен.СервисныйЦентр+СтрокаЦен.Услуга); 
						
					ИначеЕсли СтрокаЦен.AdditionalInfo = "ЦеныМатериаловСервисногоЦентра" Тогда
						
						Если МассивМатериалов.Найти(СтрокаЦен.СервисныйЦентр+СтрокаЦен.Материал) <> Неопределено Тогда
							Продолжить;
						КонецЕсли;
						
						сткОбъект = Новый Структура();
						сткОбъект.Вставить("service_center_link", 	СтрокаЦен.СервисныйЦентр);
						сткОбъект.Вставить("material_link",         СтрокаЦен.Материал);
						сткОбъект.Вставить("period",                Формат(СтрокаЦен.Период, "ДФ=yyyy-MM-dd"));
						сткОбъект.Вставить("price", 		        СтрокаЦен.Цена);
						
						сткИтем = Новый Структура();
						сткИтем.Вставить("object", сткОбъект);
						сткИтем.Вставить("updated", updated);
						
						мсвИтемсЦеныМатериалов.Добавить(сткИтем);
						МассивМатериалов.Добавить(СтрокаЦен.СервисныйЦентр+СтрокаЦен.Материал);
						
					КонецЕсли;
					
				КонецЦикла;
				
				Если  мсвИтемсЦеныУслуг.Количество() > 0 Тогда   
					ДанныеЦеныУслуг.Вставить("items", мсвИтемсЦеныУслуг);
					сшпПользовательскиеМетоды.ПоместитьВОчередьИсходящих("ЦеныУслугНиппель", ДанныеЦеныУслуг);
				КонецЕсли;
				
				Если  мсвИтемсЦеныМатериалов.Количество() > 0 Тогда   
					ДанныеЦеныМатериалов.Вставить("items", мсвИтемсЦеныМатериалов);
					сшпПользовательскиеМетоды.ПоместитьВОчередьИсходящих("ЦеныМатериаловНиппель", ДанныеЦеныМатериалов);
				КонецЕсли;
				
			Иначе
				
				СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
				ТекстОшибки = СтрШаблон("Цены по документу %1 не подлежат выгрузке в Ниппель", СокрЛП(ДокУстановкаЦен));
				
			КонецЕсли;
			
		Иначе
			
			СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
			ТекстОшибки = СтрШаблон("Цены по документу %1 не подлежат выгрузке в Ниппель", СокрЛП(ДокУстановкаЦен));
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецЕсли;