ДокПриходныйОрдер = dt_Параметр1;
ДокументОснование = dt_Параметр2;
СтруктураТаблицыДляДокументов = dt_Параметр3;

СформированыРасхождения = Ложь;
Если СтруктураТаблицыДляДокументов.ТЗ_Расхождения.Количество() > 0 ИЛИ СтруктураТаблицыДляДокументов.ТЗ_РасхожденияПоКМ.Количество() > 0 Тогда
    Если ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.ПеремещениеТоваров") И ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ
        |	АктОРасхожденияхПриПриемкеТМЦ.Ссылка
        |ИЗ
        |	Документ.АктОРасхожденияхПриПриемкеТМЦ КАК АктОРасхожденияхПриПриемкеТМЦ
        |ГДЕ
        |	НЕ АктОРасхожденияхПриПриемкеТМЦ.ПометкаУдаления
        |	И АктОРасхожденияхПриПриемкеТМЦ.ДокументОснование = &ДокументОснование";
        
        Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование.Ссылка);
        
        Рез = Запрос.Выполнить();
        Если Рез.Пустой() Тогда
            ДокОбъектРасхождение = Документы.АктОРасхожденияхПриПриемкеТМЦ.СоздатьДокумент();
            //+Зубрин В.Н. 29.11.2021 ИТ0002828
            ДокОбъектРасхождение.Заполнить(ДокументОснование.Ссылка);
            //-Зубрин В.Н. 29.11.2021
                                                    
            ДокОбъектРасхождение.Дата = ТекущаяДата();
            
            
            ДокОбъектРасхождение.Статус				= Перечисления.СтатусыАктаОРасхождениях.Новый;
            ДокОбъектРасхождение.ДокументОснование	= ДокументОснование.Ссылка;
            ДокОбъектРасхождение.ВидОперации		= Перечисления.ВидыОперацийАктОРасхождениях.РасхождениеВПоступлении;
            ДокОбъектРасхождение.Организация		= ДокументОснование.Организация;
            ДокОбъектРасхождение.Комментарий		= "Создан автоматически при загрузке данных из WMS (Axelot)";
            
            ДокОбъектРасхождение.ОснованиеДляСоставленияАкта		= "Приказ";
            
            ДокОбъектРасхождение.Контрагент			= ДокументОснование.Контрагент;
            ДокОбъектРасхождение.Грузоотправитель	= ДокументОснование.Контрагент;
            ДокОбъектРасхождение.Договор			= ДокументОснование.ДоговорКонтрагента;
            Если ЗначениеЗаполнено(ДокОбъектРасхождение.Договор) Тогда
                ДокОбъектРасхождение.НомерДоговораПоставки	= ДокОбъектРасхождение.Договор.Номер;
                ДокОбъектРасхождение.ДатаДоговораПоставки	= ДокОбъектРасхождение.Договор.Дата;
            КонецЕсли;
            Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
                ДокОбъектРасхождение.Склад					= ДокументОснование.кдСкладПолучатель;
            Иначе      
                Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") И ДокументОснование.СкладОрдер = Тип("СправочникСсылка.Склады") Тогда
                    ДокОбъектРасхождение.Склад					= ДокументОснование.СкладОрдер;
                Иначе
                    ДокОбъектРасхождение.Склад					= ДокументОснование.Товары[0].Склад;
                КонецЕсли;
            КонецЕсли;
            ДокОбъектРасхождение.Подразделение			= ДокументОснование.Подразделение;
            ДокОбъектРасхождение.ДатаДоставкиТоваров 	= ДокОбъектРасхождение.Дата;
            Руководители								= РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(ДокОбъектРасхождение.Организация, ДокОбъектРасхождение.Дата);
            ДокОбъектРасхождение.Руководитель			= Руководители.Руководитель;
            ДокОбъектРасхождение.ДолжностьРуководителя	= Руководители.РуководительДолжность;
            ДокОбъектРасхождение.ГлавныйБухгалтер		= Руководители.ГлавныйБухгалтер;
        Иначе
            Выборка = Рез.Выбрать();
            Выборка.Следующий();
            Если Выборка.Ссылка.Статус = Перечисления.СтатусыАктаОРасхождениях.Исполнен ИЛИ Выборка.Ссылка.Статус = Перечисления.СтатусыАктаОРасхождениях.ПринятВРаботу ТОгда
                ЗаписьЖурналаРегистрации("Обработка акта расхождения", УровеньЖурналаРегистрации.Ошибка,  ,  , "Акт расхождения по основанию  "+ДокументОснование.Ссылка+" не перезаписан, т.к. находится в статусе ""Выполнено""!");
            Иначе
                ДокОбъектРасхождение = Выборка.Ссылка.ПолучитьОбъект();
            КонецЕсли;
        КонецЕсли;
        
        ДокОбъектРасхождение.Товары.Очистить();
        
        ТипЦены = ДокОбъектРасхождение.Склад.ТипЦенРозничнойТорговли.Ссылка;
        Для Каждого СтрокаТЗ ИЗ СтруктураТаблицыДляДокументов.ТЗ_Расхождения Цикл
            Если СтрокаТЗ.Количество <> СтрокаТЗ.КоличествоОснования Тогда

                НСтрока = ДокОбъектРасхождение.Товары.Добавить();
                ЗаполнитьЗначенияСвойств(НСтрока, СтрокаТЗ);
                
                Если Не ЗначениеЗаполнено(НСтрока.Цена) Тогда
                    ОтборЦен = Новый Структура("ТипЦен,Номенклатура,ХарактеристикаНоменклатуры");
                    ОтборЦен.Вставить("ТипЦен",ТипЦены);
                    ОтборЦен.Вставить("Номенклатура",СтрокаТЗ.Номенклатура);
                    ОтборЦен.Вставить("ХарактеристикаНоменклатуры",СтрокаТЗ.ХарактеристикаНоменклатуры);
                    ВыборкаПоРегистру	= РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(КонецДня(ДокОбъектРасхождение.Дата),ОтборЦен);
                    НСтрока.Цена	= ВыборкаПоРегистру.Цена;
                КонецЕсли;
                
                Если СтрокаТЗ.ПоОснованию Тогда
                    НСтрока.КоличествоПоДокументу = СтрокаТЗ.КоличествоОснования;
                    НСтрока.СуммаПоДокументу = СтрокаТЗ.КоличествоОснования * Нстрока.Цена;
                    НСтрока.Сумма = СтрокаТЗ.Количество * Нстрока.Цена;
                Иначе
                    НСтрока.КоличествоПоДокументу = 0;
                    НСтрока.СуммаПоДокументу = 0;
                    НСтрока.Сумма = СтрокаТЗ.Количество * Нстрока.Цена;
                КонецЕсли;
                
            КонецЕсли;
        КонецЦикла;
        Если ТипЗнч(ДокументОснование.Ссылка) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
            ДокОбъектПТУ = ДокументОснование.Ссылка.ПолучитьОбъект();

            ДокОбъектПТУ.Расхождения.Очистить();
            Для Каждого СтрокаТЗ ИЗ СтруктураТаблицыДляДокументов.ТЗ_Расхождения Цикл
                НСтрока = ДокОбъектПТУ.Расхождения.Добавить();
                ЗаполнитьЗначенияСвойств(НСтрока, СтрокаТЗ);
                
                НСтрока.КоличествоПлан = СтрокаТЗ.КоличествоОснования;
                НСтрока.КоличествоФакт = СтрокаТЗ.Количество;
                НСтрока.Расхождение = СтрокаТЗ.Количество - СтрокаТЗ.КоличествоОснования;
                
                //++https://jira.kdcorp.ru/browse/REQ1C-5426
                Если СтрокаТЗ.Количество = 0 Тогда
                    СтрокаПТУ = ДокОбъектПТУ.Товары.Найти(СтрокаТЗ.УникальныйКодСтроки, "УникальныйКодСтроки");
                    Если СтрокаПТУ <> Неопределено Тогда
                        ДокОбъектПТУ.Товары.Удалить(СтрокаПТУ);
                    КонецЕсли;
                КонецЕсли; //--https://jira.kdcorp.ru/browse/REQ1C-5426

            КонецЦикла;
            ДокОбъектПТУ.Записать(РежимЗаписиДокумента.Запись);
        КонецЕсли;
        Если СтруктураТаблицыДляДокументов.ТЗ_РасхожденияПоКМ.Количество() > 0 Тогда 
            Если ДокОбъектРасхождение.ШтрихкодыУпаковок.Количество() > 0 Тогда
                Для Каждого Стр Из СтруктураТаблицыДляДокументов.ТЗ_РасхожденияПоКМ Цикл
                    НС = ДокОбъектРасхождение.ШтрихкодыУпаковок.Добавить();
                    ЗаполнитьЗначенияСвойств(НС, Стр);
                КонецЦикла;
            Иначе
                ДокОбъектРасхождение.ШтрихкодыУпаковок.Загрузить(СтруктураТаблицыДляДокументов.ТЗ_РасхожденияПоКМ);
            КонецЕсли;                                                               
        КонецЕсли;
    Иначе
        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ
        |	АктРасхождения.Ссылка
        |ИЗ
        |	Документ.АктРасхождения КАК АктРасхождения
        |ГДЕ
        |	НЕ АктРасхождения.ПометкаУдаления
        |	И АктРасхождения.ДокументОснование = &ДокументОснование";
        
        Запрос.УстановитьПараметр("ДокументОснование", ДокПриходныйОрдер.Ссылка);
        
        Рез = Запрос.Выполнить();
        Если Рез.Пустой() Тогда
            ДокОбъектРасхождение = Документы.АктРасхождения.СоздатьДокумент();
            
            ДокОбъектРасхождение.Дата = ТекущаяДата();
            
            
            ДокОбъектРасхождение.ДокументОснование	= ДокПриходныйОрдер.Ссылка;
            ДокОбъектРасхождение.Организация		= ДокументОснование.Организация; 
            Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
                ДокОбъектРасхождение.СкладОтправитель	= ДокументОснование.Склад;
            Иначе
                ДокОбъектРасхождение.СкладОтправитель	= ДокументОснование.СкладОтправитель;
            КонецЕсли;
            Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
                ДокОбъектРасхождение.СкладПолучатель	= ДокПриходныйОрдер.Склад;
            Иначе
                ДокОбъектРасхождение.СкладПолучатель	= ДокументОснование.СкладПолучатель;
            КонецЕсли;

            ДокОбъектРасхождение.Подразделение		= ДокПриходныйОрдер.Подразделение;
        Иначе
            Выборка = Рез.Выбрать();
            Выборка.Следующий();
            Если Выборка.Ссылка.Выполнено Тогда
                ЗаписьЖурналаРегистрации("Обработка акта расхождения", УровеньЖурналаРегистрации.Ошибка,  ,  , "Акт расхождения по основанию  "+ДокПриходныйОрдер.Ссылка+" не перезаписан, т.к. находится в статусе ""Выполнено""!");
            Иначе
                ДокОбъектРасхождение = Выборка.Ссылка.ПолучитьОбъект();
            КонецЕсли;
        КонецЕсли;
        
        ТипЦены = ДокОбъектРасхождение.СкладПолучатель.ТипЦенРозничнойТорговли.Ссылка;
        ДокОбъектРасхождение.Товары.Очистить();
        Для Каждого СтрокаТЗ ИЗ СтруктураТаблицыДляДокументов.ТЗ_Расхождения Цикл
            Если СтрокаТЗ.Количество <> СтрокаТЗ.КоличествоОснования Тогда

                НСтрока = ДокОбъектРасхождение.Товары.Добавить();
                ЗаполнитьЗначенияСвойств(НСтрока, СтрокаТЗ);
                
                ОтборЦен = Новый Структура("ТипЦен,Номенклатура,ХарактеристикаНоменклатуры");
                ОтборЦен.Вставить("ТипЦен",ТипЦены);
                ОтборЦен.Вставить("Номенклатура",СтрокаТЗ.Номенклатура);
                ОтборЦен.Вставить("ХарактеристикаНоменклатуры",СтрокаТЗ.ХарактеристикаНоменклатуры);
                ВыборкаПоРегистру	= РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(КонецДня(ДокОбъектРасхождение.Дата),ОтборЦен);
                НСтрока.Цена	= ВыборкаПоРегистру.Цена;
                Если СтрокаТЗ.ПоОснованию Тогда
                    НСтрока.Количество = СтрокаТЗ.КоличествоОснования;
                    НСтрока.Факт = СтрокаТЗ.Количество;
                Иначе
                    НСтрока.Количество = 0;
                    НСтрока.Факт = СтрокаТЗ.Количество;
                КонецЕсли;
                НСтрока.Расхождение = НСтрока.Факт - НСтрока.Количество;
                НСтрока.СуммаРасхождения	= НСтрока.Цена * НСтрока.Расхождение;			
            КонецЕсли;
        КонецЦикла;
    КонецЕсли;
    Попытка
        ДокОбъектРасхождение.Записать(РежимЗаписиДокумента.Проведение);
    Исключение
        ЗаписьЖурналаРегистрации("СозданиеАктаРасхождения", УровеньЖурналаРегистрации.Ошибка,  ,  , "Не удалость записать акт расхождения по основанию "+ДокументОснование+"! "+СокрЛП(ОписаниеОшибки()));
        ДокОбъектРасхождение.Записать(РежимЗаписиДокумента.Запись);
    КонецПопытки; 
    СформированыРасхождения = Истина;
КонецЕсли;

Результат = СформированыРасхождения;
