ДокументОснование = dt_Параметр1;
ТЗ_ТоварыФакт = dt_Параметр2;
ТЗ_Расхождения = dt_Параметр3;
ТЗ_ЗагруженныеКМ_Из_WMS = dt_Параметр4;

Структура_ТаблицыДокументов = Новый Структура("ТЗФакт, ТЗ_Расхождения, ТоварыПоПеремещению, ТЗБрак, ТЗ_ПринятыеКМ, ТЗ_РасхожденияПоКМ", Новый ТаблицаЗначений,Новый ТаблицаЗначений,Новый ТаблицаЗначений,Новый ТаблицаЗначений,Новый ТаблицаЗначений,Новый ТаблицаЗначений);
    
Если ТЗ_ТоварыФакт.Количество() > 0 Тогда	
    ЕстьРасхождение = Ложь;
    ТоварыПоПеремещению = Новый ТаблицаЗначений;
    
    ТЗ_ТоварыФакт.Колонки.Добавить("Обработано");       
    ТЗ_ТоварыФакт.ЗаполнитьЗначения(Ложь, "Обработано");  
    
    Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
        Для Каждого Стр Из ТЗ_ТоварыФакт Цикл
            Если Стр.Количество <> Стр.КоличествоПринято Тогда
                НоваяСтрока = ТЗ_Расхождения.Добавить();
                ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
                НоваяСтрока.Количество = Стр.КоличествоПринято;
                НоваяСтрока.КоличествоОснования = Стр.Количество;
                НоваяСтрока.Качество = Справочники.Качество.Новый;
                НоваяСтрока.ПоОснованию = Истина;
            КонецЕсли;
        КонецЦикла;
    Иначе	
        Для Каждого СтрокаТЗ ИЗ ТЗ_ТоварыФакт Цикл   
            Если Не СтрокаТЗ.ЭтоМотошина Тогда
                Если СтрокаТЗ.Количество <> СтрокаТЗ.КоличествоОснования Тогда
                    НСтр = ТЗ_Расхождения.Добавить();
                    ЗаполнитьЗначенияСвойств(НСтр, СтрокаТЗ);
                    Если СтрокаТЗ.Количество > СтрокаТЗ.КоличествоОснования Тогда
                        СтрокаТЗ.Количество = СтрокаТЗ.КоличествоОснования
                    КонецЕсли;  
                    СтрокаТЗ.Обработано = Истина;
                КонецЕсли;
            Иначе /// Обработка строк по мотошинам
                Если СтрокаТЗ.ДобавлятьВОрдер Тогда
                    Если НЕ СтрокаТЗ.Обработано Тогда
                        СтрокаТЗ.Обработано = Истина;
                        Если СтрокаТЗ.Количество > СтрокаТЗ.КоличествоОснования Тогда
                            НС = ТЗ_Расхождения.Добавить();
                            ЗаполнитьЗначенияСвойств(НС, СтрокаТЗ);
                            НС.ПоОснованию = Истина;
                            СтрокаТЗ.Количество = СтрокаТЗ.КоличествоОснования;
                        КонецЕсли;
                        
                        МассивСтрок = ТЗ_ТоварыФакт.НайтиСтроки(Новый Структура("УникальныйКодСтроки", СтрокаТЗ.УникальныйКодСтроки));
                        Если МассивСтрок.Количество() = 1 Тогда
                            Если МассивСтрок[0].Количество <> МассивСтрок[0].КоличествоОснования Тогда
                                НСтр = ТЗ_Расхождения.Добавить();
                                ЗаполнитьЗначенияСвойств(НСтр, МассивСтрок[0]);
                                Нстр.ПоОснованию = Истина;  //// проверить параметр
                                Если МассивСтрок[0].ХарактеристикаНоменклатуры <> МассивСтрок[0].ХарактеристикаПоОснованию Тогда
                                    Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
                                        Нстр.ПоОснованию = Истина;  //// проверить параметр
                                    Иначе
                                        Нстр.ПоОснованию = Ложь;  //// проверить параметр
                                    КонецЕсли;
                                КонецЕсли;
                            Иначе
                                Если МассивСтрок[0].ХарактеристикаНоменклатуры <> МассивСтрок[0].ХарактеристикаПоОснованию Тогда
                                    НСтр = ТЗ_Расхождения.Добавить();
                                    ЗаполнитьЗначенияСвойств(НСтр, МассивСтрок[0]);
                                    НСтр.КоличествоОснования = 0;
                                    Нстр.Количество = МассивСтрок[0].Количество;
                                    Нстр.ПоОснованию = Ложь;  //// проверить параметр
                                КонецЕсли;
                            КонецЕсли;
                        Иначе
                            ИтогПоОснованию = МассивСтрок[0].КоличествоОснования;
                            ИтогоТовара = 0;
                            Для Каждого Стр Из МассивСтрок Цикл
                                Если Стр.ХарактеристикаНоменклатуры <> Стр.ХарактеристикаПоОснованию Тогда 
                                    НСтр = ТЗ_Расхождения.Добавить();
                                    ЗаполнитьЗначенияСвойств(НСтр, Стр);
                                    НСтр.КоличествоОснования = 0;
                                    Нстр.Количество = Стр.Количество;
                                    Нстр.ПоОснованию = Ложь;    //// проверить параметр
                                Иначе
                                    Если Стр.Количество <> Стр.КоличествоОснования Тогда
                                        НСтр = ТЗ_Расхождения.Добавить();
                                        ЗаполнитьЗначенияСвойств(НСтр, Стр);
                                        НСтр.КоличествоОснования = Стр.КоличествоОснования;
                                        Нстр.Количество = Стр.Количество;
                                        Нстр.ПоОснованию = Истина;
                                    КонецЕсли;
                                КонецЕсли;
                                ИтогоТовара = ИтогоТовара + Стр.Количество;
                                Стр.Обработано = Истина;
                            КонецЦикла;
                            Если ИтогПоОснованию <> ИтогоТовара Тогда
                                НСтр = ТЗ_Расхождения.Добавить();
                                ЗаполнитьЗначенияСвойств(НСтр, Стр);
                                НСтр.КоличествоОснования = ИтогПоОснованию;
                                Нстр.Количество = ИтогоТовара;
                                Нстр.ПоОснованию = Истина;
                            КонецЕсли; 
                        КонецЕсли;
                    КонецЕсли;
                Иначе
                    Если НЕ СтрокаТЗ.Обработано Тогда
                        НСтр = ТЗ_Расхождения.Добавить();
                        ЗаполнитьЗначенияСвойств(НСтр, СтрокаТЗ);
                        Если ЗначениеЗаполнено(СтрокаТЗ.ХарактеристикаПоОснованию) И СтрокаТЗ.ХарактеристикаНоменклатуры <> СтрокаТЗ.ХарактеристикаПоОснованию Тогда
                            НСтр.КоличествоОснования = 0;
                            Нстр.ПоОснованию = Ложь;    //// проверить параметр
                        Иначе
                            Нстр.ПоОснованию = Истина;
                        КонецЕсли;
                    КонецЕсли;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;  
    КонецЕсли;	
        
    ТЗ = ТЗ_ТоварыФакт.Скопировать(Новый Структура("ДобавлятьВОрдер", ИСТИНА));
    Если ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
        ТЗ.Свернуть("Номенклатура, КоличествоМест, ЕдиницаИзмерения, ЕдиницаИзмеренияМест, Коэффициент, СерияНоменклатуры, ХарактеристикаНоменклатуры, Качество, КоличествоОснования, ДокументРезерва, Цена, ПоОснованию, УникальныйКодСтроки", "Количество");
    Иначе
        ТЗ.Свернуть("Номенклатура, КоличествоМест, ЕдиницаИзмерения, ЕдиницаИзмеренияМест, Коэффициент, СерияНоменклатуры, ХарактеристикаНоменклатуры, Качество, КоличествоОснования, ДокументРезерва, Цена, ПоОснованию, УникальныйКодСтроки", "Количество, КоличествоПринято, Сумма");
    КонецЕсли;
    
    /// Определим брак
    ТЗБрак = ТЗ_ТоварыФакт.Скопировать(Новый Структура("Брак", ИСТИНА));
    
    Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда  // Если ПО по перемещению, то перезаполним данные по РО
        ТЗ_Товары = ТЗ.Скопировать();
        ТЗ_Товары.Свернуть("Номенклатура, ХарактеристикаНоменклатуры, ДокументРезерва");
        
        Для Каждого Стр Из ТЗ_Товары Цикл
            Если НЕ ЗначениеЗаполнено(Стр.ДокументРезерва) И Стр.ДокументРезерва <> Неопределено Тогда
                Стр.ДокументРезерва = Неопределено;
            КонецЕсли;
        КонецЦикла;
        
        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ
        |	ВЫРАЗИТЬ(ТЗ.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
        |	ВЫРАЗИТЬ(ТЗ.ХарактеристикаНоменклатуры КАК Справочник.ХарактеристикиНоменклатуры) КАК ХарактеристикаНоменклатуры,
        |	ТЗ.ДокументРезерва КАК ДокументРезерва
        |ПОМЕСТИТЬ ВТ_Данные
        |ИЗ
        |	&ТЗ КАК ТЗ
        |
        |ИНДЕКСИРОВАТЬ ПО
        |	Номенклатура,
        |	ХарактеристикаНоменклатуры,
        |	ДокументРезерва
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	РасходныйОрдерНаТоварыТовары.Номенклатура,
        |	РасходныйОрдерНаТоварыТовары.КоличествоМест,
        |	РасходныйОрдерНаТоварыТовары.ЕдиницаИзмерения,
        |	РасходныйОрдерНаТоварыТовары.ЕдиницаИзмеренияМест,
        |	РасходныйОрдерНаТоварыТовары.Коэффициент,
        |	СУММА(РасходныйОрдерНаТоварыТовары.Количество) КАК Количество,
        |	РасходныйОрдерНаТоварыТовары.СерияНоменклатуры,
        |	РасходныйОрдерНаТоварыТовары.ХарактеристикаНоменклатуры,
        |	РасходныйОрдерНаТоварыТовары.ДокументРезерва,
        |	РасходныйОрдерНаТоварыТовары.Качество
        |ИЗ
        |	Документ.РасходныйОрдерНаТовары.Товары КАК РасходныйОрдерНаТоварыТовары
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Данные КАК ВТ_Данные
        |		ПО РасходныйОрдерНаТоварыТовары.Номенклатура = ВТ_Данные.Номенклатура
        |			И РасходныйОрдерНаТоварыТовары.ХарактеристикаНоменклатуры = ВТ_Данные.ХарактеристикаНоменклатуры
        |			И РасходныйОрдерНаТоварыТовары.ДокументРезерва = ВТ_Данные.ДокументРезерва
        |ГДЕ
        |	РасходныйОрдерНаТоварыТовары.Ссылка.ДокументПередачи = &ДокументПередачи
        |	И РасходныйОрдерНаТоварыТовары.Ссылка.Проведен
        |
        |СГРУППИРОВАТЬ ПО
        |	РасходныйОрдерНаТоварыТовары.Номенклатура,
        |	РасходныйОрдерНаТоварыТовары.Качество,
        |	РасходныйОрдерНаТоварыТовары.ХарактеристикаНоменклатуры,
        |	РасходныйОрдерНаТоварыТовары.СерияНоменклатуры,
        |	РасходныйОрдерНаТоварыТовары.ЕдиницаИзмеренияМест,
        |	РасходныйОрдерНаТоварыТовары.ДокументРезерва,
        |	РасходныйОрдерНаТоварыТовары.ЕдиницаИзмерения,
        |	РасходныйОрдерНаТоварыТовары.КоличествоМест,
        |	РасходныйОрдерНаТоварыТовары.Коэффициент";
        
        Запрос.УстановитьПараметр("ТЗ", ТЗ_Товары);
        Запрос.УстановитьПараметр("ДокументПередачи", ДокументОснование);
        
        ТоварыПоПеремещению = Запрос.Выполнить().Выгрузить();
        
        упрТЗ_Расхождения = ТЗ_Расхождения.Скопировать();
        упрТЗ_Расхождения.Свернуть("Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, ДокументРезерва, Качество ", "Количество");
        
        Для каждого Строка_ТЗ_Расхождения из упрТЗ_Расхождения Цикл
            Отбор_ТЗ_Расхождения = Новый Структура();
            Отбор_ТЗ_Расхождения.Вставить("Номенклатура");
            Отбор_ТЗ_Расхождения.Вставить("ХарактеристикаНоменклатуры");
            Отбор_ТЗ_Расхождения.Вставить("СерияНоменклатуры");
            Отбор_ТЗ_Расхождения.Вставить("ДокументРезерва"); //https://jira.kdcorp.ru/browse/ITSD-16129
            Отбор_ТЗ_Расхождения.Вставить("Качество");
            ЗаполнитьЗначенияСвойств(Отбор_ТЗ_Расхождения, Строка_ТЗ_Расхождения);
            НС = ТоварыПоПеремещению.НайтиСтроки(Отбор_ТЗ_Расхождения);
            СуммаНС = 0;
            Для каждого ЭлНС из НС Цикл
                СуммаНС = СуммаНС + ЭлНС.Количество;
            КонецЦикла;	
            
            Требуется = СуммаНС - Строка_ТЗ_Расхождения.Количество;
            Если Требуется > 0 Тогда  //https://jira.kdcorp.ru/browse/ITSD-16129
                Для каждого ЭлНС из НС Цикл
                    КолВСтроке = ЭлНС.Количество;
                    Если КолВСтроке >= Требуется Тогда
                        ЭлНС.Количество = КолВСтроке - Требуется;
                        Требуется = 0;
                    Иначе
                        ЭлНС.Количество = 0;
                        Требуется = Требуется - КолВСтроке;
                    КонецЕсли;	
                    Если ЭлНС.Количество = 0 Тогда
                        ТоварыПоПеремещению.Удалить(ЭлНС);
                    Конецесли;	
                КонецЦикла;	
            Конецесли;	
        КонецЦикла;	
    КонецЕсли;
    
    Структура_ТаблицыДокументов.Вставить("ТЗФакт", ТЗ);
    Структура_ТаблицыДокументов.Вставить("ТЗ_Расхождения", ТЗ_Расхождения);
    Структура_ТаблицыДокументов.Вставить("ТоварыПоПеремещению", ТоварыПоПеремещению);
    Структура_ТаблицыДокументов.Вставить("ТЗБрак", ТЗБрак);
    
    /////////////// Блок формирования финальных таблиц по КМ для загрузки в документы //////////////////////////////////////////////

    ТЗ_ПринятыеКМ = Новый ТаблицаЗначений;
    ТЗ_ПринятыеКМ.Колонки.Добавить("ШтрихкодУпаковки", Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
    ТЗ_ПринятыеКМ.Колонки.Добавить("ШтрихкодУпаковкиПринято", Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
    ТЗ_ПринятыеКМ.Колонки.Добавить("ЭтоПеремещение");

    Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
                
        ТЗ_КМОснования = ДокументОснование.ШтрихкодыУпаковок.Выгрузить();
        ТЗ_КМОснования.Колонки.Добавить("Обработано");
        ТЗ_КМОснования.ЗаполнитьЗначения(Ложь, "Обработано"); 
        
        ТЗ_РасхожденияПоКМ = Новый ТаблицаЗначений;	
        ТЗ_РасхожденияПоКМ.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
        ТЗ_РасхожденияПоКМ.Колонки.Добавить("ХарактеристикаНоменклатуры");
        ТЗ_РасхожденияПоКМ.Колонки.Добавить("ШтрихкодУпаковкиПоДокументу");
        ТЗ_РасхожденияПоКМ.Колонки.Добавить("ШтрихкодУпаковкиФакт");
        
        ЭтоПеремещение = ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров");
        
        Для Каждого СтрокаТЗ Из ТЗ_ЗагруженныеКМ_Из_WMS Цикл
            Если НЕ СтрокаТЗ.МаркаСуществует Тогда
                СтрокаКМРасхождение = ТЗ_РасхожденияПоКМ.Добавить();
                СтрокаКМРасхождение.Номенклатура = СтрокаТЗ.Номенклатура;
                СтрокаКМРасхождение.ХарактеристикаНоменклатуры = СтрокаТЗ.ХарактеристикаНоменклатуры;
                СтрокаКМРасхождение.ШтрихкодУпаковкиФакт = СтрокаТЗ.ШтрихкодУпаковки;
            Иначе
                СтрокаШКДокумента = ТЗ_КМОснования.Найти(СтрокаТЗ.ШтрихкодУпаковки, "ШтрихкодУпаковки");
                Если СтрокаШКДокумента <> Неопределено Тогда
                    НСтрока = ТЗ_ПринятыеКМ.Добавить();
                    НСтрока.ШтрихкодУпаковки = СтрокаШКДокумента.ШтрихкодУпаковки;
                    НСтрока.ШтрихкодУпаковкиПринято = СтрокаТЗ.ШтрихкодУпаковки;
                    НСтрока.ЭтоПеремещение = ЭтоПеремещение;
                    Если СтрокаТЗ.Номенклатура.НоменклатурнаяГруппа.КонвертацияОбъектовВВМС = Перечисления.ВариантыКонвертацииТоваровВWMS.НоменклатураХарактеристикапартия Тогда 
                        Если ЗначениеЗаполнено(СтрокаТЗ.ДатаПроизводства) Тогда
                            ГодПроизводства = Строка(Формат(СтрокаТЗ.ДатаПроизводства, "ДФ=yyyy"));
                            Характеристика = Справочники.ХарактеристикиНоменклатуры.НайтиПоНаименованию(ГодПроизводства, Истина,,СтрокаТЗ.Номенклатура);
                            
                            Если СтрокаТЗ.ШтрихкодУпаковки.Характеристика <> Характеристика Тогда
                                ОбъектШК = СтрокаТЗ.ШтрихкодУпаковки.ПолучитьОбъект();                 
                                ОбъектШК.Характеристика = Характеристика;
                                ОбъектШК.Записать();
                            КонецЕсли;
                        КонецЕсли;
                    КонецЕсли;
                    
                    СтрокаШКДокумента.Обработано = Истина;    
                Иначе
                    Если ЭтоПеремещение Тогда
                        НСтрока = ТЗ_ПринятыеКМ.Добавить();
                        НСтрока.ШтрихкодУпаковкиПринято = СтрокаТЗ.ШтрихкодУпаковки;
                        НСтрока.ЭтоПеремещение = ЭтоПеремещение;
                    Иначе
                        СтрокаКМРасхождение = ТЗ_РасхожденияПоКМ.Добавить();
                        СтрокаКМРасхождение.Номенклатура = СтрокаТЗ.Номенклатура;
                        СтрокаКМРасхождение.ХарактеристикаНоменклатуры = СтрокаТЗ.ХарактеристикаНоменклатуры;
                        СтрокаКМРасхождение.ШтрихкодУпаковкиФакт = СтрокаТЗ.ШтрихкодУпаковки;
                    КонецЕсли;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;
        //Начало: Обработка КМ, которые вообще не приняты
        МассивКодовКМ = ТЗ_КМОснования.НайтиСтроки(Новый Структура("Обработано", Ложь));
        Для Каждого Стр Из МассивКодовКМ Цикл
            Если ЭтоПеремещение Тогда
                НСтрока = ТЗ_ПринятыеКМ.Добавить();
                ЗаполнитьЗначенияСвойств(НСтрока, Стр);
                НСтрока.ЭтоПеремещение = ЭтоПеремещение;
            Иначе
                СтрокаКМРасхождение = ТЗ_РасхожденияПоКМ.Добавить();
                СтрокаКМРасхождение.Номенклатура = Стр.ШтрихкодУпаковки.Номенклатура;
                СтрокаКМРасхождение.ХарактеристикаНоменклатуры = Стр.ШтрихкодУпаковки.Характеристика;
                СтрокаКМРасхождение.ШтрихкодУпаковкиПоДокументу = Стр.ШтрихкодУпаковки;
            КонецЕсли;
        КонецЦикла;
        Структура_ТаблицыДокументов.Вставить("ТЗ_ПринятыеКМ", ТЗ_ПринятыеКМ);
        Структура_ТаблицыДокументов.Вставить("ТЗ_РасхожденияПоКМ", ТЗ_РасхожденияПоКМ);
    КонецЕсли; 

    //REQ1C-5752
    НоменГруппыДляКоторыхНеЗаполнятьХарактеристику = Новый СписокЗначений;
    Если Не ДополнительныеФункции.ПолучитьНастройкуДействияСистемыПоНаименованию("ЗаполнятьХарактеристикуВКодеМаркировки", Истина) Тогда
        НоменГруппы = Справочники.КД_Настройки.ПолучитьЗначениеНастройки("Номен. группы для которых не заполнять характеристику");
		Если ТипЗнч(НоменГруппы) = Тип("СписокЗначений") Тогда
			 НоменГруппыДляКоторыхНеЗаполнятьХарактеристику = НоменГруппы;
		 Иначе
			 НоменГруппыДляКоторыхНеЗаполнятьХарактеристику.Добавить(НоменГруппы);
		КонецЕсли;
	КонецЕсли;
    //REQ1C-5752 

    Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		
		Для Каждого СтрокаТЗ Из ТЗ_ЗагруженныеКМ_Из_WMS Цикл
			
            Если НЕ СтрокаТЗ.МаркаСуществует Тогда
				
				НовыйЭлемент = Справочники.ШтрихкодыУпаковокТоваров.СоздатьЭлемент();
				НовыйЭлемент.ЗначениеШтрихкода = СтрокаТЗ.ШтрихкодУпаковки;				
				НовыйЭлемент.Номенклатура = СтрокаТЗ.Номенклатура;			
				//REQ1C-5752
                Если НоменГруппыДляКоторыхНеЗаполнятьХарактеристику.НайтиПоЗначению(НовыйЭлемент.Номенклатура.НоменклатурнаяГруппа) = Неопределено Тогда			
				    НовыйЭлемент.Характеристика = СтрокаТЗ.ХарактеристикаНоменклатуры;	
                КонецЕсли;
                //REQ1C-5752
				НовыйЭлемент.ТипУпаковки 	= Перечисления.ТипыУпаковок.МаркированныйТовар;
				НовыйЭлемент.ТипШтрихкода 	= Перечисления.ТипыШтрихкодов.DataMatrix;
				НовыйЭлемент.Ответственный 	= ПользователиКлиентСервер.ТекущийПользователь();
				НовыйЭлемент.Комментарий 	= СокрЛП(ДокументОснование);
				НовыйЭлемент.ДатаУпаковки	= ТекущаяДата();
				НовыйЭлемент.Записать();
				
				НСтрока = ТЗ_ПринятыеКМ.Добавить();
				НСтрока.ШтрихкодУпаковки = НовыйЭлемент.Ссылка;
				
			Иначе
				НСтрока = ТЗ_ПринятыеКМ.Добавить();
				НСтрока.ШтрихкодУпаковки = СтрокаТЗ.ШтрихкодУпаковки;
				
			КонецЕсли;
            
		КонецЦикла;
		
		Структура_ТаблицыДокументов.Вставить("ТЗ_ПринятыеКМ", ТЗ_ПринятыеКМ);
		
	КонецЕсли;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
КонецЕсли;

Результат = Структура_ТаблицыДокументов;	