ДокПриходныйОрдер = dt_Параметр1;
ТЗБрак = dt_Параметр2;
ДокументОснование = dt_Параметр3;
Склад = dt_Параметр4;

СформированБрак = Ложь;
Если ТЗБрак.Количество() > 0 Тогда
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	АктОРасхожденияхПриПриемкеТМЦ.Ссылка
		|ИЗ
		|	Документ.АктОРасхожденияхПриПриемкеТМЦ КАК АктОРасхожденияхПриПриемкеТМЦ
		|ГДЕ
		|	НЕ АктОРасхожденияхПриПриемкеТМЦ.ПометкаУдаления
		|	И АктОРасхожденияхПриПриемкеТМЦ.ДокументОснование = &ДокументОснование";
		
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование.Ссылка);
		
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			ДокОбъектРасхождение = Документы.АктОРасхожденияхПриПриемкеТМЦ.СоздатьДокумент();
			//+Зубрин В.Н. 29.11.2021 ИТ0002828
			ДокОбъектРасхождение.Заполнить(ДокументОснование.Ссылка);
			//-Зубрин В.Н. 29.11.2021
			
			ДокОбъектРасхождение.Дата = ТекущаяДата();
						
			ДокОбъектРасхождение.Статус				= Перечисления.СтатусыАктаОРасхождениях.Новый;
			ДокОбъектРасхождение.ДокументОснование	= ДокументОснование.Ссылка;
			ДокОбъектРасхождение.ВидОперации		= Перечисления.ВидыОперацийАктОРасхождениях.РасхождениеВПоступлении;
			ДокОбъектРасхождение.Организация		= ДокументОснование.Организация;
			ДокОбъектРасхождение.Комментарий		= "Создан автоматически при загрузке данных из WMS (Axelot)";
			
			ДокОбъектРасхождение.ОснованиеДляСоставленияАкта		= "Приказ";
			
			ДокОбъектРасхождение.Контрагент			= ДокументОснование.Контрагент;
			ДокОбъектРасхождение.Грузоотправитель	= ДокументОснование.Контрагент;
			ДокОбъектРасхождение.Договор			= ДокументОснование.ДоговорКонтрагента;
			Если ЗначениеЗаполнено(ДокОбъектРасхождение.Договор) Тогда
				ДокОбъектРасхождение.НомерДоговораПоставки	= ДокОбъектРасхождение.Договор.Номер;
				ДокОбъектРасхождение.ДатаДоговораПоставки	= ДокОбъектРасхождение.Договор.Дата;
			КонецЕсли;
			Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
				ДокОбъектРасхождение.Склад					= ДокументОснование.кдСкладПолучатель;
			Иначе      
				Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") И ДокументОснование.СкладОрдер = Тип("СправочникСсылка.Склады") Тогда
					ДокОбъектРасхождение.Склад					= ДокументОснование.СкладОрдер;
				Иначе
					ДокОбъектРасхождение.Склад					= ДокументОснование.Товары[0].Склад;
				КонецЕсли;
			КонецЕсли;
			ДокОбъектРасхождение.Подразделение			= ДокументОснование.Подразделение;
			ДокОбъектРасхождение.ДатаДоставкиТоваров 	= ДокОбъектРасхождение.Дата;
			Руководители								= РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(ДокОбъектРасхождение.Организация, ДокОбъектРасхождение.Дата);
			ДокОбъектРасхождение.Руководитель			= Руководители.Руководитель;
			ДокОбъектРасхождение.ДолжностьРуководителя	= Руководители.РуководительДолжность;
			ДокОбъектРасхождение.ГлавныйБухгалтер		= Руководители.ГлавныйБухгалтер;
		Иначе
			Выборка = Рез.Выбрать();
			Выборка.Следующий();
			Если Выборка.Ссылка.Статус = Перечисления.СтатусыАктаОРасхождениях.Исполнен ИЛИ Выборка.Ссылка.Статус = Перечисления.СтатусыАктаОРасхождениях.ПринятВРаботу ТОгда
				ЗаписьЖурналаРегистрации("Обработка акта расхождения", УровеньЖурналаРегистрации.Ошибка,  ,  , "Акт расхождения по основанию  "+ДокументОснование.Ссылка+" не перезаписан, т.к. находится в статусе ""Выполнено""!");
			Иначе
				ДокОбъектРасхождение = Выборка.Ссылка.ПолучитьОбъект();
			КонецЕсли;
		КонецЕсли;
		
		ДокОбъектРасхождение.Товары.Очистить();
		
		ТипЦены = ДокОбъектРасхождение.Склад.ТипЦенРозничнойТорговли.Ссылка;
		Для Каждого СтрокаТЗ ИЗ ТЗБрак Цикл
			Если СтрокаТЗ.КоличествоБрак <> СтрокаТЗ.КоличествоОснования Тогда
				
				НСтрока = ДокОбъектРасхождение.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НСтрока, СтрокаТЗ);
				
				НСтрока.КоличествоПоДокументу = СтрокаТЗ.КоличествоОснования;
				НСтрока.Количество = СтрокаТЗ.КоличествоБрак;
				
				Если Не ЗначениеЗаполнено(НСтрока.Цена) Тогда
					ОтборЦен = Новый Структура("ТипЦен,Номенклатура,ХарактеристикаНоменклатуры");
					ОтборЦен.Вставить("ТипЦен",ТипЦены);
					ОтборЦен.Вставить("Номенклатура",СтрокаТЗ.Номенклатура);
					ОтборЦен.Вставить("ХарактеристикаНоменклатуры",СтрокаТЗ.ХарактеристикаНоменклатуры);
					ВыборкаПоРегистру	= РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(КонецДня(ДокОбъектРасхождение.Дата),ОтборЦен);
					НСтрока.Цена	= ВыборкаПоРегистру.Цена;
				КонецЕсли;
				
				Если СтрокаТЗ.ПоОснованию Тогда
					НСтрока.КоличествоПоДокументу = СтрокаТЗ.КоличествоОснования;
					НСтрока.СуммаПоДокументу = СтрокаТЗ.КоличествоОснования * Нстрока.Цена;
					НСтрока.Сумма = СтрокаТЗ.КоличествоБрак * Нстрока.Цена;
				Иначе
					НСтрока.КоличествоПоДокументу = 0;
					НСтрока.СуммаПоДокументу = 0;
					НСтрока.Сумма = СтрокаТЗ.КоличествоБрак * Нстрока.Цена;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		Попытка
			ДокОбъектРасхождение.Записать(РежимЗаписиДокумента.Проведение);   
		Исключение
			ЗаписьЖурналаРегистрации("СозданиеБрака", УровеньЖурналаРегистрации.Ошибка,  ,  , "Не удалось провести акт выбраковки по основанию "+ДокументОснование+"! "+СокрЛП(ОписаниеОшибки()));
			ДокОбъектРасхождение.Записать(РежимЗаписиДокумента.Запись);
		КонецПопытки;
		
		ДокОбъектБрак = ДокОбъектРасхождение;
		
	Иначе
		
		ТЗБрак.Свернуть("Номенклатура, КоличествоМест, ЕдиницаИзмерения, ЕдиницаИзмеренияМест, Коэффициент, СерияНоменклатуры, ХарактеристикаНоменклатуры, Качество, ДокументРезерва", "КоличествоБрак");
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	АктВыбраковки.Ссылка
		|ИЗ
		|	Документ.АктВыбраковки КАК АктВыбраковки
		|ГДЕ
		|	НЕ АктВыбраковки.ПометкаУдаления
		|	И АктВыбраковки.ДокументОснование = &ДокументОснование";
		
		Запрос.УстановитьПараметр("ДокументОснование", ДокПриходныйОрдер.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			ДокОбъектБрак = Документы.АктВыбраковки.СоздатьДокумент();
			
			// Заполнение шапки
			ДокОбъектБрак.Дата = ТекущаяДата();
			ДокОбъектБрак.СкладПолучатель = Склад;
			ДокОбъектБрак.Организация = ДокПриходныйОрдер.Организация;
			ДокОбъектБрак.Подразделение = Склад.Подразделение;//ДокПриходныйОрдер.Подразделение;
			ДокОбъектБрак.ДокументОснование = ДокПриходныйОрдер.Ссылка;
		Иначе
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			Если Выборка.Ссылка.Выполнено Тогда
				ЗаписьЖурналаРегистрации("Обработка брака", УровеньЖурналаРегистрации.Ошибка,  ,  , "Акт выбраковки по основанию  "+ДокПриходныйОрдер.Ссылка+" не перезаписан, т.к. находится в статусе ""Выполнено""!");
			Иначе
				ДокОбъектБрак = Выборка.Ссылка.ПолучитьОбъект();
			КонецЕсли;
		КонецЕсли;
		ДокОбъектБрак.Товары.Очистить();
		
		ТипЦены = ДокОбъектБрак.СкладПолучатель.ТипЦенРозничнойТорговли.Ссылка;
		Для Каждого ТекСтрокаТовары Из ТЗБрак Цикл
			НоваяСтрока = ДокОбъектБрак.Товары.Добавить();
			НоваяСтрока.ЕдиницаИзмерения 	= ТекСтрокаТовары.ЕдиницаИзмерения;
			НоваяСтрока.Коэффициент			= ТекСтрокаТовары.ЕдиницаИзмерения.Коэффициент;
			НоваяСтрока.Количество			= ТекСтрокаТовары.КоличествоБрак;//ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура		= ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.СерияНоменклатуры	= ТекСтрокаТовары.СерияНоменклатуры;
			НоваяСтрока.ХарактеристикаНоменклатуры	= ТекСтрокаТовары.ХарактеристикаНоменклатуры;
			ОтборЦен = Новый Структура("ТипЦен,Номенклатура,ХарактеристикаНоменклатуры");
			ОтборЦен.Вставить("ТипЦен",ТипЦены);
			ОтборЦен.Вставить("Номенклатура",ТекСтрокаТовары.Номенклатура);
			ОтборЦен.Вставить("ХарактеристикаНоменклатуры",ТекСтрокаТовары.ХарактеристикаНоменклатуры);
			ВыборкаПоРегистру = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(КонецДня(ДокПриходныйОрдер.Дата),ОтборЦен);
			НоваяСтрока.Цена = ВыборкаПоРегистру.Цена;
			Если НоваяСтрока.Цена > 0 Тогда 
				НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
			КонецЕсли;	
		КонецЦикла;
		Попытка
			ДокОбъектБрак.Записать(РежимЗаписиДокумента.Проведение);   
		Исключение
			ЗаписьЖурналаРегистрации("СозданиеБрака", УровеньЖурналаРегистрации.Ошибка,  ,  , "Не удалось провести акт выбраковки по основанию "+ДокументОснование+"! "+СокрЛП(ОписаниеОшибки()));
			ДокОбъектБрак.Записать(РежимЗаписиДокумента.Запись);
		КонецПопытки;
		
	КонецЕсли;
	
	///// блок создания перемещения на склад брака  
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(КД_СоответствияЗначений.Значение2 КАК Справочник.Склады) КАК СкладБрака
	|ИЗ
	|	РегистрСведений.КД_СоответствияЗначений КАК КД_СоответствияЗначений
	|ГДЕ
	|	КД_СоответствияЗначений.Наименование = ""СоответствиеСкладовWMSСостоянию""
	|	И КД_СоответствияЗначений.Значение1 = ""Брак""
	|	И КД_СоответствияЗначений.Измерение3 = &Подразделение";
	
	Запрос.УстановитьПараметр("Подразделение", ДокОбъектБрак.Подразделение);//ДокПриходныйОрдер.Подразделение);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		СкладБрака = Выборка.СкладБрака; 
	Иначе
		СкладБрака = Справочники.Склады.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	НЕ ПеремещениеТоваров.ПометкаУдаления
	|	И ПеремещениеТоваров.ДокументОснование = &ДокументОснование
	|	И ПеремещениеТоваров.СкладПолучатель = &СкладПолучатель";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокОбъектБрак.Ссылка);
	Запрос.УстановитьПараметр("СкладПолучатель", СкладБрака);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
		ДокПеремещениеБрак = Документы.ПеремещениеТоваров.СоздатьДокумент();
		ДокПеремещениеБрак.Дата = ТекущаяДата();
		
		ДокПеремещениеБрак.Заполнить(ДокОбъектБрак.Ссылка);
		
		Если ТипЗнч(ДокОбъектБрак) = Тип("ДокументОбъект.АктОРасхожденияхПриПриемкеТМЦ") Тогда
			ДокПеремещениеБрак.СкладОтправитель = ДокОбъектБрак.Склад;	
		КонецЕсли;
		
		ДокПеремещениеБрак.ОтражатьВУправленческомУчете = Истина;   
		Если ЗначениеЗаполнено(СкладБрака) Тогда
			ДокПеремещениеБрак.СкладПолучатель = СкладБрака;//РезультатЗапроса.СкладБрака;
		КонецЕсли;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ДокПеремещениеБрак = Выборка.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	ДокПеремещениеБрак.Товары.Загрузить(ДокОбъектБрак.Товары.Выгрузить());
	
	Попытка
		//+Зубрин В.Н. 14.12.2020 Документ перемещения необходимо только записать
		ДокПеремещениеБрак.Записать(РежимЗаписиДокумента.Проведение);
		//-Зубрин В.Н. 14.12.2020 
	Исключение
		//+Зубрин В.Н. 14.12.2020 Документ перемещения необходимо только записать
		ДокПеремещениеБрак.Записать(РежимЗаписиДокумента.Запись);
		ЗаписьЖурналаРегистрации("Создание перемещения на Основании Акта выбраковки", УровеньЖурналаРегистрации.Ошибка,  ,  , "Не удалось записать перемещение "+ДокПеремещениеБрак+" на основании "+ДокОбъектБрак+"! "+СокрЛП(ОписаниеОшибки()));
		//-Зубрин В.Н. 14.12.2020
	КонецПопытки;
		
	СформированБрак = Истина;
	
КонецЕсли;

Результат = СформированБрак;
