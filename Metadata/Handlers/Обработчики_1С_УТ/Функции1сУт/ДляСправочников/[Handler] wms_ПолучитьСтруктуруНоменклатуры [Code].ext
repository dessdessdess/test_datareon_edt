    НоменклатураСсылка = dt_Параметр1;
    
    Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	Номенклатура.ПометкаУдаления,
	|	Номенклатура.ЭтоГруппа,
	|	Номенклатура.Родитель КАК РодительСсылка,
	|	СОКРЛП(Номенклатура.Родитель.Наименование) КАК РодительНаименование,
	|	СОКРЛП(Номенклатура.Наименование) КАК Наименование,
	|	Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору КАК ЕдиницаИзмеренияСсылка,
	|	СОКРЛП(Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Наименование) КАК ЕдиницаИзмеренияНаименование,
	|	СОКРЛП(Номенклатура.Код) КАК Код,
	|	СОКРЛП(Номенклатура.Артикул) КАК Артикул,
	|	СОКРЛП(Номенклатура.Комментарий) КАК Комментарий,
	|	СОКРЛП(Номенклатура.НаименованиеПолное) КАК НаименованиеПолное,
	|	Выбор Когда Номенклатура.ВидПродукцииИС = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Шины) И Номенклатура.СрокХранения = 0 Тогда 15 Иначе Номенклатура.СрокХранения Конец Как СрокХранения,
	|	Выбор Когда Номенклатура.ВидПродукцииИС = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Шины) И Номенклатура.СрокХранения = 0 Тогда ""год"" Иначе ПРЕДСТАВЛЕНИЕ(Номенклатура.ЕдиницаСрокаГодности) Конец КАК ЕдиницаИзмеренияСрокаХранения,
	|	Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаСсылка,
	|	СОКРЛП(Номенклатура.НоменклатурнаяГруппа.Наименование) КАК НоменклатурнаяГруппаНаименование,
	|	Номенклатура.ВестиУчетПоХарактеристикам
	|ПОМЕСТИТЬ ВТ_Основное
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Основное.Ссылка,
	|	МАКСИМУМ(ЕСТЬNULL(Штрихкоды.Штрихкод, """")) КАК GTIN
	|ПОМЕСТИТЬ ВТ_GTIN
	|ИЗ
	|	ВТ_Основное КАК ВТ_Основное
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО (ВТ_Основное.Ссылка = (ВЫРАЗИТЬ(Штрихкоды.Владелец КАК Справочник.Номенклатура)))
	|			И (Штрихкоды.GTIN)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Основное.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Основное.Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, """")) КАК Бренд,
	|	ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(ЗначенияСвойствОбъектов1.Значение, """")) КАК Типоразмер
	|ПОМЕСТИТЬ ВТ_Свойства
	|ИЗ
	|	ВТ_Основное КАК ВТ_Основное
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО (ВТ_Основное.Ссылка = (ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Объект КАК Справочник.Номенклатура)))
	|			И (ЗначенияСвойствОбъектов.Свойство = &СвойствоБренд)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов1
	|		ПО (ВТ_Основное.Ссылка = (ВЫРАЗИТЬ(ЗначенияСвойствОбъектов1.Объект КАК Справочник.Номенклатура)))
	|			И (ЗначенияСвойствОбъектов1.Свойство = &СвойствоТипоразмер)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Основное.Ссылка,
	|	ЕдиницыИзмерения.Ссылка КАК УпаковкаСсылка,
	|	СОКРЛП(ЕдиницыИзмерения.Наименование) КАК УпаковкаНаименование
	|ПОМЕСТИТЬ ВТ_Упаковки
	|ИЗ
	|	ВТ_Основное КАК ВТ_Основное
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО (ВТ_Основное.Ссылка = (ВЫРАЗИТЬ(ЕдиницыИзмерения.Владелец КАК Справочник.Номенклатура)))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Основное.Ссылка,
	|	ЕдиницыИзмерения.Ссылка,
	|	СОКРЛП(ЕдиницыИзмерения.Наименование)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ХарактеристикиНоменклатуры.Ссылка) КАК КоличествоХарактеристик,
	|	ВТ_Основное.Ссылка
	|ПОМЕСТИТЬ ВТ_Характеристики
	|ИЗ
	|	ВТ_Основное КАК ВТ_Основное
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ВТ_Основное.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Основное.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КД_СоответствияЗначений.Значение2 КАК НомГруппа,
	|	ВТ_Основное.Ссылка
	|ПОМЕСТИТЬ ВТ_НомГруппыКВыгрузке
	|ИЗ
	|	ВТ_Основное КАК ВТ_Основное
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КД_СоответствияЗначений КАК КД_СоответствияЗначений
	|		ПО (КД_СоответствияЗначений.Наименование = ""СкладыWMS_РЦ"")
	|			И ((ВЫРАЗИТЬ(КД_СоответствияЗначений.Значение3 КАК СТРОКА(10))) = ""РЦ Москва"")
	|			И (ВТ_Основное.НоменклатурнаяГруппаСсылка = (ВЫРАЗИТЬ(КД_СоответствияЗначений.Значение2 КАК Справочник.НоменклатурныеГруппы)))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Основное.Ссылка КАК Ссылка,
	|	ВТ_Основное.ПометкаУдаления КАК ПометкаУдаления,
	|	ВТ_Основное.ЭтоГруппа КАК ЭтоГруппа,
	|	ВТ_Основное.РодительСсылка КАК РодительСсылка,
	|	ВТ_Основное.РодительНаименование КАК РодительНаименование,
	|	ВТ_Основное.Наименование КАК Наименование,
	|	ВТ_Основное.ЕдиницаИзмеренияСсылка КАК ЕдиницаИзмеренияСсылка,
	|	ВТ_Основное.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
	|	ВТ_Основное.Код КАК Код,
	|	ВТ_Основное.Артикул КАК Артикул,
	|	ВТ_Основное.Комментарий КАК Комментарий,
	|	ВТ_Основное.НаименованиеПолное КАК НаименованиеПолное,
	|	ВТ_Основное.СрокХранения КАК СрокХранения,
	|	ВТ_Основное.ЕдиницаИзмеренияСрокаХранения КАК ЕдиницаИзмеренияСрокаХранения,
	|	ВТ_GTIN.GTIN КАК GTIN,
	|	ВТ_Свойства.Бренд КАК Бренд,
	|	ВТ_Свойства.Типоразмер КАК Типоразмер,
	|	ВТ_Упаковки.УпаковкаСсылка КАК УпаковкаСсылка,
	|	ВТ_Упаковки.УпаковкаНаименование КАК УпаковкаНаименование,
	|	ВТ_Основное.НоменклатурнаяГруппаСсылка КАК НоменклатурнаяГруппаСсылка,
	|	ВТ_Основное.НоменклатурнаяГруппаНаименование КАК НоменклатурнаяГруппаНаименование,
	|	ВТ_Основное.ВестиУчетПоХарактеристикам КАК ВестиУчетПоХарактеристикам,
	|	ЕСТЬNULL(ВТ_Характеристики.КоличествоХарактеристик, 0) КАК КоличествоХарактеристик,
	|	ВЫБОР
	|		КОГДА ВТ_НомГруппыКВыгрузке.НомГруппа ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РазрешеноВыгружатьНомГруппу
	|ИЗ
	|	ВТ_Основное КАК ВТ_Основное
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_GTIN КАК ВТ_GTIN
	|		ПО ВТ_Основное.Ссылка = ВТ_GTIN.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Свойства КАК ВТ_Свойства
	|		ПО ВТ_Основное.Ссылка = ВТ_Свойства.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Упаковки КАК ВТ_Упаковки
	|		ПО ВТ_Основное.Ссылка = ВТ_Упаковки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Характеристики КАК ВТ_Характеристики
	|		ПО ВТ_Основное.Ссылка = ВТ_Характеристики.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НомГруппыКВыгрузке КАК ВТ_НомГруппыКВыгрузке
	|		ПО ВТ_Основное.Ссылка = ВТ_НомГруппыКВыгрузке.Ссылка
	|ИТОГИ
	|	МАКСИМУМ(ПометкаУдаления),
	|	МАКСИМУМ(ЭтоГруппа),
	|	МАКСИМУМ(РодительСсылка),
	|	МАКСИМУМ(РодительНаименование),
	|	МАКСИМУМ(Наименование),
	|	МАКСИМУМ(ЕдиницаИзмеренияСсылка),
	|	МАКСИМУМ(ЕдиницаИзмеренияНаименование),
	|	МАКСИМУМ(Код),
	|	МАКСИМУМ(Артикул),
	|	МАКСИМУМ(Комментарий),
	|	МАКСИМУМ(НаименованиеПолное),
	|	МАКСИМУМ(СрокХранения),
	|	МАКСИМУМ(ЕдиницаИзмеренияСрокаХранения),
	|	МАКСИМУМ(GTIN),
	|	МАКСИМУМ(Бренд),
	|	МАКСИМУМ(Типоразмер),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УпаковкаСсылка),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УпаковкаНаименование),
	|	МАКСИМУМ(НоменклатурнаяГруппаСсылка),
	|	МАКСИМУМ(НоменклатурнаяГруппаНаименование),
	|	МАКСИМУМ(ВестиУчетПоХарактеристикам),
	|	МАКСИМУМ(КоличествоХарактеристик),
	|	МАКСИМУМ(РазрешеноВыгружатьНомГруппу)
	|ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
	Запрос.УстановитьПараметр("СвойствоБренд", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Бренд1"));
	Запрос.УстановитьПараметр("СвойствоТипоразмер", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Типоразмер WMS"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	/// Заполним ШК
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Штрихкоды.Штрихкод,
	|	Штрихкоды.GTIN,
	|	Штрихкоды.ТипШтрихкода,
    |	Штрихкоды.ХарактеристикаНоменклатуры,           //++REQ1C-5628
    |	Штрихкоды.СерияНоменклатуры,                    //++REQ1C-5628
	|	Штрихкоды.ЕдиницаИзмерения
	|ИЗ
	|	РегистрСведений.Штрихкоды КАК Штрихкоды
	|ГДЕ
	|	Штрихкоды.Владелец = &Владелец
	|	И Штрихкоды.Владелец <> &ОСХ";
	
	Запрос.УстановитьПараметр("Владелец", НоменклатураСсылка);
	Запрос.УстановитьПараметр("ОСХ", Справочники.Номенклатура.НайтиПоКоду("ЦО08688"));
	
	РезультатЗапросаШК = Запрос.Выполнить().Выбрать();

	Данные = Новый Структура;

    СоответствиеСроковХранения = Новый Соответствие;
    СоответствиеСроковХранения.Вставить("час",  "Час");
    СоответствиеСроковХранения.Вставить("дн",   "Сутки");
    СоответствиеСроковХранения.Вставить("мес",  "Месяц");
    СоответствиеСроковХранения.Вставить("год",  "Год");

	Пока ВыборкаСсылка.Следующий() Цикл 
		
		Данные.Вставить("Ссылка",           XMLСтрока(ВыборкаСсылка.Ссылка));
		Данные.Вставить("ПометкаУдаления",  ВыборкаСсылка.ПометкаУдаления);
		Данные.Вставить("ЭтоГруппа",        ВыборкаСсылка.ЭтоГруппа);
		
		Если ЗначениеЗаполнено(ВыборкаСсылка.РодительСсылка) Тогда
			СтруктураДанных = Новый Структура;
			СтруктураДанных.Вставить("Ссылка",          XMLСтрока(ВыборкаСсылка.РодительСсылка));
			СтруктураДанных.Вставить("Наименование",    ВыборкаСсылка.РодительНаименование);			
			Данные.Вставить("Родитель", СтруктураДанных);
        Иначе
            Данные.Вставить("Родитель", Неопределено);			
		КонецЕсли;
		
		Данные.Вставить("Наименование", ВыборкаСсылка.Наименование);
		Данные.Вставить("Код", ВыборкаСсылка.Код);
				
		Если Не ВыборкаСсылка.ЭтоГруппа Тогда 
						
			Данные.Вставить("GTIN", ?(СтрДлина(ВыборкаСсылка.GTIN)=13,"0"+ВыборкаСсылка.GTIN,ВыборкаСсылка.GTIN));			
            Данные.Вставить("Артикул", ВыборкаСсылка.Артикул);
			
			СтруктураДанных = Новый Структура;
			СтруктураДанных.Вставить("Ссылка",          XMLСтрока(ВыборкаСсылка.НоменклатурнаяГруппаСсылка));
			СтруктураДанных.Вставить("Наименование",    ВыборкаСсылка.НоменклатурнаяГруппаНаименование);			
			Данные.Вставить("НоменклатурнаяГруппа", СтруктураДанных);
			
			СтруктураДанных = Новый Структура;
			СтруктураДанных.Вставить("Ссылка",          XMLСтрока(ВыборкаСсылка.ЕдиницаИзмеренияСсылка));
			СтруктураДанных.Вставить("Наименование",    ВыборкаСсылка.ЕдиницаИзмеренияНаименование);			
			Данные.Вставить("ЕдиницаИзмерения", СтруктураДанных);
						
			Данные.Вставить("Комментарий",                      ВыборкаСсылка.Комментарий);
			Данные.Вставить("НаименованиеПолное",               ВыборкаСсылка.НаименованиеПолное);
			Данные.Вставить("ЕдиницаИзмеренияСрокаХранения",    СоответствиеСроковХранения.Получить(ВыборкаСсылка.ЕдиницаИзмеренияСрокаХранения));
			Данные.Вставить("СрокХранения",                     ВыборкаСсылка.СрокХранения);			
            Данные.Вставить("МодельУчета",                      "");
			Данные.Вставить("Типоразмер",                       ВыборкаСсылка.Типоразмер);
			Данные.Вставить("Бренд",                            ВыборкаСсылка.Бренд);
			
			Выборка = ВыборкаСсылка.Выбрать();
			
			Если Выборка.Количество() > 0 Тогда
				
				МассивДанных = Новый Массив;
				
				Пока Выборка.Следующий() Цикл
					
					СтруктураДанных = Новый Структура;
					СтруктураДанных.Вставить("Ссылка",          XMLСтрока(Выборка.УпаковкаСсылка));
					СтруктураДанных.Вставить("Наименование",    Выборка.УпаковкаНаименование);
					
					МассивДанных.Добавить(Новый Структура("Упаковка", СтруктураДанных));
					
				КонецЦикла;
				
				Данные.Вставить("Упаковки", МассивДанных);
				
			КонецЕсли;  
			
            МассивДанныхШК = Новый Массив;
            МассивОбработанныхШК = Новый Массив;
            
            Пока РезультатЗапросаШК.Следующий() Цикл
                Если Лев(СокрЛП(РезультатЗапросаШК.Штрихкод),2) <> "23" Тогда
                    Если НоменклатураСсылка.ВидПродукцииИС = Перечисления.ВидыПродукцииИС.Шины Тогда
                        Если РезультатЗапросаШК.ТипШтрихкода = ПланыВидовХарактеристик.ТипыШтрихкодов.Code39 И НЕ РезультатЗапросаШК.GTIN И Лев(РезультатЗапросаШК.Штрихкод, 1) = "0" Тогда
                            Продолжить;
                        КонецЕсли;
                    КонецЕсли;

                    СтруктураДАнныхШК = Новый Структура;
                    //++REQ1C-5628 
                    Если Не ЗначениеЗаполнено(НоменклатураСсылка.ЕдиницаХраненияОстатков) Тогда
                        Продолжить;
                    КонецЕсли;

                    Если НоменклатураСсылка.НоменклатурнаяГруппа.КонвертацияОбъектовВВМС <> Перечисления.ВариантыКонвертацииТоваровВWMS.НоменклатураХарактеристикапартия И НоменклатураСсылка <> Справочники.Номенклатура.НайтиПоКоду("ЦО08688") И НоменклатураСсылка.НоменклатурнаяГруппа <> Справочники.НоменклатурныеГруппы.НайтиПоКоду("ЦО00006") Тогда
                        Если НоменклатураСсылка.ВестиУчетПоХарактеристикам И Не ЗначениеЗаполнено(РезультатЗапросаШК.ХарактеристикаНоменклатуры) Тогда
                            Продолжить;
                        КонецЕсли;
                        СтруктураДАнныхШК.Вставить("Характеристика",    РезультатЗапросаШК.ХарактеристикаНоменклатуры);
			        Иначе
				        СтруктураДАнныхШК.Вставить("Характеристика",    Неопределено);
			        КонецЕсли;
			        Если НоменклатураСсылка = Справочники.Номенклатура.НайтиПоКоду("ЦО08688") Тогда
				        СтруктураДАнныхШК.Вставить("Партия",        РезультатЗапросаШК.СерияНоменклатуры);
			        Иначе
				        СтруктураДАнныхШК.Вставить("Партия",        Неопределено);
			        КонецЕсли; //--REQ1C-5628
                    СтруктураДАнныхШК.Вставить("Упаковка", НоменклатураСсылка.ЕдиницаХраненияОстатков);
                    
                    МассивДобавленныхШК = Новый Массив;
                    Если НоменклатураСсылка.ВидПродукцииИС = Перечисления.ВидыПродукцииИС.Шины И СтрДлина(СокрЛП(РезультатЗапросаШК.Штрихкод))=13 Тогда
                        //Если Лев(РезультатЗапросаШК.Штрихкод, 1) = "0" Тогда
                        //    СтруктураДАнныхШК.Вставить("Штрихкод", РезультатЗапросаШК.Штрихкод);
                        //Иначе
                        //    СтруктураДАнныхШК.Вставить("Штрихкод", "0"+РезультатЗапросаШК.Штрихкод);                            
                        //КонецЕсли;
                        Если Лев(РезультатЗапросаШК.Штрихкод,1)="0" Тогда			
			                МассивДобавленныхШК.Добавить(РезультатЗапросаШК.Штрихкод); 
			                МассивДобавленныхШК.Добавить(Сред(РезультатЗапросаШК.Штрихкод,2)); 
		                Иначе 
			                МассивДобавленныхШК.Добавить("0"+РезультатЗапросаШК.Штрихкод);
			                МассивДобавленныхШК.Добавить(РезультатЗапросаШК.Штрихкод);
		                КонецЕсли;

                        Для Каждого ОбрабатываемыйШК Из МассивДобавленныхШК Цикл
			                Если МассивОбработанныхШК.Найти(ОбрабатываемыйШК) = Неопределено Тогда 
				                МассивОбработанныхШК.Добавить(ОбрабатываемыйШК);				                
				                СтруктураДобавляемыхДанных = Новый Структура();
                                СтруктураДобавляемыхДанных.Вставить("Характеристика",СтруктураДАнныхШК.Характеристика);             //++REQ1C-5628 
                                СтруктураДобавляемыхДанных.Вставить("Партия",СтруктураДАнныхШК.Партия);                             //++REQ1C-5628 
				                СтруктураДобавляемыхДанных.Вставить("Упаковка",СтруктураДАнныхШК.Упаковка);
				                СтруктураДобавляемыхДанных.Вставить("Штрихкод", ОбрабатываемыйШК);
				                МассивДанныхШК.Добавить(СтруктураДобавляемыхДанных);	
			                КонецЕсли;
		                КонецЦикла;
                    Иначе
                         СтруктураДАнныхШК.Вставить("Штрихкод", РезультатЗапросаШК.Штрихкод);
                         МассивДанныхШК.Добавить(СтруктураДАнныхШК);
                    КонецЕсли;
                   
                    //МассивДанныхШК.Добавить(СтруктураДАнныхШК);
                КонецЕсли;
            КонецЦикла;
            Данные.Вставить("Штрихкоды", МассивДанныхШК);
		КонецЕсли;                     
				
	КонецЦикла;	

    Результат = Данные;
