Данные = Новый Структура;
updated = Формат(ДатаРегистрации, "ДФ=ddMMyyyyHHmmss");	

Если ТипЗнч(ОбъектОбработки) = Тип("Структура") Тогда
	
	СсылкаНаКонтрагента = ОбъектОбработки.Ссылка;
	УстановитьСвойствоСообщения("ИДСообщенияВХранилище", ОбъектОбработки.ИДСообщенияВХранилище);
	
Иначе
	
	СсылкаНаКонтрагента = ОбъектОбработки;
	
КонецЕсли;

ДанныеПоКонтрагенту = ОбменДаннымиFranchise.ПолучитьДанныеВСтруктуре(СсылкаНаКонтрагента);

мсвИтемс = Новый Массив;

сткОбъект = Новый Структура();
сткОбъект.Вставить("link", 		    ДанныеПоКонтрагенту.Ссылка);
сткОбъект.Вставить("phone", 		ДанныеПоКонтрагенту.Телефон);
сткОбъект.Вставить("email", 	    ДанныеПоКонтрагенту.Email);
сткОбъект.Вставить("first_name",    ДанныеПоКонтрагенту.Имя);
сткОбъект.Вставить("surname", 		ДанныеПоКонтрагенту.Фамилия);
сткОбъект.Вставить("middle_name",   ДанныеПоКонтрагенту.Отчество);
сткОбъект.Вставить("is_leasing",    ДанныеПоКонтрагенту.Лизинг);

сткОрганизация = Новый Структура();
сткОрганизация.Вставить("type", 		    ДанныеПоКонтрагенту.ТипКонтрагента);
сткОрганизация.Вставить("name", 		    ДанныеПоКонтрагенту.Наименование);
сткОрганизация.Вставить("company", 		    ДанныеПоКонтрагенту.Организация);
сткОрганизация.Вставить("inn", 		        ДанныеПоКонтрагенту.ИНН);
сткОрганизация.Вставить("kpp", 		        ДанныеПоКонтрагенту.КПП);
сткОрганизация.Вставить("legal_address", 	ДанныеПоКонтрагенту.ЮрАдрес);
сткОрганизация.Вставить("fact_address", 	ДанныеПоКонтрагенту.ФактАдрес);

сткОбъект.Вставить("affiliated_organization",    сткОрганизация);

сткИтем = Новый Структура();
сткИтем.Вставить("object", сткОбъект);
сткИтем.Вставить("updated", updated);

мсвИтемс.Добавить(сткИтем);  

Данные.Вставить("items", мсвИтемс);

РезультатОбработки.Body = сшпОбщегоНазначения.ПреобразоватьСтруктуруПоФормату(ФорматСообщения, Данные);


	
// 	//Автомобили
// 	Правила = Новый Соответствие;
// 	Правила.Вставить("A","а");
// 	Правила.Вставить("B","в");
// 	Правила.Вставить("E","е");
// 	Правила.Вставить("K","к");
// 	Правила.Вставить("M","м");
// 	Правила.Вставить("H","н");
// 	Правила.Вставить("O","о");
// 	Правила.Вставить("P","р");
// 	Правила.Вставить("C","с");
// 	Правила.Вставить("T","т");
// 	Правила.Вставить("Y","у");
// 	Правила.Вставить("X","х");
	
// 	Данные = Новый Структура;
	
// 	мсвИтемс = Новый Массив;
	
// 	мсвНомеровАвто = Новый Массив;
	
// 	Для каждого Авто Из ДанныеПоКонтрагенту.Автомобили.Автомобиль Цикл			
		
// 		НомерАвто = ВРЕГ(Обработки.КД_Интеграция_ТК_ЯндексДоставка.ОбщегоНазначенияСлужебныйКлиентСервер_СтрокаЛатиницей(Авто.ГосударственныйНомер, Правила));
		
// 		Если Не мсвНомеровАвто.Найти(НомерАвто) = Неопределено Тогда
// 			Продолжить;
// 		КонецЕсли;
		
// 		сткОбъект = Новый Структура();
// 		сткОбъект.Вставить("plate_number", 		        НомерАвто);
// 		сткОбъект.Вставить("client_link", 		        ДанныеПоКонтрагенту.Ссылка);
// 		сткОбъект.Вставить("car_model_link", 	        Авто.Модель.Ссылка);
// 		сткОбъект.Вставить("type",                      Авто.Модель.ТипТС);
// 		сткОбъект.Вставить("link", 				        Авто.Ссылка);
// 		сткОбъект.Вставить("is_foreign_plate_number",   Авто.ИностранныйНомер);
		
// 		сткИтем = Новый Структура();
// 		сткИтем.Вставить("object", сткОбъект);
// 		сткИтем.Вставить("updated", updated);
		
// 		мсвИтемс.Добавить(сткИтем); 
// 		мсвНомеровАвто.Добавить(НомерАвто); 
		
// 	КонецЦикла; 
	
// 	Если мсвИтемс.Количество() > 0 Тогда
		
// 		Данные.Вставить("items", мсвИтемс);
		
// 		УстановитьСвойствоСообщения("nip_Auto", сшпОбщегоНазначения.ПреобразоватьСтруктуруПоФормату(ФорматСообщения, Данные));
		
// 	КонецЕсли;
