	//ИмяТаблицыБазыОбмена=dbo_inItemPackage
	
	//Определение переменных
	Локализация = "ru";
	КлассПакета_Номенклатура = 3;
	КлассПакета_ЕдиницыИзмерения = 4;
	КлассПакета_УпаковкаНоменклатуры = 10;
	КлассПакета_НаборУпаковок = 18;
    КлассПакета_Типоразмер = 34;

	КоэффициентКонвертацииМассы = 1; // 0.001 - г -> кг
	КоэффициентКонвертацииОбъема = 1; // 1000 - м3 -> л
	КоэффициентКонвертацииДлины = 1; // 100 - м -> см

	сткСообщение = Новый Структура("СостояниеСообщения, ТекстОшибки, КоличествоПопытокОжидания, Задержка, Отказ, Узел, СоответствиеНеНайденныхИдентификаторов", 
                                    СостояниеСообщения, ТекстОшибки, КоличествоПопытокОжидания(), Задержка, Ложь, ИсточникСообщения(), Новый Соответствие);
	
	//Получение тела сообщения
	xdtoОбъект = сшпОбщегоНазначения.ПолучитьОбъектXDTO(Перечисления.сшпФорматыСообщений.JSON, ТелоСообщения());

	//Получение полей
	СсылкаXDTO = xdtoОбъект.Получить(НСтр("ru = 'Ссылка'; en = 'ID'", Локализация));
	ДатаРегистрацииXDTO = xdtoОбъект.Получить(НСтр("ru = 'ДатаРегистрации'; en = 'RegistrationDate'", Локализация));
	ПометкаУдаленияXDTO = xdtoОбъект.Получить(НСтр("ru = 'ПометкаУдаления'; en = 'DeletionMark'", Локализация));
	//ВладелецНаборУпаковокXDTO = xdtoОбъект.Получить(НСтр("ru = 'ВладелецНаборУпаковок'; en = 'OwnerIsSetOfPackages'", Локализация));
	ВладелецXDTO = xdtoОбъект.Получить(НСтр("ru = 'Владелец'; en = 'Owner'", Локализация));
	РодительXDTO = xdtoОбъект.Получить(НСтр("ru = 'Родитель'; en = 'Parent'", Локализация));
	ЕдиницаИзмеренияXDTO = xdtoОбъект.Получить(НСтр("ru = 'ЕдиницаИзмерения'; en = 'UnitOfMeasure'", Локализация));
	НаименованиеXDTO = xdtoОбъект.Получить(НСтр("ru = 'Наименование'; en = 'Description'", Локализация));
	КоэффициентXDTO = xdtoОбъект.Получить(НСтр("ru = 'Коэффициент'; en = 'Coefficient'", Локализация));
	//ВидУчетаXDTO = xdtoОбъект.Получить(НСтр("ru = 'ВидУчета'; en = 'TrackingType'", Локализация));
	ВысотаXDTO = xdtoОбъект.Получить(НСтр("ru = 'Высота'; en = 'Height'", Локализация));
	ГлубинаXDTO = xdtoОбъект.Получить(НСтр("ru = 'Глубина'; en = 'Depth'", Локализация));
	ШиринаXDTO = xdtoОбъект.Получить(НСтр("ru = 'Ширина'; en = 'Width'", Локализация));
	МассаXDTO = xdtoОбъект.Получить(НСтр("ru = 'Масса'; en = 'Weight'", Локализация));
	МассаНеттоXDTO = xdtoОбъект.Получить(НСтр("ru = 'МассаНетто'; en = 'WeightNet'", Локализация));
	ОбъемXDTO = xdtoОбъект.Получить(НСтр("ru = 'Объем'; en = 'Volume'", Локализация));
	//НаименованиеEnXDTO = xdtoОбъект.Получить(НСтр("ru = 'НаименованиеEn'; en = 'DescriptionEn'", Локализация));
	НаименованиеПолноеXDTO = xdtoОбъект.Получить(НСтр("ru = 'НаименованиеПолное'; en = 'LongDescription'", Локализация));
    //ТипоразмерXDTO = xdtoОбъект.Получить(НСтр("ru = 'ТипУпаковки'; en = 'StandardSizesOfPackages'", Локализация));

	//Поиск объекта
	ЛокальныйИдентификатор_Ссылка = ИнтеграцияСервер.ПолучитьЛокальныйИдентификатор(СсылкаXDTO, КлассПакета_УпаковкаНоменклатуры, сткСообщение.Узел);
	СсылкаНаЭлемент = Справочники.УпаковкиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ЛокальныйИдентификатор_Ссылка));

	новыйОбъект = СсылкаНаЭлемент.ПолучитьОбъект();
	Если новыйОбъект = Неопределено Тогда
		новыйОбъект = Справочники.УпаковкиНоменклатуры.СоздатьЭлемент();
		новыйОбъект.УстановитьСсылкуНового(СсылкаНаЭлемент);
		новыйОбъект.ДатаЗагрузки = ИнтеграцияСервер.ПолучитьДату(ДатаРегистрацииXDTO);
	Иначе
		ДатаЗагрузки = ИнтеграцияСервер.ПолучитьДату(ДатаРегистрацииXDTO);
		Если новыйОбъект.ДатаЗагрузки > ДатаЗагрузки Тогда
			СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
			Перейти ~Выход;
		Иначе
			новыйОбъект.ДатаЗагрузки = ДатаЗагрузки;
		КонецЕсли;	
	КонецЕсли;

	//Реквизиты шапки
	новыйОбъект.ПометкаУдаления = ИнтеграцияСервер.ПолучитьБулево(ПометкаУдаленияXDTO);
	//ВладелецНаборУпаковок = ИнтеграцияСервер.ПолучитьБулево(ВладелецНаборУпаковокXDTO);
	//Если ВладелецНаборУпаковок Тогда
	//	новыйОбъект.Владелец = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(ВладелецXDTO, "Справочник.НаборыУпаковок", КлассПакета_НаборУпаковок, сткСообщение);
	//Иначе
	новыйОбъект.Владелец = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(ВладелецXDTO, "Справочник.Номенклатура", КлассПакета_Номенклатура, сткСообщение);
	//КонецЕсли;
	новыйОбъект.Родитель = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(РодительXDTO, "Справочник.УпаковкиНоменклатуры", КлассПакета_УпаковкаНоменклатуры, сткСообщение);
	новыйОбъект.ЕдиницаИзмерения = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(ЕдиницаИзмеренияXDTO, "Справочник.ЕдиницыИзмерения", КлассПакета_ЕдиницыИзмерения, сткСообщение);
	новыйОбъект.Наименование = НаименованиеXDTO;
    //новыйОбъект.ТипоразмерУпаковки = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(ТипоразмерXDTO, "Справочник.ТипоразмерыУпаковок", КлассПакета_Типоразмер, сткСообщение);
	
	новыйОбъект.Коэффициент = КоэффициентXDTO;
	Если Не ЗначениеЗаполнено(новыйОбъект.Коэффициент) Тогда
		новыйОбъект.Коэффициент = 1;
	КонецЕсли;
	//Попытка
	//	Если ЗначениеЗаполнено(ВидУчетаXDTO) Тогда
	//		новыйОбъект.ВидУчета = XMLЗначение(Тип("ПеречислениеСсылка.ВидыУчетаУпаковок"), ВидУчетаXDTO);
	//	Иначе
	//		новыйОбъект.ВидУчета = Перечисления.ВидыУчетаУпаковок.УпаковкаШтучногоТовара;
	//	КонецЕсли;
	//Исключение
	//	новыйОбъект.ВидУчета = Перечисления.ВидыУчетаУпаковок.УпаковкаШтучногоТовара;
	//КонецПопытки;
	Если ЗначениеЗаполнено(ВысотаXDTO) Тогда
		новыйОбъект.Высота = ВысотаXDTO * КоэффициентКонвертацииДлины;
	КонецЕсли;
	Если ЗначениеЗаполнено(ГлубинаXDTO) Тогда
		новыйОбъект.Глубина = ГлубинаXDTO * КоэффициентКонвертацииДлины;
	КонецЕсли;
	Если ЗначениеЗаполнено(ШиринаXDTO) Тогда
		новыйОбъект.Ширина = ШиринаXDTO * КоэффициентКонвертацииДлины;
	КонецЕсли;
	Если ЗначениеЗаполнено(МассаXDTO) Тогда
		новыйОбъект.Масса = МассаXDTO * КоэффициентКонвертацииМассы;
	КонецЕсли;
	Если ЗначениеЗаполнено(МассаНеттоXDTO) Тогда
		новыйОбъект.МассаНетто = МассаНеттоXDTO * КоэффициентКонвертацииМассы;
	КонецЕсли;
	Если ЗначениеЗаполнено(ОбъемXDTO) Тогда
		новыйОбъект.Объем = ОбъемXDTO * КоэффициентКонвертацииОбъема;
	КонецЕсли;
	//Если ЗначениеЗаполнено(НаименованиеEnXDTO) Тогда
	//	новыйОбъект.НаименованиеEn = НаименованиеEnXDTO;
	//КонецЕсли;
	новыйОбъект.НаименованиеПолное = НаименованиеПолноеXDTO;

	//Дозапрос недостающих данных
	Если сткСообщение.СоответствиеНеНайденныхИдентификаторов.Количество() Тогда
		ИнтеграцияСервер.СформироватьЗапросНаПолучениеДанных(сткСообщение.СоответствиеНеНайденныхИдентификаторов, сткСообщение.Узел);
	КонецЕсли;

	//Запись объекта
	ИнтеграцияСервер.ЗаписатьОбъектВБазуДанных(новыйОбъект, сткСообщение);

	СостояниеСообщения = сткСообщение.СостояниеСообщения;
	ТекстОшибки = сткСообщение.ТекстОшибки;
	Задержка = сткСообщение.Задержка;

    ~Выход:;