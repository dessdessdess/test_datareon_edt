	//ИмяТаблицыБазыОбмена=dbo_inItemBatch
	
	//Определение переменных
	Локализация = "ru";
	КлассПакета_ПартияНоменклатуры = 11;
	КлассПакета_Номенклатура = 3;
	КлассПакета_ВидыОбъектовХранения = 2;

	сткСообщение = Новый Структура("СостояниеСообщения, ТекстОшибки, КоличествоПопытокОжидания, Задержка, Отказ, Узел, СоответствиеНеНайденныхИдентификаторов", 
                                    СостояниеСообщения, ТекстОшибки, КоличествоПопытокОжидания(), Задержка, Ложь, ИсточникСообщения(), Новый Соответствие);
	
	//Получение тела сообщения
	xdtoОбъект = сшпОбщегоНазначения.ПолучитьОбъектXDTO(Перечисления.сшпФорматыСообщений.JSON, ТелоСообщения());
	
	//Получение полей
	СсылкаXDTO = xdtoОбъект.Получить(НСтр("ru = 'Ссылка'; en = 'ID'", Локализация));
	ДатаРегистрацииXDTO = xdtoОбъект.Получить(НСтр("ru = 'ДатаРегистрации'; en = 'RegistrationDate'", Локализация));
	ПометкаУдаленияXDTO = xdtoОбъект.Получить(НСтр("ru = 'ПометкаУдаления'; en = 'DeletionMark'", Локализация));
	ДатаПроизводстваXDTO = xdtoОбъект.Получить(НСтр("ru = 'ДатаПроизводства'; en = 'ManufactureDate'", Локализация));
	//СрокГодностиXDTO = xdtoОбъект.Получить(НСтр("ru = 'СрокГодности'; en = 'BBD'", Локализация));
	НоменклатураXDTO = xdtoОбъект.Получить(НСтр("ru = 'Номенклатура'; en = 'Item'", Локализация));
	//КодXDTO = xdtoОбъект.Получить(НСтр("ru = 'Код'; en = 'Code'", Локализация));
	НаименованиеXDTO = xdtoОбъект.Получить(НСтр("ru = 'Наименование'; en = 'Description'", Локализация));
	//ВидНоменклатурыXDTO = xdtoОбъект.Получить(НСтр("ru = 'ВидНоменклатуры'; en = 'ItemType'", Локализация));

    //ШтрихкодXDTO = xdtoОбъект.Получить(НСтр("ru = 'Штрихкод'; en = 'Barcode'", Локализация));
	
	//Поиск объекта
	ЛокальныйИдентификатор_Ссылка = ИнтеграцияСервер.ПолучитьЛокальныйИдентификатор(СсылкаXDTO, КлассПакета_ПартияНоменклатуры, сткСообщение.Узел);
	СсылкаНаЭлемент = Справочники.ПартииНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ЛокальныйИдентификатор_Ссылка));
    
	новыйОбъект = СсылкаНаЭлемент.ПолучитьОбъект();
    
    //++05.06.2025 Никифоркин
    Если новыйОбъект = Неопределено Тогда
        СсылкаНаЭлементПоНаименованию = Справочники.ПартииНоменклатуры.НайтиПоНаименованию(НаименованиеXDTO); 
        Если СсылкаНаЭлементПоНаименованию = Неопределено Тогда

        ИначеЕсли СсылкаНаЭлементПоНаименованию.Пустая() Тогда

        Иначе                                              
            новыйОбъект = СсылкаНаЭлементПоНаименованию.ПолучитьОбъект();
        КонецЕсли;
    КонецЕсли;  //--05.06.2025 Никифоркин

	Если новыйОбъект = Неопределено Тогда
		новыйОбъект = Справочники.ПартииНоменклатуры.СоздатьЭлемент();
		новыйОбъект.УстановитьСсылкуНового(СсылкаНаЭлемент);
		новыйОбъект.ДатаЗагрузки = ИнтеграцияСервер.ПолучитьДату(ДатаРегистрацииXDTO);
	Иначе
		ДатаЗагрузки = ИнтеграцияСервер.ПолучитьДату(ДатаРегистрацииXDTO);
		Если новыйОбъект.ДатаЗагрузки > ДатаЗагрузки Тогда
			СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
			Перейти ~Выход;
		Иначе
			новыйОбъект.ДатаЗагрузки = ДатаЗагрузки;
		КонецЕсли;	
	КонецЕсли;

	новыйОбъект.ПометкаУдаления = ИнтеграцияСервер.ПолучитьБулево(ПометкаУдаленияXDTO);
	новыйОбъект.ДатаПроизводства = ИнтеграцияСервер.ПолучитьДату(ДатаПроизводстваXDTO);
	//новыйОбъект.СрокГодности = ИнтеграцияСервер.ПолучитьДату(СрокГодностиXDTO);
	//новыйОбъект.Код = КодXDTO;
	новыйОбъект.Наименование = НаименованиеXDTO;
	
	//Если НоменклатураXDTO.Ссылка <> "" Тогда
	новыйОбъект.Владелец = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(НоменклатураXDTO, "Справочник.Номенклатура", КлассПакета_Номенклатура, сткСообщение);
	//Иначе
	//	новыйОбъект.Владелец = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(ВидНоменклатурыXDTO, "Справочник.ВидыОбъектовХранения", КлассПакета_ВидыОбъектовХранения, сткСообщение);	
	//	
	//	Таблица = Новый ТаблицаЗначений;
	//	Таблица.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	//
	//	текТаблица = xdtoОбъект[НСтр("ru = 'СписокНоменклатуры'; en = 'Items'", Локализация)].Последовательность();
	//	Для Инд = 0 По текТаблица.Количество() - 1 Цикл
	//		xdtoСтрока = текТаблица.ПолучитьЗначение(Инд);
	//		текНоменклатураXDTO = xdtoСтрока.Получить(НСтр("ru = 'Номенклатура'; en = 'Item'", Локализация));
	//		текСтрока = Таблица.Добавить();
	//		текСтрока.Номенклатура = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(текНоменклатураXDTO, "Справочник.Номенклатура", КлассПакета_Номенклатура, сткСообщение);
	//	КонецЦикла;
	//КонецЕсли;
	
	//Дозапрос недостающих данных
	Если сткСообщение.СоответствиеНеНайденныхИдентификаторов.Количество() Тогда
		ИнтеграцияСервер.СформироватьЗапросНаПолучениеДанных(сткСообщение.СоответствиеНеНайденныхИдентификаторов, сткСообщение.Узел);
	КонецЕсли;

	Если Не сткСообщение.Отказ И НоменклатураXDTO.Ссылка = "" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОбъектыХраненияДляНоменклатуры.ОбъектХранения КАК ОбъектХранения,
		|	Партии.Ссылка КАК Партия,
		|	ВЫБОР
		|		КОГДА Партии.Ссылка ЕСТЬ NULL
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Создать
		|ИЗ
		|	РегистрСведений.ОбъектыХраненияДляНоменклатуры КАК ОбъектыХраненияДляНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партии КАК Партии
		|		ПО ОбъектыХраненияДляНоменклатуры.ОбъектХранения = Партии.Владелец
		|		И (Партии.ПартияНоменклатуры = &ПартияНоменклатуры)
		|ГДЕ
		|	ОбъектыХраненияДляНоменклатуры.Номенклатура В (&СпиокНоменклатуры)";
		
		//Запрос.УстановитьПараметр("СпиокНоменклатуры",     Таблица.ВыгрузитьКолонку("Номенклатура"));
		Запрос.УстановитьПараметр("ПартияНоменклатуры", 	новыйОбъект.Ссылка);
		ОбъектыХранения = Запрос.Выполнить().Выгрузить();
	
		новыйОбъект.ДополнительныеСвойства.Вставить("ОбъектыХранения", ОбъектыХранения);
		массивСвойств = Справочники.Партии.МассивОбщихСвойствДляСвязанных();	
		сткРезультат = Новый Структура;
		Для Каждого ИмяСвойства Из МассивСвойств Цикл
			сткРезультат.Вставить(ИмяСвойства, новыйОбъект[ИмяСвойства]);
		КонецЦикла;
		новыйОбъект.ДополнительныеСвойства.Вставить("ОбновлятьСвязанные", сткРезультат);
			
	КонецЕсли;

	//Запись объекта 
	ИнтеграцияСервер.ЗаписатьОбъектВБазуДанных(новыйОбъект, сткСообщение);

//   Если Не сткСообщение.Отказ И ЗначениеЗаполнено(ШтрихкодXDTO) Тогда
//        новыйНабор = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьНаборЗаписей();
//        новыйНабор.Отбор.Номенклатура.Установить(новыйОбъект.Владелец);
//        новыйНабор.Отбор.Штрихкод.Установить(ШтрихкодXDTO);
//        новыйНабор.Прочитать();
//       Если новыйНабор.Количество() > 0 Тогда
//            Если новыйНабор[0].ДатаЗагрузки < ДатаЗагрузки Тогда
//                новыйНабор[0].Номенклатура = новыйОбъект.Владелец;
//                новыйНабор[0].Штрихкод = ШтрихкодXDTO;
//                новыйНабор[0].ПартияНоменклатуры = новыйОбъект.Ссылка;
//                новыйНабор[0].Состояние = Справочники.СостоянияОбъектовХранения.Годен;
//                новыйНабор[0].ДатаЗагрузки = ДатаЗагрузки;
//            КонецЕсли;
//        Иначе
//            новаяЗапись = новыйНабор.Добавить();
//            новаяЗапись.Номенклатура = новыйОбъект.Владелец;	
//            новаяЗапись.Штрихкод = ШтрихкодXDTO;
//            новаяЗапись.ПартияНоменклатуры = новыйОбъект.Ссылка;
//            новаяЗапись.Состояние = Справочники.СостоянияОбъектовХранения.Годен;
//            новаяЗапись.ДатаЗагрузки = ДатаЗагрузки;
//        КонецЕсли;	
//        новыйНабор.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина);
//        новыйНабор.Записать();
//    КонецЕсли;

	СостояниеСообщения = сткСообщение.СостояниеСообщения;
	ТекстОшибки = сткСообщение.ТекстОшибки;
	Задержка = сткСообщение.Задержка;

    ~Выход:;