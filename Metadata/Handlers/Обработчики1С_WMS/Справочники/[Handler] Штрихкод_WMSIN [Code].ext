//ИмяТаблицыБазыОбмена=dbo_inBarcodes
	
	//Определение переменных
	Локализация = "ru";
	КлассПакета_Номенклатура = 3;
	КлассПакета_УпаковкаНоменклатуры = 10;
	КлассПакета_Партия = 11;
	КлассПакета_Характеристика = 13;

	сткСообщение = Новый Структура("СостояниеСообщения, ТекстОшибки, КоличествоПопытокОжидания, Задержка, Отказ, Узел, СоответствиеНеНайденныхИдентификаторов", 
                                    СостояниеСообщения, ТекстОшибки, КоличествоПопытокОжидания(), Задержка, Ложь, ИсточникСообщения(), Новый Соответствие);
	
	//Получение тела сообщения
	xdtoОбъект = сшпОбщегоНазначения.ПолучитьОбъектXDTO(Перечисления.сшпФорматыСообщений.JSON, ТелоСообщения());

	текТаблица = xdtoОбъект[НСтр("ru = 'Штрихкоды'; en = 'Barcodes'", Локализация)].Последовательность();
	колвоЗаписей = текТаблица.Количество();
	Если колвоЗаписей > 0 Тогда
		Для Инд = 0 По колвоЗаписей - 1 Цикл
			xdtoСтрока = текТаблица.ПолучитьЗначение(Инд);
			
			НоменклатураXDTO = xdtoСтрока.Получить(НСтр("ru = 'Номенклатура'; en = 'Item'", Локализация));
			ХарактеристикаXDTO = xdtoСтрока.Получить(НСтр("ru = 'Характеристика'; en = 'ItemCharacteristic'", Локализация));
            УпаковкаXDTO = xdtoСтрока.Получить(НСтр("ru = 'Упаковка'; en = 'ItemPackage'", Локализация));                 
			ПартияXDTO = xdtoСтрока.Получить(НСтр("ru = 'Партия'; en = 'Batch'", Локализация));
			ШтрихкодXDTO = xdtoСтрока.Получить(НСтр("ru = 'Штрихкод'; en = 'Barcode'", Локализация));	
			ДатаРегистрацииXDTO = xdtoСтрока.Получить(НСтр("ru = 'ДатаРегистрации'; en = 'RegistrationDate'", Локализация));
			ДатаЗагрузки = XMLЗначение(Тип("Дата"), ДатаРегистрацииXDTO);		
			
			текНом = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(НоменклатураXDTO, "Справочник.Номенклатура", КлассПакета_Номенклатура, сткСообщение);
			текХарНом = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(ХарактеристикаXDTO, "Справочник.ХарактеристикиНоменклатуры", КлассПакета_Характеристика, сткСообщение);
			текУпак = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(УпаковкаXDTO, "Справочник.УпаковкиНоменклатуры", КлассПакета_УпаковкаНоменклатуры, сткСообщение);
			текПартия = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(ПартияXDTO, "Справочник.ПартииНоменклатуры", КлассПакета_Партия, сткСообщение);
			текШтрихкод = ШтрихкодXDTO;
//			текСостояние = Справочники.СостоянияОбъектовХранения.Годен;
			Если Не сткСообщение.Отказ Тогда
				новыйНабор = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьНаборЗаписей();
				//новыйНабор.Отбор.Номенклатура.Установить(текНом);                             //++REQ1C-5628
				//новыйНабор.Отбор.ХарактеристикаНоменклатуры.Установить(текХарНом);            //++REQ1C-5628
				//новыйНабор.Отбор.УпаковкаНоменклатуры.Установить(текУпак);                    //++REQ1C-5628
				новыйНабор.Отбор.Штрихкод.Установить(текШтрихкод);
				новыйНабор.Прочитать();
                
                Для Индекс = -новыйНабор.Количество()+1 По 0 Цикл
	                Строка = новыйНабор.Получить(-Индекс);
	                Если Не ЗначениеЗаполнено(Строка.УпаковкаНоменклатуры) Тогда
		                новыйНабор.Удалить(Строка);
	                КонецЕсли;
                КонецЦикла;

				Если новыйНабор.Количество() Тогда
					Если новыйНабор[0].ДатаЗагрузки > ДатаЗагрузки Тогда
						Продолжить;
					КонецЕсли;
					новыйНабор[0].Номенклатура = текНом;
					новыйНабор[0].ХарактеристикаНоменклатуры = текХарНом;
					новыйНабор[0].УпаковкаНоменклатуры = текУпак;
					новыйНабор[0].Штрихкод = текШтрихкод;
					новыйНабор[0].ПартияНоменклатуры = текПартия;
//					новыйНабор[0].Состояние = текСостояние;
					новыйНабор[0].ДатаЗагрузки = ДатаЗагрузки;
				Иначе
					новаяЗапись = новыйНабор.Добавить();
					новаяЗапись.Номенклатура = текНом;	
					новаяЗапись.ХарактеристикаНоменклатуры = текХарНом;	
					новаяЗапись.УпаковкаНоменклатуры = текУпак;	
					новаяЗапись.Штрихкод = текШтрихкод;
					новаяЗапись.ПартияНоменклатуры = текПартия;
//					новаяЗапись.Состояние = текСостояние;
					новаяЗапись.ДатаЗагрузки = ДатаЗагрузки;
				КонецЕсли;	
				новыйНабор.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина);
				новыйНабор.Записать();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	//Дозапрос недостающих данных
	Если сткСообщение.СоответствиеНеНайденныхИдентификаторов.Количество() Тогда
		ИнтеграцияСервер.СформироватьЗапросНаПолучениеДанных(сткСообщение.СоответствиеНеНайденныхИдентификаторов, сткСообщение.Узел);
	КонецЕсли;

	СостояниеСообщения = сткСообщение.СостояниеСообщения;
	ТекстОшибки = сткСообщение.ТекстОшибки;
	Задержка = сткСообщение.Задержка;