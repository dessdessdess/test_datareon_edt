	//ИмяТаблицыБазыОбмена=dbo_inItemCharacteristic
		
	//Определение переменных
	Локализация = "ru";
	КлассПакета_ВидНоменклатуры = 2;
	КлассПакета_Номенклатура = 3;
	КлассПакета_Контрагент = 5;
	КлассПакета_ХарактеристикиНоменклатуры = 13;

	сткСообщение = Новый Структура("СостояниеСообщения, ТекстОшибки, КоличествоПопытокОжидания, Задержка, Отказ, Узел, СоответствиеНеНайденныхИдентификаторов", 
                                    СостояниеСообщения, ТекстОшибки, КоличествоПопытокОжидания(), Задержка, Ложь, ИсточникСообщения(), Новый Соответствие);
	
	//Получение тела сообщения
	xdtoОбъект = сшпОбщегоНазначения.ПолучитьОбъектXDTO(Перечисления.сшпФорматыСообщений.JSON, ТелоСообщения());
	
	//Получение полей
	СсылкаXDTO = xdtoОбъект.Получить(НСтр("ru = 'Ссылка'; en = 'ID'", Локализация));
	ДатаРегистрацииXDTO = xdtoОбъект.Получить(НСтр("ru = 'ДатаРегистрации'; en = 'RegistrationDate'", Локализация));
	ПометкаУдаленияXDTO = xdtoОбъект.Получить(НСтр("ru = 'ПометкаУдаления'; en = 'DeletionMark'", Локализация));
	НаименованиеXDTO = xdtoОбъект.Получить(НСтр("ru = 'Наименование'; en = 'Description'", Локализация));
	//ВладелецНоменклатураXDTO = xdtoОбъект.Получить(НСтр("ru = 'ВладелецНоменклатура'; en = 'OwnerIsItem'", Локализация));
	ВладелецXDTO = xdtoОбъект.Получить(НСтр("ru = 'Владелец'; en = 'Owner'", Локализация));

	//Поиск объекта
	ЛокальныйИдентификатор_Ссылка = ИнтеграцияСервер.ПолучитьЛокальныйИдентификатор(СсылкаXDTO, КлассПакета_ХарактеристикиНоменклатуры, сткСообщение.Узел);
	СсылкаНаЭлемент = Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ЛокальныйИдентификатор_Ссылка));

	новыйОбъект = СсылкаНаЭлемент.ПолучитьОбъект();
	Если новыйОбъект = Неопределено Тогда
		новыйОбъект = Справочники.ХарактеристикиНоменклатуры.СоздатьЭлемент();
		новыйОбъект.УстановитьСсылкуНового(СсылкаНаЭлемент);
		новыйОбъект.ДатаЗагрузки = ИнтеграцияСервер.ПолучитьДату(ДатаРегистрацииXDTO);
	Иначе
		ДатаЗагрузки = ИнтеграцияСервер.ПолучитьДату(ДатаРегистрацииXDTO);
		Если новыйОбъект.ДатаЗагрузки > ДатаЗагрузки Тогда
			СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
			Перейти ~Выход;
		Иначе
			новыйОбъект.ДатаЗагрузки = ДатаЗагрузки;
		КонецЕсли;	
	КонецЕсли;

	//Реквизиты шапки
	новыйОбъект.ПометкаУдаления = ИнтеграцияСервер.ПолучитьБулево(ПометкаУдаленияXDTO);
	новыйОбъект.Наименование = НаименованиеXDTO;
	//ВладелецНоменклатура = ИнтеграцияСервер.ПолучитьБулево(ВладелецНоменклатураXDTO);
	//Если ВладелецНоменклатура Тогда
	новыйОбъект.Владелец = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(ВладелецXDTO, "Справочник.Номенклатура", КлассПакета_Номенклатура, сткСообщение);
	//Иначе
	//	новыйОбъект.Владелец = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(ВладелецXDTO, "Справочник.ВидыОбъектовХранения", КлассПакета_ВидНоменклатуры, сткСообщение);
	//КонецЕсли;

	//Табличные части
	//СвойстваОбъекта = ИнтеграцияСервер.ПолучитьДопРеквизитыОбъекта(новыйОбъект);
	//сткПоиска = Новый Структура("Свойство");
	//текТаблица = xdtoОбъект[НСтр("ru = 'ДополнительныеРеквизиты'; en = 'AdditionalAttributes'", Локализация)].Последовательность();
	//Для Инд = 0 По текТаблица.Количество() - 1 Цикл
		//xdtoСтрока = текТаблица.ПолучитьЗначение(Инд);
		//СвойствоXDTO = xdtoСтрока.Получить(НСтр("ru = 'Свойство'; en = 'Property'", Локализация));
		//ТекстоваяСтрокаXDTO = xdtoСтрока.Получить(НСтр("ru = 'ТекстоваяСтрока'; en = 'TextString'", Локализация));
		//ЗначениеXDTO = xdtoСтрока.Получить(НСтр("ru = 'Значение'; en = 'Value'", Локализация));
		
		//Свойство_Ссылка = ИнтеграцияСервер.ПолучитьЛокальныйИдентификатор(СвойствоXDTO.Ссылка, 0, сткСообщение.Узел);
		//СсылкаНаСвойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(Новый УникальныйИдентификатор(Свойство_Ссылка));
		//ОбъектСвойство = СсылкаНаСвойство.ПолучитьОбъект();
		//Если ОбъектСвойство = Неопределено Тогда
			//Продолжить;
		//Иначе
			//сткПоиска.Свойство = 	СсылкаНаСвойство;
		//КонецЕсли;	
		
		//Если ЗначениеЗаполнено(сткПоиска.Свойство) И СвойстваОбъекта.Найти(сткПоиска.Свойство) <> Неопределено Тогда
			//мсвСтрок = новыйОбъект.ДополнительныеРеквизиты.НайтиСтроки(сткПоиска);
			//Если мсвСтрок.Количество() Тогда
				//текСтрока = мсвСтрок[0];
			//Иначе
				//текСтрока = новыйОбъект.ДополнительныеРеквизиты.Добавить();
			//КонецЕсли;

			//текСтрока.Свойство = сткПоиска.Свойство;
			//текСтрока.ТекстоваяСтрока = ТекстоваяСтрокаXDTO;

			//Значение = ЗначениеXDTO.Ссылка;
			//Если текСтрока.Свойство.ТипЗначения.СодержитТип(Тип("СправочникСсылка.Контрагенты")) Тогда
				//текСтрока.Значение = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(ЗначениеXDTO, "Справочник.Контрагенты", КлассПакета_Контрагент, сткСообщение);
			//ИначеЕсли текСтрока.Свойство.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
				//Если ИнтеграцияСервер.ИдентификаторЗаполнен(Значение) Тогда
					//ЗначениеСвойства = Справочники.ЗначенияСвойствОбъектов.ПолучитьСсылку(Новый УникальныйИдентификатор(Значение));
					//Если ЗначениеСвойства.ПолучитьОбъект() = Неопределено Тогда
						//НовоеЗначениеСвойства = Справочники.ЗначенияСвойствОбъектов.СоздатьЭлемент();
						//НовоеЗначениеСвойства.УстановитьСсылкуНового(ЗначениеСвойства);
						//НовоеЗначениеСвойства.Наименование = текСтрока.ТекстоваяСтрока;
						//НовоеЗначениеСвойства.Владелец = СсылкаНаСвойство;
						//ИнтеграцияСервер.ЗаписатьОбъектВБазуДанных(НовоеЗначениеСвойства, сткСообщение);
					//КонецЕсли;
					//текСтрока.Значение = ЗначениеСвойства;
				//Иначе
					//текСтрока.Значение = Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка();
				//КонецЕсли;
			//ИначеЕсли текСтрока.Свойство.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
				//Если ИнтеграцияСервер.ИдентификаторЗаполнен(Значение) Тогда
					//ЗначениеСвойства = Справочники.ЗначенияСвойствОбъектовИерархия.ПолучитьСсылку(Новый УникальныйИдентификатор(Значение));
					//Если ЗначениеСвойства.ПолучитьОбъект() = Неопределено Тогда
						//НовоеЗначениеСвойства = Справочники.ЗначенияСвойствОбъектовИерархия.СоздатьЭлемент();
						//НовоеЗначениеСвойства.УстановитьСсылкуНового(ЗначениеСвойства);
						//НовоеЗначениеСвойства.Наименование = текСтрока.ТекстоваяСтрока;
						//НовоеЗначениеСвойства.Владелец = СсылкаНаСвойство;
						//ИнтеграцияСервер.ЗаписатьОбъектВБазуДанных(НовоеЗначениеСвойства, сткСообщение);
					//КонецЕсли;
					//текСтрока.Значение = ЗначениеСвойства;
				//Иначе
					//текСтрока.Значение = Справочники.ЗначенияСвойствОбъектовИерархия.ПустаяСсылка();
				//КонецЕсли;
			//Иначе
				//текСтрока.Значение = Значение;
			//КонецЕсли;
		//КонецЕсли;
	//КонецЦикла;

	//Дозапрос недостающих данных
	Если сткСообщение.СоответствиеНеНайденныхИдентификаторов.Количество() Тогда
		ИнтеграцияСервер.СформироватьЗапросНаПолучениеДанных(сткСообщение.СоответствиеНеНайденныхИдентификаторов, сткСообщение.Узел);
	КонецЕсли;

	//Запись объекта
	ИнтеграцияСервер.ЗаписатьОбъектВБазуДанных(новыйОбъект, сткСообщение);

	СостояниеСообщения = сткСообщение.СостояниеСообщения;
	ТекстОшибки = сткСообщение.ТекстОшибки;
	Задержка = сткСообщение.Задержка;

    ~Выход:;
