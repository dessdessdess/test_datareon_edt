//Определение переменных
//Отладка(ОбъектОбработки.Товары[0].Характеристика);
    
    Локализация = "ru";
	КлассПакета_Номенклатура = 3;        
	КлассПакета_Контрагент = 5;
	КлассПакета_ПартияНоменклатуры = 11;
	КлассПакета_Характеристика = 13;
	КлассПакета_Состояния = 12;

//  тбНоменклатуры = Новый ТаблицаЗначений;
//	тбНоменклатуры.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
//	тбНоменклатуры.Колонки.Добавить("ХарактеристикаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры")); 
//	тбНоменклатуры.Колонки.Добавить("ПартияНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ПартииНоменклатуры"));
//    тбНоменклатуры.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
//    тбНоменклатуры.Колонки.Добавить("НоменклатурнаяГруппа", Новый ОписаниеТипов("СправочникСсылка.ВидыОбъектовХранения"));
//	
//	Для Каждого ЭлементМассива Из ОбъектОбработки.Товары Цикл
//		НоваяСтрока = тбНоменклатуры.Добавить(); 
//		Если ЗначениеЗаполнено(ЭлементМассива.Номенклатура) Тогда
//            НоваяСтрока.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(ЭлементМассива.Номенклатура));
//        Иначе
//            НоваяСтрока.Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
//		КонецЕсли;         
//        Если ЗначениеЗаполнено(ЭлементМассива.Характеристика) Тогда
//		    НоваяСтрока.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ЭлементМассива.Характеристика));
//        Иначе
//            НоваяСтрока.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
//		КонецЕсли;   
//		Если ЗначениеЗаполнено(ЭлементМассива.Партия) Тогда
//		    НоваяСтрока.ПартияНоменклатуры = Справочники.ПартииНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ЭлементМассива.Партия));
//        Иначе
//            НоваяСтрока.ПартияНоменклатуры = Справочники.ПартииНоменклатуры.ПустаяСсылка();
//        КонецЕсли;
//		Если ЗначениеЗаполнено(ЭлементМассива.Склад) Тогда
//		    НоваяСтрока.Склад = Справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор(ЭлементМассива.Склад));
//        Иначе
//            НоваяСтрока.Склад = Справочники.Контрагенты.ПустаяСсылка();
//        КонецЕсли;
//        Если ЗначениеЗаполнено(ЭлементМассива.НоменклатурнаяГруппа) Тогда
//		    НоваяСтрока.НоменклатурнаяГруппа = Справочники.ВидыОбъектовХранения.ПолучитьСсылку(Новый УникальныйИдентификатор(ЭлементМассива.НоменклатурнаяГруппа));
//        Иначе
//            НоваяСтрока.НоменклатурнаяГруппа = Справочники.ВидыОбъектовХранения.ПустаяСсылка();
//        КонецЕсли;
//	КонецЦикла;
//
//    Запрос = Новый Запрос;
//  	Запрос.Текст = "ВЫБРАТЬ
//  	               |	тбНоменклатуры.Номенклатура КАК Номенклатура,
//  	               |	тбНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
//  	               |	тбНоменклатуры.ПартияНоменклатуры КАК ПартияНоменклатуры,
//  	               |	тбНоменклатуры.Склад КАК Склад,
//                     |	тбНоменклатуры.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа  
//  	               |ПОМЕСТИТЬ втНоменклатура
//  	               |ИЗ
//  	               |	&тбНоменклатуры КАК тбНоменклатуры
//  	               |;
//  	               |
//  	               |////////////////////////////////////////////////////////////////////////////////
//  	               |ВЫБРАТЬ
//  	               |	Остатки.ОбъектХранения.Номенклатура КАК Номенклатура,
//  	               |	Остатки.ОбъектХранения.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
//  	               |	Остатки.Партия.ПартияНоменклатуры КАК ПартияНоменклатуры,
//  	               |	Остатки.Количество КАК Количество,
//  	               |	Остатки.Состояние КАК Состояние,
//  	               |	Остатки.Состояние.бр_Склад КАК Склад,
//  	               |	Остатки.МестоХранения КАК МестоХранения
//  	               |ПОМЕСТИТЬ ИтоговаяНесвернутая
//  	               |ИЗ
//  	               |	втНоменклатура КАК втНоменклатура
//  	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Остатки КАК Остатки
//  	               |		ПО (втНоменклатура.Склад В (Остатки.Состояние.бр_Склад, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)))
//                     |        И &УсловиеОтбора		
//  	               |		
//  	               |;
//  	               |
//  	               |////////////////////////////////////////////////////////////////////////////////
//  	               |ВЫБРАТЬ
//  	               |	ИтоговаяНесвернутая.Номенклатура КАК Номенклатура,
//  	               |	ИтоговаяНесвернутая.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
//  	               |	ИтоговаяНесвернутая.ПартияНоменклатуры КАК ПартияНоменклатуры,
//  	               |	СУММА(ИтоговаяНесвернутая.Количество) КАК Количество,
//  	               |	ИтоговаяНесвернутая.Состояние КАК Состояние,
//  	               |	ИтоговаяНесвернутая.Склад КАК Склад
//  	               |ИЗ
//  	               |	ИтоговаяНесвернутая КАК ИтоговаяНесвернутая
//  	               |
//  	               |СГРУППИРОВАТЬ ПО
//  	               |	ИтоговаяНесвернутая.Номенклатура,
//  	               |	ИтоговаяНесвернутая.ПартияНоменклатуры,
//  	               |	ИтоговаяНесвернутая.ХарактеристикаНоменклатуры,
//  	               |	ИтоговаяНесвернутая.Состояние,
//  	               |	ИтоговаяНесвернутая.Склад
//  	               |
//  	               |ИМЕЮЩИЕ
//  	               |	СУММА(ИтоговаяНесвернутая.Количество) <> 0
//  	               |АВТОУПОРЯДОЧИВАНИЕ";
//
//    Если ЗначениеЗаполнено(ЭлементМассива.НоменклатурнаяГруппа) Тогда
//		 СтрокаУсловия = "втНоменклатура.НоменклатурнаяГруппа = Остатки.ОбъектХранения.Номенклатура.ВидНоменклатуры";
//    Иначе
//        СтрокаУсловия = "втНоменклатура.Номенклатура = Остатки.ОбъектХранения.Номенклатура И втНоменклатура.ХарактеристикаНоменклатуры В (Остатки.ОбъектХранения.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) И втНоменклатура.ПартияНоменклатуры В (Остатки.Партия.ПартияНоменклатуры, ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка))";  
//    КонецЕсли;
//    
//    Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбора",СтрокаУсловия);
//    Запрос.УстановитьПараметр("тбНоменклатуры",тбНоменклатуры);

    МассивНоменклатурнаяГруппа = Новый Массив;
    МассивНоменклатура = Новый Массив;
    МассивХарактеристика = Новый Массив;
    МассивПартия = Новый Массив;
    МассивСклад = Новый Массив;

    Для Каждого ЭлементМассива Из ОбъектОбработки.Товары Цикл
		Если ЗначениеЗаполнено(ЭлементМассива.НоменклатурнаяГруппа) Тогда
		    МассивНоменклатурнаяГруппа.Добавить(Справочники.ВидыОбъектовХранения.ПолучитьСсылку(Новый УникальныйИдентификатор(ЭлементМассива.НоменклатурнаяГруппа)));
        КонецЕсли;
        Если ЗначениеЗаполнено(ЭлементМассива.Номенклатура) Тогда
            МассивНоменклатура.Добавить(Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(ЭлементМассива.Номенклатура)));
		КонецЕсли;         
        Если ЗначениеЗаполнено(ЭлементМассива.Характеристика) Тогда
		    МассивХарактеристика.Добавить(Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ЭлементМассива.Характеристика)));
		КонецЕсли;   
		Если ЗначениеЗаполнено(ЭлементМассива.Партия) Тогда
		    МассивПартия.Добавить(Справочники.ПартииНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(ЭлементМассива.Партия)));
        КонецЕсли;
		Если ЗначениеЗаполнено(ЭлементМассива.Склад) Тогда
		    МассивСклад.Добавить(Справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор(ЭлементМассива.Склад)));
        КонецЕсли;
	КонецЦикла;

    Запрос = Новый Запрос;
  	Запрос.Текст = "ВЫБРАТЬ
  	               |	Остатки.ОбъектХранения.Номенклатура КАК Номенклатура,
  	               |	Остатки.ОбъектХранения.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
  	               |	Остатки.Партия.ПартияНоменклатуры КАК ПартияНоменклатуры,
  	               |	Остатки.Количество КАК Количество,
  	               |	Остатки.Состояние КАК Состояние,
  	               |	Остатки.Состояние.бр_Склад КАК Склад,
  	               |	Остатки.МестоХранения КАК МестоХранения
  	               |ПОМЕСТИТЬ ИтоговаяНесвернутая
  	               |ИЗ
  	               |	РегистрСведений.Остатки КАК Остатки
                   |ГДЕ &ДополнительныеУсловияОтбора		
  	               |		
  	               |;
  	               |
  	               |////////////////////////////////////////////////////////////////////////////////
  	               |ВЫБРАТЬ
  	               |	ИтоговаяНесвернутая.Номенклатура КАК Номенклатура,
  	               |	ИтоговаяНесвернутая.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
  	               |	ИтоговаяНесвернутая.ПартияНоменклатуры КАК ПартияНоменклатуры,
  	               |	СУММА(ИтоговаяНесвернутая.Количество) КАК Количество,
  	               |	ИтоговаяНесвернутая.Состояние КАК Состояние,
  	               |	ИтоговаяНесвернутая.Склад КАК Склад,
                   |	ИтоговаяНесвернутая.МестоХранения КАК МестоХранения
  	               |ИЗ
  	               |	ИтоговаяНесвернутая КАК ИтоговаяНесвернутая
  	               |
  	               |СГРУППИРОВАТЬ ПО
  	               |	ИтоговаяНесвернутая.Номенклатура,
  	               |	ИтоговаяНесвернутая.ПартияНоменклатуры,
  	               |	ИтоговаяНесвернутая.ХарактеристикаНоменклатуры,
  	               |	ИтоговаяНесвернутая.Состояние,
  	               |	ИтоговаяНесвернутая.Склад,
                   |	ИтоговаяНесвернутая.МестоХранения
  	               |
  	               |ИМЕЮЩИЕ
  	               |	СУММА(ИтоговаяНесвернутая.Количество) <> 0
  	               |АВТОУПОРЯДОЧИВАНИЕ";

    СтрокаУсловия = " Остатки.Состояние.бр_Склад В (&МассивСклад)";
    Если МассивНоменклатурнаяГруппа.Количество()>0 Тогда
        СтрокаУсловия = СтрокаУсловия + " И Остатки.ОбъектХранения.Номенклатура.ВидНоменклатуры В (&МассивНоменклатурнаяГруппа)"; 
    КонецЕсли;
    
    Если МассивНоменклатура.Количество()>0 Тогда
        СтрокаУсловия = СтрокаУсловия + " И Остатки.ОбъектХранения.Номенклатура В (&МассивНоменклатура)";
    КонецЕсли;
    
    //Если МассивХарактеристика.Количество()>0 Тогда  
    //    СтрокаУсловия = СтрокаУсловия + " И Остатки.ОбъектХранения.ХарактеристикаНоменклатуры В (&МассивХарактеристика)";
    //КонецЕсли;
    
    //Если МассивПартия.Количество()>0 Тогда
    //    СтрокаУсловия = СтрокаУсловия + " И Остатки.Партия.ПартияНоменклатуры В (&МассивПартия)";
    //КонецЕсли;
 
    Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ДополнительныеУсловияОтбора",СтрокаУсловия);
    
    Запрос.УстановитьПараметр("МассивСклад",МассивСклад);
    Запрос.УстановитьПараметр("МассивНоменклатурнаяГруппа",МассивНоменклатурнаяГруппа);
    Запрос.УстановитьПараметр("МассивНоменклатура",МассивНоменклатура);
    Запрос.УстановитьПараметр("МассивХарактеристика",МассивХарактеристика);
    Запрос.УстановитьПараметр("МассивПартия",МассивПартия);

  	Результат = Запрос.Выполнить();
  	Выборка = Результат.Выбрать();

	Если ЗначениеЗаполнено(ОбъектОбработки.ДатаЗапроса) Тогда
		ДатаЗапроса = ОбъектОбработки.ДатаЗапроса;
	Иначе
		ДатаЗапроса = ТекущаяДата();
	КонецЕсли;

	сткДанные = Новый Структура;

	сткДанные.Вставить("ИдентификаторЗапроса", ОбъектОбработки.ИдентификаторЗапроса); 
	сткДанные.Вставить("ДатаЗапроса", ДатаЗапроса);

	массивСтроки = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Данные = Новый Структура;
		Данные.Вставить(НСтр("ru = 'Номенклатура'; en = 'Item'", Локализация), ИнтеграцияСервер.ПолучитьВнешнийИдентификатор(Выборка.Номенклатура, КлассПакета_Номенклатура));
		Данные.Вставить(НСтр("ru = 'Характеристика'; en = 'ItemCharacteristic'", Локализация), ИнтеграцияСервер.ПолучитьВнешнийИдентификатор(Выборка.ХарактеристикаНоменклатуры, КлассПакета_Характеристика));
		Данные.Вставить(НСтр("ru = 'ПартияНоменклатуры'; en = 'ItemBatch'", Локализация), ИнтеграцияСервер.ПолучитьВнешнийИдентификатор(Выборка.ПартияНоменклатуры, КлассПакета_ПартияНоменклатуры)); 
		Данные.Вставить(НСтр("ru = 'Склад'; en = 'Warehouse'", Локализация), ИнтеграцияСервер.ПолучитьВнешнийИдентификатор(Выборка.Склад, КлассПакета_Контрагент));
		Данные.Вставить(НСтр("ru = 'Состояние'; en = 'ItemStatus'", Локализация), ИнтеграцияСервер.ПолучитьВнешнийИдентификатор(Выборка.Состояние, КлассПакета_Состояния));
        Данные.Вставить(НСтр("ru = 'СостояниеНаименование'; en = 'ItemStatusName'", Локализация), СокрЛП(Выборка.Состояние));
        Если ОбъектОбработки.САдресамиХранения Тогда 
            Местоположение = МестаХраненияСервер.МестоположениеМестаХранения(Выборка.МестоХранения,Истина);
            Если Местоположение = Неопределено Тогда
                Данные.Вставить("МестоХраненияУровень2",Строка(Выборка.МестоХранения));
            ИначеЕсли Выборка.МестоХранения.Тип.Класс.Транспортный Тогда
                Данные.Вставить("МестоХраненияУровень2",Строка(Выборка.МестоХранения));
            ИначеЕсли ЗначениеЗаполнено(Местоположение.МестоХранения1) Тогда
                Данные.Вставить("МестоХраненияУровень1",Строка(Местоположение.МестоХранения1));
                Данные.Вставить("МестоХраненияУровень2",Строка(Выборка.МестоХранения));
            Иначе
                Данные.Вставить("МестоХраненияУровень1",Строка(Выборка.МестоХранения));
            КонецЕсли;
        КонецЕсли;
		Данные.Вставить(НСтр("ru = 'Количество'; en = 'Barcode'", Локализация), Выборка.Количество);
		массивСтроки.Добавить(Данные);
	КонецЦикла;
	сткДанные.Вставить(НСтр("ru = 'Товары'; en = 'Items'", Локализация), массивСтроки);

    УстановитьСвойствоСообщения(НСтр("ru = 'Класс'; en = 'Class'", Локализация), "Остатки");

	РезультатОбработки.Body = сшпОбщегоНазначения.ПреобразоватьСтруктуруПоФормату(ФорматСообщения, сткДанные);
	ОтправитьОтвет = Истина;	
