//ИмяТаблицыБазыОбмена=dbo_inShippingPlan
	
	//Определение переменных
	Локализация = "ru";
	КлассПакета_Номенклатура = 3;
	КлассПакета_Контрагент = 5;
	КлассПакета_УпаковкаНоменклатуры = 10;
	КлассПакета_Партия = 11;
	КлассПакета_Состояния = 12;
	КлассПакета_Характеристика = 13;
	КлассПакета_Спецификация = 14;
	КлассПакета_Адрес = 17;                             //++НикифоркинСГ, 05.03.2025, REQ1C-5371
	
	КлассПакета_ПланОтгрузки = 62;
	
	
	
	сткСообщение = Новый Структура("СостояниеСообщения, ТекстОшибки, КоличествоПопытокОжидания, Задержка, Отказ, Узел, СоответствиеНеНайденныхИдентификаторов", 
	СостояниеСообщения, ТекстОшибки, КоличествоПопытокОжидания(), Задержка, Ложь, ИсточникСообщения(), Новый Соответствие);
	
	// Получение тела сообщения
	xdtoОбъект = сшпОбщегоНазначения.ПолучитьОбъектXDTO(Перечисления.сшпФорматыСообщений.JSON, ТелоСообщения());
	
	//Получение полей
	СсылкаXDTO = Неопределено;
	ПроведенXDTO = Истина;
	ПометкаУдаленияXDTO = Ложь;
	НомерXDTO = "";
	ДатаXDTO = Дата(1,1,1);
	СтатусXDTO = Неопределено;
	ПлановаяДатаВыполненияXDTO = Дата(1,1,1);
	ТипXDTO = Неопределено;
	ПолучательXDTO = Неопределено;
	КомментарийXDTO = "";
	ОрганизацияXDTO = Неопределено;
	ПриоритетXDTO = Неопределено;
	
	ДатаРегистрацииXDTO = Дата(1,1,1);
	
	
	ТаблицаТоваровXDTO = Неопределено;
	
	Свойства = xdtoОбъект.Свойства();
	Если Свойства.Получить(НСтр("ru = 'Данные'; en = 'Data'", Локализация)) <> Неопределено Тогда
		ДанныеXDTO = xdtoОбъект.Получить(НСтр("ru = 'Данные'; en = 'Data'", Локализация));
		Если ДанныеXDTO <> Неопределено Тогда
			СсылкаXDTO = ДанныеXDTO.Получить(НСтр("ru = 'Ссылка'; en = 'ID'", Локализация)); 
			ПометкаУдаленияXDTO = ДанныеXDTO.Получить(НСтр("ru = 'ПометкаУдаления'; en = 'DeletionMark'", Локализация));
			НомерXDTO = ДанныеXDTO.Получить(НСтр("ru = 'Номер'; en = 'Number'", Локализация));
			ДатаXDTO = ДанныеXDTO.Получить(НСтр("ru = 'Дата'; en = 'Date'", Локализация));
		КонецЕсли;
	КонецЕсли;
	Если Свойства.Получить(НСтр("ru = 'ПлановаяДатаВыполнения'; en = 'ScheduledExecutionDate'", Локализация)) <> Неопределено Тогда
		ПлановаяДатаВыполненияXDTO = xdtoОбъект.Получить(НСтр("ru = 'ПлановаяДатаВыполнения'; en = 'ScheduledExecutionDate'", Локализация));
	КонецЕсли;
	
	Если Свойства.Получить(НСтр("ru = 'Тип'; en = 'Type'", Локализация)) <> Неопределено Тогда
		ТипXDTO = xdtoОбъект.Получить(НСтр("ru = 'Тип'; en = 'Type'", Локализация));
	КонецЕсли;

    //++НикифоркинСГ, 05.03.2025, REQ1C-5371
    Если Свойства.Получить(НСтр("ru = 'АдресДоставки'; en = 'DeliveryAddress'", Локализация)) <> Неопределено Тогда
		АдресДоставкиXDTO = xdtoОбъект.Получить(НСтр("ru = 'АдресДоставки'; en = 'DeliveryAddress'", Локализация));
	КонецЕсли; //--НикифоркинСГ, 05.03.2025, REQ1C-5371
	
	Если Свойства.Получить(НСтр("ru = 'Получатель'; en = 'Recipient'", Локализация)) <> Неопределено Тогда
		ДанныеXDTO = xdtoОбъект.Получить(НСтр("ru = 'Получатель'; en = 'Recipient'", Локализация));
		Если ДанныеXDTO <> Неопределено Тогда
			ПолучательXDTO = ДанныеXDTO.Получить(НСтр("ru = 'Ссылка'; en = 'BusinessPartnerID'", Локализация));
			ПолучательИмяXDTO = ДанныеXDTO.Получить(НСтр("ru = 'Наименование'; en = 'BusinessPartner'", Локализация));
			ТипПолучателяXDTO = ДанныеXDTO.Получить(НСтр("ru = 'Тип'; en = 'Type'", Локализация));
		КонецЕсли;
	КонецЕсли;
	
	//  Если Свойства.Получить(НСтр("ru = 'Рейс'; en = 'Delivery'", Локализация)) <> Неопределено Тогда
	//      РейсXDTO = xdtoОбъект.Получить(НСтр("ru = 'Рейс'; en = 'Delivery'", Локализация));
	//	КонецЕсли;
	Если Свойства.Получить(НСтр("ru = 'Комментарий'; en = 'Comment'", Локализация)) <> Неопределено Тогда
		КомментарийXDTO = xdtoОбъект.Получить(НСтр("ru = 'Комментарий'; en = 'Comment'", Локализация));
	КонецЕсли;
	Если Свойства.Получить(НСтр("ru = 'ДатаРегистрации'; en = 'RegistrationDate'", Локализация)) <> Неопределено Тогда
		ДатаРегистрацииXDTO = xdtoОбъект.Получить(НСтр("ru = 'ДатаРегистрации'; en = 'RegistrationDate'", Локализация));
	КонецЕсли;
	Если Свойства.Получить(НСтр("ru = 'Товары'; en = 'Lines'", Локализация)) <> Неопределено Тогда
		ТаблицаТоваровXDTO = xdtoОбъект.Получить(НСтр("ru = 'Товары'; en = 'Lines'", Локализация));
	КонецЕсли;
	
	//Поиск объекта
	ЛокальныйИдентификатор_Ссылка = ИнтеграцияСервер.ПолучитьЛокальныйИдентификатор(СсылкаXDTO, КлассПакета_ПланОтгрузки, сткСообщение.Узел);
	СсылкаНаЭлемент = Документы.ПланОтгрузки.ПолучитьСсылку(Новый УникальныйИдентификатор(ЛокальныйИдентификатор_Ссылка));
	
	ЭтоНовый = Ложь;
	новыйОбъект = СсылкаНаЭлемент.ПолучитьОбъект();
	Если новыйОбъект = Неопределено Тогда
		новыйОбъект = Документы.ПланОтгрузки.СоздатьДокумент();
		новыйОбъект.УстановитьСсылкуНового(СсылкаНаЭлемент);
		новыйОбъект.Дата = ТекущаяДата();
		ЭтоНовый = Истина;
		ИсходныйСтатус = Справочники.СтатусыДокументов.Новый;
		новыйОбъект.ДатаЗагрузки = ИнтеграцияСервер.ПолучитьДату(ДатаРегистрацииXDTO);
	Иначе
		ИсходныйСтатус = СтатусыДокументовСервер.СтатусДокументаПоСсылке(СсылкаНаЭлемент);
		ДатаЗагрузки = ИнтеграцияСервер.ПолучитьДату(ДатаРегистрацииXDTO);
		Если новыйОбъект.ДатаЗагрузки > ДатаЗагрузки Тогда
			СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
			Перейти ~Выход;
		Иначе
			новыйОбъект.ДатаЗагрузки = ДатаЗагрузки;
		КонецЕсли;
	КонецЕсли;
	
	Если ИсходныйСтатус = Справочники.СтатусыДокументов.Обрабатывается Тогда
		сткСообщение.Отказ = Истина;
		СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОжиданиеОбработки;
		Перейти ~Выход;
	КонецЕсли;
	
	//Реквизиты шапки
	ПометкаУдаления = ИнтеграцияСервер.ПолучитьБулево(ПометкаУдаленияXDTO);
	Если ПометкаУдаления Тогда
		Если ЭтоНовый Тогда
			СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;
			Перейти ~Выход;
		КонецЕсли;
	КонецЕсли;
	Проведен = ИнтеграцияСервер.ПолучитьБулево(ПроведенXDTO);
	
	новыйОбъект.ДатаКИС = ИнтеграцияСервер.ПолучитьДату(ДатаXDTO);
	ДатаОтгрузки = ИнтеграцияСервер.ПолучитьДату(ПлановаяДатаВыполненияXDTO, новыйОбъект.ДатаОтгрузки);
	новыйОбъект.ДатаОтгрузки = НачалоДня(ДатаОтгрузки);
	Если новыйОбъект.ДатаОтгрузки <> ДатаОтгрузки Тогда
		новыйОбъект.ВремяОтгрузки = ДатаОтгрузки;
	Иначе	
		новыйОбъект.ВремяОтгрузки = '00010101';
	КонецЕсли;
	ТипОтгрузки =Справочники.ТипыОтгрузки.НайтиПоНаименованию(ТипXDTO,Истина);
	
    новыйОбъект.АдресДоставки = ИнтеграцияСервер.ПолучитьСсылку(АдресДоставкиXDTO, "Справочник.АдресаДоставки", КлассПакета_Адрес, сткСообщение);      //++НикифоркинСГ, 05.03.2025, REQ1C-5371

	//новыйОбъект.Рейс = ИнтеграцияСервер.ПолучитьСсылкуПоОбъекту(РейсXDTO, "Документ.Рейс", КлассПакета_Рейс, сткСообщение);
	новыйОбъект.Комментарий = КомментарийXDTO;            
	
	СсылкаНаЭлементК = ИнтеграцияСервер.ПолучитьСсылку(ПолучательXDTO,"Справочник.Контрагенты",  КлассПакета_Контрагент, сткСообщение);
	НовыйОбъект.Контрагент = СсылкаНаЭлементК;
	Если НЕ ЗначениеЗаполнено(новыйОбъект.Контрагент ) Тогда
		новыйОбъект.Контрагент =   справочники.Контрагенты.НайтиПоНаименованию(ПолучательИмяXDTO,Истина);
	КонецЕсли;	
	//Если  ЗначениеЗаполнено(новыйОбъект.Контрагент ) Тогда
	//	Если ТипПолучателяXDTO ="Склад" и  НЕ новыйОбъект.Контрагент.Склад  Тогда
	//		ОК = новыйОбъект.Контрагент.ПолучитьОбъект();
	//		ОК.Склад = Истина;
	//		ОК.Записать();
	//	КонецЕсли;
	//КонецЕсли;
	
	новыйОбъект.НомерКИС = НомерXDTO;
	
	новыйОбъект.Приоритет = Перечисления.Приоритеты.Обычный;
	
	Если Не ЗначениеЗаполнено(новыйОбъект.Процесс) И ЗначениеЗаполнено(ТипОтгрузки) Тогда
		новыйОбъект.Процесс = ТипОтгрузки.Процесс;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(новыйОбъект.Процесс) Тогда
		новыйОбъект.Процесс = Справочники.ПроцессыОтгрузки.Основной;
	КонецЕсли;
	
	новыйОбъект.ТипОтгрузки = ТипОтгрузки;
	
	//Табличная часть Товары
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Таблица.Колонки.Добавить("УпаковкаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.УпаковкиНоменклатуры"));
	Таблица.Колонки.Добавить("Состояние", Новый ОписаниеТипов("СправочникСсылка.СостоянияОбъектовХранения"));
	Таблица.Колонки.Добавить("ХарактеристикаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Таблица.Колонки.Добавить("ПартияНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ПартииНоменклатуры"));
	Таблица.Колонки.Добавить("НомерПартии", Новый ОписаниеТипов("Строка"));
	//Таблица.Колонки.Добавить("СрокГодности", Новый ОписаниеТипов("Дата"));
	//Таблица.Колонки.Добавить("СпецификацияНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.СпецификацииНоменклатуры"));
	Таблица.Колонки.Добавить("Количество", Метаданные.ОпределяемыеТипы.Количество.Тип);
	Таблица.Колонки.Добавить("КоличествоУпаковок", Метаданные.ОпределяемыеТипы.Количество.Тип);
	//Таблица.Колонки.Добавить("КоличествоПлан", Метаданные.ОпределяемыеТипы.Количество.Тип);
	//Таблица.Колонки.Добавить("КоличествоУпаковокПлан", Метаданные.ОпределяемыеТипы.Количество.Тип);
	Таблица.Колонки.Добавить("КодКИС", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("бр_ГодПроизводстваМин", Новый ОписаниеТипов("Дата"));
    Таблица.Колонки.Добавить("бр_ГодПроизводстваМакс", Новый ОписаниеТипов("Дата"));
	//	Таблица.Колонки.Добавить("СерийныеНомера", Новый ОписаниеТипов("Строка"));
	
	Если ТаблицаТоваровXDTO <> Неопределено Тогда
		текТаблица = ТаблицаТоваровXDTO.Последовательность();
		Для Инд = 0 По текТаблица.Количество() - 1 Цикл
			
			НоменклатураXDTO = Неопределено;
			УпаковкаXDTO = Неопределено;
			СостояниеXDTO = Неопределено;
			ХарактеристикаXDTO = Неопределено;
			ПартияXDTO = Неопределено;
			НомерПартииXDTO = "";
			СрокГодностиXDTO = Дата(1,1,1);        
			КоличествоXDTO = 0;
			КодСтрокиXDTO = "";
			бр_ГодПроизводстваМинXDTO = Дата(1,1,1);
            бр_ГодПроизводстваМаксXDTO = Дата(1,1,1);

			xdtoСтрока = текТаблица.ПолучитьЗначение(Инд); 
			Свойства = xdtoСтрока.Свойства();
			
			Если Свойства.Получить(НСтр("ru = 'Номенклатура'; en = 'Item'", Локализация)) <> Неопределено Тогда
				НоменклатураXDTO = xdtoСтрока.Получить(НСтр("ru = 'Номенклатура'; en = 'Item'", Локализация));
			КонецЕсли;   
			Если Свойства.Получить(НСтр("ru = 'Упаковка'; en = 'ItemPackage'", Локализация)) <> Неопределено Тогда
				УпаковкаXDTO = xdtoСтрока.Получить(НСтр("ru = 'Упаковка'; en = 'ItemPackage'", Локализация));
			КонецЕсли;
			Если Свойства.Получить(НСтр("ru = 'Состояние'; en = 'ItemStatus'", Локализация)) <> Неопределено Тогда
				СостояниеXDTO = xdtoСтрока.Получить(НСтр("ru = 'Состояние'; en = 'ItemStatus'", Локализация));
			КонецЕсли;
			Если Свойства.Получить(НСтр("ru = 'Характеристика'; en = 'ItemCharacteristic'", Локализация)) <> Неопределено Тогда
				ХарактеристикаXDTO = xdtoСтрока.Получить(НСтр("ru = 'Характеристика'; en = 'ItemCharacteristic'", Локализация));
			КонецЕсли;
			Если Свойства.Получить(НСтр("ru = 'Партия'; en = 'ItemBatch'", Локализация)) <> Неопределено Тогда
				ПартияXDTO = xdtoСтрока.Получить(НСтр("ru = 'Партия'; en = 'ItemBatch'", Локализация));
			КонецЕсли;
			Если Свойства.Получить(НСтр("ru = 'КоличествоПлан'; en = 'QuantityPlan'", Локализация)) <> Неопределено Тогда
				КоличествоXDTO = xdtoСтрока.Получить(НСтр("ru = 'КоличествоПлан'; en = 'QuantityPlan'", Локализация));
			КонецЕсли;
			Если Свойства.Получить(НСтр("ru = 'КодСтроки'; en = 'LineCode'", Локализация)) <> Неопределено Тогда
				КодСтрокиXDTO = xdtoСтрока.Получить(НСтр("ru = 'КодСтроки'; en = 'LineCode'", Локализация));
			КонецЕсли;
			Если Свойства.Получить(НСтр("ru = 'ГодПроизводстваОт'; en = 'DateManufacturedMin'", Локализация)) <> Неопределено Тогда
                бр_ГодПроизводстваМинXDTO = xdtoСтрока.Получить(НСтр("ru = 'ГодПроизводстваОт'; en = 'DateManufacturedMin'", Локализация));
            КонецЕсли; 
            Если Свойства.Получить(НСтр("ru = 'ГодПроизводстваДо'; en = 'DateManufacturedMax'", Локализация)) <> Неопределено Тогда
                бр_ГодПроизводстваМаксXDTO = xdtoСтрока.Получить(НСтр("ru = 'ГодПроизводстваДо'; en = 'DateManufacturedMax'", Локализация));
            КонецЕсли; 
			
			текСтрока = Таблица.Добавить();
			текСтрока.КодКИС = КодСтрокиXDTO;     
			Если НЕ НоменклатураXDTO = Неопределено И ЗначениеЗаполнено(НоменклатураXDTO.Ссылка) Тогда
				текСтрока.Номенклатура = ИнтеграцияСервер.ПолучитьСсылку(НоменклатураXDTO.Ссылка,"Справочник.Номенклатура",КлассПакета_Номенклатура,сткСообщение); 
				Если ЗначениеЗаполнено(УпаковкаXDTO.Наименование) Тогда
					текСтрока.УпаковкаНоменклатуры = Справочники.УпаковкиНоменклатуры.НайтиПоНаименованию(УпаковкаXDTO.Наименование,Истина,,текСтрока.Номенклатура);
				КонецЕсли;   
			КонецЕсли;       
			Если ЗначениеЗАполнено(СостояниеXDTO) Тогда
				текСтрока.Состояние =  ИнтеграцияСервер.ПолучитьСсылку(СостояниеXDTO,"Справочник.СостоянияОбъектовХранения",КлассПакета_Состояния,сткСообщение);   
			КонецЕсли;
			Если  НЕ ХарактеристикаXDTO = Неопределено И ЗначениеЗаполнено(ХарактеристикаXDTO.Ссылка) Тогда
				текСтрока.ХарактеристикаНоменклатуры =ИнтеграцияСервер.ПолучитьСсылку(ХарактеристикаXDTO.Ссылка,"Справочник.ХарактеристикиНоменклатуры",КлассПакета_Характеристика,сткСообщение);   
			КонецЕсли;
			текСтрока.Количество = КоличествоXDTO;    
			Если не ПартияXDTO = Неопределено и ЗначениеЗаполнено(ПартияXDTO.ПартияСсылка) Тогда
				текСтрока.ПартияНоменклатуры =ИнтеграцияСервер.ПолучитьСсылку(ПартияXDTO.ПартияСсылка,"Справочник.ПартииНоменклатуры",КлассПакета_Партия,сткСообщение,,, текСтрока.Номенклатура);

				//Если Не ЗначениеЗаполнено(текСтрока.ПартияНоменклатуры) Тогда
				//    текСтрока.НомерПартии = НомерПартииXDTO;
				//    текСтрока.СрокГодности = ИнтеграцияСервер.ПолучитьДату(СрокГодностиXDTO);
				//Иначе
				//    текСтрока.НомерПартии = текСтрока.ПартияНоменклатуры.Код;
				//    текСтрока.СрокГодности = текСтрока.ПартияНоменклатуры.СрокГодности;
				//КонецЕсли;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(текСтрока.КоличествоУпаковок) Тогда
				Если Не текСтрока.УпаковкаНоменклатуры = НЕопределено  Тогда
					текСтрока.КоличествоУпаковок = текСтрока.Количество;
				ИначеЕсли текСтрока.УпаковкаНоменклатуры.ВидУчета = Перечисления.ВидыУчетаУпаковок.УпаковкаШтучногоТовара Тогда
					текСтрока.КоличествоУпаковок = Цел(текСтрока.Количество / ?(текСтрока.УпаковкаНоменклатуры.Коэффициент =0,1,текСтрока.УпаковкаНоменклатуры.Коэффициент));
				ИначеЕсли текСтрока.УпаковкаНоменклатуры.ВидУчета = Перечисления.ВидыУчетаУпаковок.УпаковкаШтучногоТовара Тогда
					текСтрока.КоличествоУпаковок = Окр(текСтрока.Количество / ?(текСтрока.УпаковкаНоменклатуры.Коэффициент = 0,1,текСтрока.УпаковкаНоменклатуры.Коэффициент));
				Иначе
					текСтрока.КоличествоУпаковок = текСтрока.Количество / ?(текСтрока.УпаковкаНоменклатуры.Коэффициент =0 ,1,текСтрока.УпаковкаНоменклатуры.Коэффициент);
				КонецЕсли;
			КонецЕсли;
            //надо уточнить в каком виде передаются данные
            //пока считаем что это строка вида "2022"
            текСтрока.бр_ГодПроизводстваМин = НачалоГода(Дата(бр_ГодПроизводстваМинXDTO + "0101"));
            текСтрока.бр_ГодПроизводстваМакс = КонецГода(Дата(бр_ГодПроизводстваМаксXDTO + "0101"));
		КонецЦикла;
	КонецЕсли;    
	
	Если сткСообщение.СоответствиеНеНайденныхИдентификаторов.Количество() Тогда
		ИнтеграцияСервер.СформироватьЗапросНаПолучениеДанных(сткСообщение.СоответствиеНеНайденныхИдентификаторов, сткСообщение.Узел);
	КонецЕсли;
	
	Если Не сткСообщение.Отказ Тогда
		новыйОбъект.ДополнительныеСвойства.Вставить("Статус", Справочники.СтатусыДокументов.НеЗагружен);
		новыйОбъект.ДополнительныеСвойства.Вставить("СтатусИзменен");
		Если Не ИнтеграцияСервер.ЗаписатьОбъектВБазуДанных(новыйОбъект, сткСообщение) Тогда
			Перейти ~Выход1;
		КонецЕсли;
		
		//Строки планов отгрузки
		НаборСтрок = РегистрыСведений.СтрокиПлановОтгрузки.СоздатьНаборЗаписей();
		НаборСтрок.Отбор.План.Установить(новыйОбъект.Ссылка);
		
		СтараяТаблица = КонвертацияДокументов.ТекущиеЗаписиСтрокОтгрузки(НаборСтрок);
		ТаблицаСтрок = СтараяТаблица.Скопировать();
		ТаблицаСтрок.Колонки.Добавить("СтароеКоличество", Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(12, 3)));
		
		Заказ = Неопределено;
		КоличествоЗаказов = 0;
		Для Каждого текСтрока Из ТаблицаСтрок Цикл
			Если текСтрока.ЗаказНаОтгрузку <> Заказ Тогда
				КоличествоЗаказов = КоличествоЗаказов + 1;
				Заказ = текСтрока.ЗаказНаОтгрузку;
			КонецЕсли;
			текСтрока.СтароеКоличество = текСтрока.Количество;
			текСтрока.Количество = 0;
			текСтрока.КоличествоУпаковок = 0;
		КонецЦикла;
		
		ТребуетсяКонвертация = Ложь;
		ОчиститьЗнО = Ложь;
		
		сткПоискПоКоду = Новый Структура("КодКИС");
		сткПоискПоПараметрам = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Состояние, ПартияНоменклатуры");
		Для Каждого текСтрока Из Таблица Цикл
			Если ЗначениеЗаполнено(текСтрока.КодКИС) Тогда
				сткПоиск = сткПоискПоКоду;
			Иначе
				сткПоиск = сткПоискПоПараметрам;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(сткПоиск, текСтрока);
			сткПоиск.Вставить("Количество", 0);
			мсвСтрок = ТаблицаСтрок.НайтиСтроки(сткПоиск);
			
			НераспределенноеКоличество = текСтрока.Количество;
			НераспределенноеКоличествоУпаковок = текСтрока.КоличествоУпаковок;
			Для Каждого текНайденнаяСтрока Из мсвСтрок Цикл
				Если КоличествоЗаказов > 1 Тогда
					КоличествоКРаспределению = Мин(НераспределенноеКоличество, текНайденнаяСтрока.СтароеКоличество);
					Если Не текСтрока.УпаковкаНоменклатуры = Неопределено Тогда
						Если текСтрока.УпаковкаНоменклатуры.ВидУчета = Перечисления.ВидыУчетаУпаковок.УпаковкаШтучногоТовара Тогда
							КоличествоКРаспределениюУпаковок = Цел(КоличествоКРаспределению / ?(текСтрока.УпаковкаНоменклатуры.Коэффициент =0,1,текСтрока.УпаковкаНоменклатуры.Коэффициент));
							КоличествоКРаспределению = КоличествоКРаспределениюУпаковок * текСтрока.УпаковкаНоменклатуры.Коэффициент;
						ИначеЕсли текСтрока.УпаковкаНоменклатуры.ВидУчета = Перечисления.ВидыУчетаУпаковок.УпаковкаМерногоТовара Тогда
							КоличествоКРаспределениюУпаковок = Окр(КоличествоКРаспределению / ?(текСтрока.УпаковкаНоменклатуры.Коэффициент =0,1,текСтрока.УпаковкаНоменклатуры.Коэффициент));
							Если КоличествоКРаспределению > КоличествоКРаспределениюУпаковок * (текСтрока.УпаковкаНоменклатуры.Коэффициент + текСтрока.УпаковкаНоменклатуры.ДельтаКоэффициент) Тогда
								КоличествоКРаспределению = КоличествоКРаспределениюУпаковок * (текСтрока.УпаковкаНоменклатуры.Коэффициент + текСтрока.УпаковкаНоменклатуры.ДельтаКоэффициент);
							ИначеЕсли КоличествоКРаспределению < КоличествоКРаспределениюУпаковок * (текСтрока.УпаковкаНоменклатуры.Коэффициент - текСтрока.УпаковкаНоменклатуры.ДельтаКоэффициент) Тогда
								КоличествоКРаспределениюУпаковок = КоличествоКРаспределениюУпаковок - 1;
								Если КоличествоКРаспределению > КоличествоКРаспределениюУпаковок * (текСтрока.УпаковкаНоменклатуры.Коэффициент + текСтрока.УпаковкаНоменклатуры.ДельтаКоэффициент) Тогда
									КоличествоКРаспределению = КоличествоКРаспределениюУпаковок * (текСтрока.УпаковкаНоменклатуры.Коэффициент + текСтрока.УпаковкаНоменклатуры.ДельтаКоэффициент);
								КонецЕсли;
							КонецЕсли;
						Иначе
							КоличествоКРаспределениюУпаковок = КоличествоКРаспределению / ?(текСтрока.УпаковкаНоменклатуры.Коэффициент =0,1,текСтрока.УпаковкаНоменклатуры.Коэффициент);
						КонецЕсли;
					Иначе
						КоличествоКРаспределениюУпаковок = КоличествоКРаспределению;
					КонецЕсли;
				Иначе
					КоличествоКРаспределению = НераспределенноеКоличество;
					КоличествоКРаспределениюУпаковок = текСтрока.КоличествоУпаковок;
				КонецЕсли;
				
				Если КоличествоКРаспределению > 0 Тогда
					Если текСтрока.Номенклатура <> текНайденнаяСтрока.Номенклатура
						Или текСтрока.ПартияНоменклатуры <> текНайденнаяСтрока.ПартияНоменклатуры
						Или текСтрока.Состояние <> текНайденнаяСтрока.Состояние
						Или текСтрока.ХарактеристикаНоменклатуры <> текНайденнаяСтрока.ХарактеристикаНоменклатуры Тогда
						текНайденнаяСтрока.ОбъектХранения = Неопределено;
						текНайденнаяСтрока.Партия = Неопределено;
						текНайденнаяСтрока.Упаковка = Неопределено;
						текНайденнаяСтрока.КонфигурацияУпаковок = Неопределено;
						
						ТребуетсяКонвертация = Истина;
					КонецЕсли;
					Если текСтрока.УпаковкаНоменклатуры <> текНайденнаяСтрока.УпаковкаНоменклатуры Тогда
						текНайденнаяСтрока.Упаковка = Неопределено;
						
						ТребуетсяКонвертация = Истина;
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(текНайденнаяСтрока, текСтрока,, "Количество, КоличествоУпаковок");
					
					текНайденнаяСтрока.Количество = КоличествоКРаспределению;
					текНайденнаяСтрока.КоличествоУпаковок = КоличествоКРаспределениюУпаковок;
					
					НераспределенноеКоличество = НераспределенноеКоличество - КоличествоКРаспределению;
					НераспределенноеКоличествоУпаковок = НераспределенноеКоличествоУпаковок - КоличествоКРаспределениюУпаковок;
					Если НераспределенноеКоличество = 0 Тогда
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если НераспределенноеКоличество Тогда
				сткПоискПоКодуНК = Новый Структура("КодКИС");
				сткПоискПоПараметрамНК = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Состояние, ПартияНоменклатуры");
				Если ЗначениеЗаполнено(текСтрока.КодКИС) Тогда
					сткПоискНК = сткПоискПоКодуНК;
				Иначе
					сткПоискНК = сткПоискПоПараметрамНК;
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(сткПоискНК, текСтрока);
				сткПоискНК.Вставить("ЗаказНаОтгрузку", Документы.ЗаказНаОтгрузку.ПустаяСсылка());
				НадСтр = ТаблицаСтрок.НайтиСтроки(сткПоискНК);
				Если НадСтр.Количество() Тогда
					НоваяСтрока = НадСтр[0];
					НоваяСтрока.Количество = НоваяСтрока.Количество + НераспределенноеКоличество;
					НоваяСтрока.КоличествоУпаковок = НоваяСтрока.КоличествоУпаковок + НераспределенноеКоличествоУпаковок;
					Если НераспределенноеКоличествоУпаковок = 0 Тогда
						НоваяСтрока.УпаковкаНоменклатуры = Неопределено;
						НоваяСтрока.КоличествоУпаковок = НоваяСтрока.КоличествоУпаковок + НераспределенноеКоличество;
					КонецЕсли;
				Иначе
					НоваяСтрока = ТаблицаСтрок.Добавить();
					НоваяСтрока.План = новыйОбъект.Ссылка;
					ЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрока,, "Количество, КоличествоУпаковок");
					
					НоваяСтрока.Количество = НераспределенноеКоличество;
					НоваяСтрока.КоличествоУпаковок = НераспределенноеКоличествоУпаковок;
					Если НераспределенноеКоличествоУпаковок = 0 Тогда
						НоваяСтрока.УпаковкаНоменклатуры = Неопределено;
						НоваяСтрока.КоличествоУпаковок = НераспределенноеКоличество;
					КонецЕсли;
				КонецЕсли;
				ТребуетсяКонвертация = Истина;
				ОчиститьЗнО = Истина;
			КонецЕсли;
		КонецЦикла;
		
		МассивУдаляемыхСтрок = Новый Массив;
		Для Каждого текСтрока Из ТаблицаСтрок Цикл
			Если (ИсходныйСтатус = Справочники.СтатусыДокументов.НеЗагружен 
				Или ИсходныйСтатус = Справочники.СтатусыДокументов.Новый) 
				И текСтрока.Количество = 0 
				Тогда
				МассивУдаляемыхСтрок.Добавить(текСтрока);
			КонецЕсли;
			Если ПометкаУдаления Или Не Проведен Тогда
				текСтрока.Количество = 0;
				текСтрока.КоличествоУпаковок = 0;
			КонецЕсли;
		КонецЦикла;
		Для Каждого Строка Из МассивУдаляемыхСтрок Цикл
			ТаблицаСтрок.Удалить(Строка);
		КонецЦикла;
		Если ОчиститьЗнО И ЗначениеЗаполнено(новыйОбъект.ЗаказНаОтгрузку) Тогда
			новыйОбъект.ЗаказНаОтгрузку = Неопределено;
			Если Не ИнтеграцияСервер.ЗаписатьОбъектВБазуДанных(новыйОбъект, сткСообщение) Тогда
				Перейти ~Выход1;
			КонецЕсли;
		КонецЕсли;
		НаборСтрок.Загрузить(ТаблицаСтрок);
		Если ТребуетсяКонвертация Тогда
			НаборСтрок.ДополнительныеСвойства.Вставить("ЗаполнятьОбъектХраненияЕслиНеЗаполнен");
		КонецЕсли;
		Если Не ИнтеграцияСервер.ЗаписатьСтрокиДокументаВБазуДанных(новыйОбъект.Ссылка, НаборСтрок, СтараяТаблица, сткСообщение) Тогда
			Перейти ~Выход1;
		КонецЕсли;
		
		Загружен = Проведен;
		Для Каждого текСтрока Из НаборСтрок Цикл
			Если Не ЗначениеЗаполнено(текСтрока.ОбъектХранения) Тогда
				Загружен = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ПометкаУдаления Тогда
			СтатусыДокументовСервер.УстановитьСтатусДокумента(новыйОбъект.Ссылка, Справочники.СтатусыДокументов.Отменен);
		ИначеЕсли ИсходныйСтатус = Справочники.СтатусыДокументов.Отменен Или (ИсходныйСтатус = Справочники.СтатусыДокументов.НеЗагружен И НаборСтрок.Количество()) Тогда
			СтатусыДокументовСервер.УстановитьСтатусДокумента(новыйОбъект.Ссылка, Справочники.СтатусыДокументов.Новый);
		ИначеЕсли Загружен Тогда
			Если ИсходныйСтатус = Справочники.СтатусыДокументов.Обработан Тогда
				СтатусыДокументовСервер.УстановитьСтатусДокумента(новыйОбъект.Ссылка, Справочники.СтатусыДокументов.Скорректирован);
			Иначе
				СтатусыДокументовСервер.УстановитьСтатусДокумента(новыйОбъект.Ссылка, ИсходныйСтатус);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
~Выход1:	
	СостояниеСообщения = сткСообщение.СостояниеСообщения;
	ТекстОшибки = сткСообщение.ТекстОшибки;
	Задержка = сткСообщение.Задержка;
~Выход:
	

	
